{"version":3,"file":"4765.0d8194cb01ca92c49c22.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/RangeSliderWithMarks.module.scss?5535","webpack://telegram-t/./src/components/ui/RangeSliderWithMarks.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/Separator.module.scss?e4cd","webpack://telegram-t/./src/components/ui/Separator.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/TextTimer.tsx","webpack://telegram-t/./src/components/ui/Toggle.module.scss?0590","webpack://telegram-t/./src/components/ui/Toggle.tsx","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://telegram-t/./src/components/ui/placeholder/Skeleton.tsx"],"sourcesContent":["import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y3ZoW17O\",\"default\":\"DWjOG2Ze\",\"alternate\":\"Lq67O2D2\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\n\nimport type { ApiUser } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n  nestedOptions?: IRadioOption[];\n  user?: ApiUser;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  nestedCheckbox?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  nestedCheckbox,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useLastCallback((event: ChangeEvent<HTMLInputElement>, nestedOptionList?: IRadioOption) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n\n    if (checked) {\n      newValues = [...values, value];\n      if (nestedOptionList && value) {\n        newValues.push(nestedOptionList.value);\n      }\n      if (nestedOptionList && value === nestedOptionList.value) {\n        nestedOptionList.nestedOptions?.forEach((nestedOption) => {\n          if (!newValues.includes(nestedOption.value)) {\n            newValues.push(nestedOption.value);\n          }\n        });\n      }\n    } else {\n      newValues = values.filter((v) => v !== value);\n      if (nestedOptionList && value === nestedOptionList.value) {\n        nestedOptionList.nestedOptions?.forEach((nestedOption) => {\n          newValues = newValues.filter((v) => v !== nestedOption.value);\n        });\n      } else if (nestedOptionList) {\n        const nestedOptionValues = nestedOptionList.nestedOptions?.map((nestedOption) => nestedOption.value) || [];\n        const hasOtherNestedValuesChecked = nestedOptionValues.some((nestedValue) => newValues.includes(nestedValue));\n        if (!hasOtherNestedValuesChecked) {\n          newValues = newValues.filter((v) => v !== nestedOptionList.value);\n        }\n      }\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  });\n  const getCheckedNestedCount = useLastCallback((nestedOptions: IRadioOption[]) => {\n    const checkedCount = nestedOptions?.filter((nestedOption) => values.includes(nestedOption.value)).length;\n    return checkedCount > 0 ? checkedCount : undefined;\n  });\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => {\n        return (\n          <Checkbox\n            label={option.label}\n            subLabel={option.subLabel}\n            value={option.value}\n            checked={selected.indexOf(option.value) !== -1}\n            disabled={option.disabled || disabled}\n            isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n            onChange={handleChange}\n            nestedCheckbox={nestedCheckbox}\n            nestedCheckboxCount={getCheckedNestedCount(option.nestedOptions ?? [])}\n            nestedOptionList={option}\n            values={values}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToDataUri, blobToFile } from '../../util/files';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\nimport Loading from './Loading';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useOldLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kWQHzIMD\",\"isDragging\":\"k0c5WDAy\",\"knob\":\"UpzQzcvs\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <i className=\"icon icon-sort\" aria-hidden />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useOldLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject, UIEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!loadMoreBackwards || !container) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = container;\n    if (clientHeight && scrollHeight < clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  secondaryIconClassName?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  allowSelection?: boolean;\n  withColorTransition?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  secondaryIconClassName,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  allowSelection,\n  withColorTransition,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    allowSelection && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n    withColorTransition && 'with-color-transition',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {leftElement}\n        {icon && (\n          <Icon name={icon} className={buildClassName('ListItem-main-icon', iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {secondaryIcon && (\n          <Button\n            className={buildClassName('secondary-icon', secondaryIconClassName)}\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <Icon name={secondaryIcon} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"h039vb1K\",\"thin\":\"NGKaFgra\",\"thick\":\"_BdnjPEa\"};","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'thin' | 'thick';\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className, size = 'thin' }) => {\n  return (\n    <div className={buildClassName(styles.root, styles[size], className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nexport const ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  headerClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  hasAbsoluteCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  dialogRef?: React.RefObject<HTMLDivElement>;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  headerClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  hasAbsoluteCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  shouldSkipHistoryAnimations,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n  const withCloseButton = hasCloseButton || hasAbsoluteCloseButton;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useOldLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title && !withCloseButton) return undefined;\n\n    return (\n      <div className={buildClassName('modal-header', headerClassName)}>\n        {withCloseButton && (\n          <Button\n            className={buildClassName(hasAbsoluteCloseButton && 'modal-absolute-close-button')}\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { CallbackAction } from '../../global/types';\nimport type { TextPart } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction | CallbackAction[];\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\n\nimport Icon from '../common/icons/Icon';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2;\nconst STROKE_WIDTH_XL = 3;\nconst PADDING = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  rotationOffset?: number;\n  withColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  rotationOffset,\n  withColor,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  const dpr = useDevicePixelRatio();\n\n  const color = useDynamicColorListener(canvasRef, !withColor);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * dpr,\n        (size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH) * dpr,\n        color ?? 'white',\n        currentProgress,\n        dpr,\n        isFirst,\n        rotationOffset,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width, dpr, rotationOffset, color]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      {!noCross && <Icon name=\"close\" />}\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  dpr: number,\n  shouldInit = false,\n  rotationOffset?: number,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING * dpr;\n  const offset = rotationOffset ?? (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * offset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent, MouseEventHandler } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  label?: TeactNode;\n  subLabel?: TeactNode;\n  value?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  isLink?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  withIcon?: boolean;\n  className?: string;\n  onlyInput?: boolean;\n  subLabelClassName?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSubLabelClick?: MouseEventHandler<HTMLSpanElement> | undefined;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  subLabelClassName,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  className,\n  onlyInput,\n  withIcon,\n  isLink,\n  onChange,\n  onSubLabelClick,\n}) => {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    'Radio',\n    className,\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    withIcon && 'with-icon',\n    isLoading && 'loading',\n    onlyInput && 'onlyInput',\n  );\n\n  return (\n    <label className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel\n          && (\n            <span\n              className={buildClassName(subLabelClassName, 'subLabel', isLink ? 'subLabelLink' : undefined)}\n              dir={lang.isRtl ? 'auto' : undefined}\n              onClick={isLink ? onSubLabelClick : undefined}\n            >\n              {subLabel}\n            </span>\n          )}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Radio from './Radio';\n\nexport type IRadioOption<T = string> = {\n  label: TeactNode;\n  subLabel?: TeactNode;\n  value: T;\n  hidden?: boolean;\n  className?: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n  onClickAction?: (value: string) => void;\n  isLink?: boolean;\n  withIcon?: boolean;\n  subLabelClassName?: string;\n  subLabel?: TeactNode;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n  onClickAction,\n  subLabelClassName,\n  isLink,\n  withIcon,\n  subLabel,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  const onSubLabelClick = useLastCallback((value: string) => () => {\n    onClickAction?.(value);\n  });\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={subLabel || option.subLabel}\n          subLabelClassName={subLabelClassName}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          withIcon={withIcon}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          className={option.className}\n          onChange={handleChange}\n          onSubLabelClick={onSubLabelClick(option.value)}\n          isLink={isLink}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n  isCenteredLayout?: boolean;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n  isCenteredLayout,\n}) => {\n  const lang = useOldLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  function renderTopRow() {\n    if (isCenteredLayout) {\n      return (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {!options && (\n            <>\n              <span className=\"value-min\" dir=\"auto\">{min}</span>\n              <span className=\"label\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n              <span className=\"value-max\" dir=\"auto\">{max}</span>\n            </>\n          )}\n        </div>\n      );\n    }\n\n    if (!label) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"label\" dir=\"auto\">{label}</span>\n        {!options && (\n          <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","// extracted by mini-css-extract-plugin\nexport default {\"dotWrapper\":\"s8NMMSES\",\"sliderContainer\":\"i_wrxmyh\",\"marksContainer\":\"bVlnaLCI\",\"mark\":\"AFFaq4eZ\",\"active\":\"cuogxYPG\",\"slider\":\"H_rMZrqn\",\"tickMarks\":\"O7SI4r_Y\",\"tick\":\"b6UDc3zh\",\"filled\":\"VELPJsJ0\",\"tickUnfilled\":\"K8NtimIi\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './RangeSliderWithMarks.module.scss';\n\nexport type OwnProps = {\n  marks: number[];\n  onChange: (value: number) => void;\n  rangeCount: number;\n};\n\nconst RangeSliderWithMarks: FC<OwnProps> = ({ marks, onChange, rangeCount }) => {\n  // eslint-disable-next-line no-null/no-null\n  const sliderRef = useRef<HTMLInputElement | null>(null);\n\n  const fillPercentage = useMemo(() => {\n    return ((marks.indexOf(rangeCount) / (marks.length - 1)) * 100).toFixed(2);\n  }, [marks, rangeCount]);\n\n  const rangeCountIndex = useMemo(() => marks.indexOf(rangeCount), [marks, rangeCount]);\n\n  const rangeValue = useMemo(() => {\n    return marks.indexOf(rangeCount).toString();\n  }, [marks, rangeCount]);\n\n  useLayoutEffect(() => {\n    sliderRef.current!.style.setProperty('--fill-percentage', `${fillPercentage}%`);\n  }, [fillPercentage]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(event.target.value, 10);\n    const newValue = marks[index];\n    onChange(newValue);\n  };\n\n  return (\n    <div className={styles.dotWrapper}>\n      <form>\n        <div className={styles.sliderContainer}>\n          <div className={styles.tickMarks}>\n            {marks.map((mark, index) => {\n              const isFilled = index <= rangeCountIndex;\n              return (\n                <div\n                  key={mark}\n                  className={buildClassName(\n                    styles.tick,\n                    isFilled ? styles.filled : styles.tickUnfilled,\n                  )}\n                />\n              );\n            })}\n          </div>\n          <div className={styles.marksContainer}>\n            {marks.map((mark) => (\n              <div\n                key={mark}\n                className={buildClassName(styles.mark, rangeCount === mark && styles.active)}\n              >\n                {mark}\n              </div>\n            ))}\n          </div>\n          <input\n            ref={sliderRef}\n            type=\"range\"\n            className={styles.slider}\n            min=\"0\"\n            max={marks.length - 1}\n            value={rangeValue}\n            onChange={handleChange}\n            step=\"1\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(RangeSliderWithMarks);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  resultsItemSelector?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  hasUpButton?: boolean;\n  hasDownButton?: boolean;\n  teactExperimentControlled?: boolean;\n  withBackIcon?: boolean;\n  onChange: (value: string) => void;\n  onStartBackspace?: NoneToVoidFunction;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n  onUpClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onDownClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  resultsItemSelector,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  hasUpButton,\n  hasDownButton,\n  teactExperimentControlled,\n  withBackIcon,\n  onChange,\n  onStartBackspace,\n  onReset,\n  onFocus,\n  onBlur,\n  onClick,\n  onUpClick,\n  onDownClick,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n\n    if (!isInputFocused) {\n      handleFocus();\n    }\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    onFocus?.();\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    onBlur?.();\n  }\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (!resultsItemSelector) return;\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(resultsItemSelector) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n\n    if (e.key === 'Backspace' && e.currentTarget.selectionStart === 0 && e.currentTarget.selectionEnd === 0) {\n      onStartBackspace?.();\n    }\n  });\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      onClick={onClick}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(!isLoading && !withBackIcon)}\n        className=\"icon-container-left\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {isLoading && !withBackIcon ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : withBackIcon ? (\n          <Icon name=\"arrow-left\" className=\"back-icon\" onClick={onReset} />\n        ) : (\n          <Icon name=\"search\" className=\"search-icon\" />\n        )}\n      </Transition>\n      <div>{children}</div>\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || oldLang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        teactExperimentControlled={teactExperimentControlled}\n      />\n      {hasUpButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onUpClick}\n          disabled={!onUpClick}\n          ariaLabel={lang('AriaSearchOlderResult')}\n        >\n          <Icon name=\"up\" />\n        </Button>\n      )}\n      {hasDownButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onDownClick}\n          disabled={!onDownClick}\n          ariaLabel={lang('AriaSearchNewerResult')}\n        >\n          <Icon name=\"down\" />\n        </Button>\n      )}\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container-right\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {withBackIcon && isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          (value || canClose) && onReset && (\n            <Button\n              round\n              size=\"tiny\"\n              color=\"translucent\"\n              onClick={onReset}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          )\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"axfkbhWJ\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', ((event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }), true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"LxlpQKLr\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './Separator.module.scss';\n\ntype OwnProps = {\n  children?: React.ReactNode;\n  className?: string;\n};\n\nfunction Separator({ children, className }: OwnProps) {\n  const lang = useOldLang();\n\n  return (\n    <div\n      dir={lang.isRtl ? 'rtl' : undefined}\n      className={buildClassName(styles.separator, className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Separator;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport { MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  className?: string;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector, className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useOldLang();\n\n  return (\n    <div\n      className={buildClassName('TabList', 'no-scrollbar', big && 'big', className)}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useOldLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  const resizeHeight = useLastCallback((element: HTMLTextAreaElement) => {\n    requestMutation(() => {\n      element.style.height = '0';\n      requestForcedReflow(() => {\n        const newHeight = element.scrollHeight;\n        return () => {\n          element.style.height = `${newHeight}px`;\n        };\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    resizeHeight(textarea);\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.currentTarget;\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = target.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      target.value = target.value.replace(/\\n/g, ' ');\n      target.selectionEnd = previousSelectionEnd;\n    }\n    resizeHeight(target);\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React, { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const formattedTime = formatMediaDuration(timeLeft);\n\n  return (\n    <span>\n      {lang(langKey, formattedTime)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eGD1rubd\",\"widget\":\"EXXsQxeq\",\"min\":\"C4vXj96y\",\"mid\":\"nRNm3LRD\",\"max\":\"LdztzMx0\",\"filler\":\"kudEBJOk\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Toggle.module.scss';\n\ninterface OwnProps {\n  value: 'min' | 'mid' | 'max';\n}\n\nfunction Toggle({ value }: OwnProps) {\n  return (\n    <div className={buildClassName(styles.root, 'Toggle')} aria-hidden>\n      <i className={buildClassName(styles.filler, styles[value])} />\n      <i className={buildClassName(styles.widget, styles[value])} />\n    </div>\n  );\n}\n\nexport default memo(Toggle);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Oob7moh7\",\"avatar\":\"ao0o6F_1\",\"info\":\"e94nYlC4\",\"title\":\"ANs9RCJu\",\"subtitle\":\"RSn3O5Rx\",\"animated\":\"AtWkrIxV\",\"slide\":\"_iiRl0o2\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n"],"names":["memo","_ref","title","disabled","isForForum","currentAvatarBlobUrl","onChange","selectedFile","setSelectedFile","useState","croppedBlobUrl","setCroppedBlobUrl","useEffect","handleAvatarCrop","useCallback","croppedImg","undefined","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","buildClassName","React","createElement","className","role","tabIndex","type","event","target","files","value","accept","src","draggable","alt","CropModal","file","onClose","text","isAlternateColor","ShowTransition","isOpen","Boolean","AnimatedCounter","id","options","selected","nestedCheckbox","loadingOptions","values","setValues","handleChange","useLastCallback","nestedOptionList","checked","currentTarget","newValues","push","nestedOptions","forEach","nestedOption","includes","filter","v","map","some","nestedValue","getCheckedNestedCount","checkedCount","length","option","Checkbox","label","subLabel","indexOf","isLoading","nestedCheckboxCount","header","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","children","confirmHandler","onCloseAnimationEnd","lang","useOldLang","containerRef","useRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","textPart","ref","onKeyDown","Button","isText","onClick","color","cropperResultOptions","quality","format","circle","size","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","error","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","hasCloseButton","Loading","round","ariaLabel","ZERO_POINT","x","y","onDrag","onDragEnd","style","externalStyle","knobStyle","isDisabled","state","setState","isDragging","origin","translation","handleMouseDown","e","stopPropagation","preventDefault","getClientCoordinate","current","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","fullClassName","cssStyles","useMemo","buildStyle","onMouseDown","onTouchStart","touches","clientX","clientY","isShown","buttonClassName","isRtl","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","arguments","direction","LoadMoreDirection","Backwards","Forwards","container","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","IS_ANDROID","buttonRef","icon","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","secondaryIconClassName","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","multiline","isStatic","allowSelection","withColorTransition","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","handleClick","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","useFastClick","Secondary","ButtonElementTag","dir","RippleEffect","Icon","name","Menu","autoClose","bubbleClassName","action","MenuSeparator","key","MenuItem","handler","renderText","styles","root","ANIMATION_DURATION","freezeWhenClosed","dialogRef","contentClassName","headerClassName","isSlim","hasAbsoluteCloseButton","noBackdrop","noBackdropClose","shouldSkipHistoryAnimations","onEnter","shouldRender","transitionClassNames","useShowTransition","modalRef","withCloseButton","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","trapFocus","useHistoryBack","isActive","onBack","useLayoutEffectWithPrevDeps","_ref2","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","Portal","DEFAULT_DURATION","message","duration","containerId","onDismiss","actionText","actions","getActions","setIsOpen","timerRef","closeAndDismiss","setTimeout","ANIMATION_END_DELAY","isArray","cb","payload","captureEscKeyListener","clearTimeout","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","SIZES","s","m","l","xl","MIN_PROGRESS","progress","square","transparent","noCross","rotationOffset","withColor","canvasRef","progressRef","useStateRef","dpr","useDevicePixelRatio","useDynamicColorListener","growStartedAt","prevProgress","isFirst","growFrom","animate","Math","min","max","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","offset","startAngle","PI","endAngle","ctx","getContext","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","requestMutation","subLabelClassName","hidden","onlyInput","withIcon","isLink","onSubLabelClick","Spinner","loadingOption","onClickAction","Radio","step","bold","renderValue","isCenteredLayout","Number","mainClassName","trackWidth","Fragment","marks","rangeCount","sliderRef","fillPercentage","toFixed","rangeCountIndex","rangeValue","toString","setProperty","mark","isFilled","parseInt","newValue","openTimeout","isFirstTimeActivation","onActivate","buttonProps","isMouseInside","_extends","resultsItemSelector","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","hasUpButton","hasDownButton","teactExperimentControlled","withBackIcon","onStartBackspace","onReset","onFocus","onBlur","onUpClick","onDownClick","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","oldLang","useLang","handleFocus","element","selectionStart","selectionEnd","Transition","shouldCleanup","activeKey","slideClassName","backgroundColor","props","hasArrow","labelText","htmlFor","openSystemFilesDialog","count","itemName","itemPluralName","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","usePrevious","prevChildren","fromChildrenRef","isFirstRender","noAnimation","onCheck","classNames","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","add","tabEl","prevTabEl","parentElement","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","forceReflow","SCROLL_DURATION","IS_IOS","tabs","areFolders","activeTab","big","onSwitchTab","useHorizontalScroll","scrollWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","Tab","ALL_FOLDER_ID","success","readOnly","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","resizeHeight","newHeight","textarea","previousSelectionEnd","replace","langKey","endsAt","onEnd","forceUpdate","useForceUpdate","serverTime","getServerTime","useInterval","timeLeft","formattedTime","formatMediaDuration","filler","widget","PlaceholderChatInfo","variant","animation","forceAspectRatio","inline","aspectRatio"],"sourceRoot":""}