{"version":3,"file":"9122.0e82f20765f24e934b36.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/date/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/date/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Icon from '../../common/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown, isForwarding],\n    isShown && isForwarding ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n\n  const leftIcon = useMemo(() => {\n    if (isShowingReply) {\n      return 'reply';\n    }\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId && message) {\n      sender = selectSender(global, message);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/date/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport Icon from './Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            editingMessage={editingMessage}\n            hasReplaceableMedia={canMediaBeReplaced}\n            isButtonVisible={!activeVoiceRecording}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={isInScheduledList}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    return {\n      availableReactions: type === 'story' ? global.reactions.availableReactions : undefined,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageWebPageDocument,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document! || getMessageWebPageDocument(message);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/date/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/date/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/date/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { CustomPeer, CustomPeerType } from '../../types';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByKey } from '../../util/iteratees';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  categories?: CustomPeer[];\n  itemIds: string[];\n  selectedCategories?: CustomPeerType[];\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n  isCountryList?: boolean;\n  countryList?: ApiCountry[];\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  categories,\n  itemIds,\n  selectedCategories,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedSelectedIds,\n  lockedUnselectedIds,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  onSelectedCategoriesChange,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  isCountryList,\n  countryList,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      onSelectedCategoriesChange?.(newSelectedCategories);\n    } else {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      onSelectedIdsChange?.(newSelectedIds);\n    }\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  const countriesByIso = useMemo(() => {\n    if (!countryList) return undefined;\n    return buildCollectionByKey(countryList, 'iso2');\n  }, [countryList]);\n\n  const renderCategory = useLastCallback((category: CustomPeer) => {\n    return (\n      <PrivateChatInfo\n        customPeer={category}\n      />\n    );\n  });\n\n  const renderChatInfo = useLastCallback((id: string) => {\n    const isUnselectable = lockedUnselectedIdsSet.has(id);\n    if (isCountryList && countriesByIso) {\n      const country = countriesByIso[id];\n      return <div>{country.defaultName}</div>;\n    } else if (isUserId(id)) {\n      return (\n        <PrivateChatInfo\n          forceShowSelf={forceShowSelf}\n          userId={id}\n          status={isUnselectable ? lockedUnselectedSubtitle : undefined}\n        />\n      );\n    } else {\n      return <GroupChatInfo chatId={id} status={isUnselectable ? lockedUnselectedSubtitle : undefined} />;\n    }\n  });\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const shouldRenderLockIcon = lockedUnselectedIdsSet.has(id);\n    const isLocked = lockedSelectedIdsSet.has(id) || shouldRenderLockIcon;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n    const renderCheckbox = () => {\n      return (isViewOnly || shouldRenderLockIcon) ? undefined : (\n        <Checkbox\n          label=\"\"\n          disabled={isLocked}\n          checked={isChecked}\n          round={isRoundCheckbox}\n        />\n      );\n    };\n    return (\n      <ListItem\n        key={id}\n        className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        allowDisabledClick={Boolean(onDisabledClick)}\n        secondaryIcon={shouldRenderLockIcon ? 'lock-badge' : undefined}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {!isRoundCheckbox ? renderCheckbox() : undefined}\n        {category ? renderCategory(category) : renderChatInfo(id)}\n        {isRoundCheckbox ? renderCheckbox() : undefined}\n      </ListItem>\n    );\n  }, [\n    categoriesByType, isRoundCheckbox, isViewOnly, lockedSelectedIdsSet, lockedUnselectedIdsSet,\n    onDisabledClick, renderChatInfo, selectedCategories, selectedIds,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    return (\n      <div key=\"categories\">\n        {Boolean(categories?.length) && (\n          <div className=\"picker-category-title\">{lang('PrivacyUserTypes')}</div>\n        )}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className=\"picker-category-title\">{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, lang, renderItem]);\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport Icon from './Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n  const digitsCount = floatingBadgeText?.length;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        digitsCount !== undefined && `--digits-count: ${digitsCount}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={customPeer?.type || user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'isSynced'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSynced,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (isSynced && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, isSynced, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { isSynced } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      isSynced,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/date/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat && senderChat.id === sender?.id;\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {!isChatSender && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  useEffect(() => {\n    updateCanvas();\n  }, [emojiImage, lang.isRtl, customColor]);\n\n  const updateCanvasSize = useLastCallback((parentWidth: number, parentHeight: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = parentWidth * dpr;\n    canvas.height = parentHeight * dpr;\n\n    canvas.style.width = `${parentWidth}px`;\n    canvas.style.height = `${parentHeight}px`;\n\n    updateCanvas();\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  }, [dpr]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/date/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/date/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/date/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftPremiumModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker.id);\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker.id);\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\">{renderText(lang(valueKey, [formattedDate, age], undefined, age))}</div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: lang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, lang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), lang(isChat ? 'Link' : 'Username'));\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir=\"auto\">{formatUsername(mainUsername.username, isChat)}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{lang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {lang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{lang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\">{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/date/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(photo.isSpoiler);\n\n  useEffect(() => {\n    if (photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [photo.isSpoiler]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMessageMediaFormat, getMessageMediaHash, getMessageMediaThumbDataUri, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/date/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSignal from '../../../hooks/useSignal';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMessageMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/date/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(video.isSpoiler);\n\n  useEffect(() => {\n    if (video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [video.isSpoiler]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const availableReactions = useMemo(() => {\n    const reactions = isInSavedMessages ? defaultTagReactions\n      : (enabledReactions?.type === 'some' ? enabledReactions.allowed\n        : allAvailableReactions?.map((reaction) => reaction.reaction));\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    maxUniqueReactions, topReactions,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\nconst SavedTagButton: FC<{\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n}> = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/date/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useSelector from './useSelector';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (isSynced && !noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/date/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { CustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: CustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'premium',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: CustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_IMAGE_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","quoteText","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","isShowingReply","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","availableReactions","reactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isChatChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","getMessageWebPageDocument","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","mimeType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","isRestricted","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","destructive","isProtected","mediaBlobUrl","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","categories","itemIds","selectedCategories","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedSelectedIds","lockedUnselectedIds","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","onSelectedCategoriesChange","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","isCountryList","countryList","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","newSelectedIds","handleFilterChange","viewportIds","getMore","useInfiniteScroll","countriesByIso","renderCategory","category","PrivateChatInfo","customPeer","renderChatInfo","isUnselectable","country","defaultName","GroupChatInfo","renderItem","isCategory","shouldRenderLockIcon","isLocked","isChecked","renderCheckbox","ListItem","inactive","secondaryIcon","beforeChildren","PickerSelectedItem","clickArg","canClose","isMinimized","InputText","InfiniteScroll","Loading","isSelf","fluid","withPeerColors","iconElement","titleText","titleKey","isAvatarSquare","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","digitsCount","tailPosition","isSynced","userStatus","selectUserStatus","noFake","noVerified","adminMember","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","EmbeddedMessage","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","isChatGroup","isChatSender","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftPremiumModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserIds","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","idx","particleSize","onEnded","stickerHash","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","onStop","playerRef","circleRef","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","shouldPlay","stopPlaying","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","isWebPageVideo","calculateVideoDimensions","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","maxUniqueReactions","areReactionsLocked","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","createSignal","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","isCustomPeer","avatarIcon","withPremiumGradient","CUSTOM_PEER_TO_BE_DISTRIBUTED","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}