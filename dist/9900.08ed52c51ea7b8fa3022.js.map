{"version":3,"file":"9900.08ed52c51ea7b8fa3022.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/Icon.tsx","webpack://telegram-t/./src/components/common/InviteLink.module.scss?000d","webpack://telegram-t/./src/components/common/InviteLink.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        text: parseMessageInput(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown],\n    isShown ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(sender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyInfo, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  onDropHide?: NoneToVoidFunction;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className=\"message-input-wrapper\">\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin, type StoryViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          withStory={withStory}\n          storyViewerOrigin={storyViewerOrigin}\n          storyViewerMode=\"single-peer\"\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import React from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  name: IconName;\n  className?: string;\n  style?: string;\n};\n\nconst Icon = ({\n  name,\n  className,\n  style,\n}: OwnProps) => {\n  return (\n    <i\n      className={buildClassName(`icon icon-${name}`, className)}\n      style={style}\n      aria-hidden\n    />\n  );\n};\n\nexport default Icon;\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"B0vKZtyx_PUcanptgC5I\",\"input\":\"ODZGlpe7i3BMlnIuPGUg\",\"moreMenu\":\"hDpRcaj2QNUxsuLouJu_\",\"title\":\"dB1NL4LBBWlUHShfCUpw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './InviteLink.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  inviteLink: string;\n  isDisabled?: boolean;\n  className?: string;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  inviteLink,\n  isDisabled,\n  className,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const copyLink = useLastCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyPrimaryClicked = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink(inviteLink);\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: inviteLink });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={inviteLink}\n          readOnly\n          onClick={handleCopyPrimaryClicked}\n        />\n        <DropdownMenu\n          className={styles.moreMenu}\n          trigger={PrimaryLinkMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyPrimaryClicked} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n          {onRevoke && (\n            <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n      <Button\n        size=\"smaller\"\n        disabled={isDisabled}\n        onClick={handleShare}\n      >\n        {lang('FolderLinkScreen.LinkActionShare')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qhFxTh5sx1oGuGccrzTb\",\"withBadge\":\"fltQkzCy9DRS9QWsAAH5\",\"badgeContainer\":\"ZGxYvTYQkAjpjvgBHMdH\",\"slide-in\":\"Ybb5P4BAFmSaffktaa81\",\"slideIn\":\"Ybb5P4BAFmSaffktaa81\",\"floating-badge-wrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"floatingBadgeWrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"rotate-in\":\"zyC6DJuexMszfxuDeBMR\",\"rotateIn\":\"zyC6DJuexMszfxuDeBMR\",\"floating-badge\":\"N8o73q2OT6d_kUTyUcg5\",\"floatingBadge\":\"N8o73q2OT6d_kUTyUcg5\",\"floating-badge-triangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floatingBadgeTriangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floating-badge-icon\":\"_qQItdFB5DScaFdSJR2a\",\"floatingBadgeIcon\":\"_qQItdFB5DScaFdSJR2a\",\"floating-badge-value\":\"h46zskGqCT1b3onjQB26\",\"floatingBadgeValue\":\"h46zskGqCT1b3onjQB26\",\"left\":\"OP8qshGP9fzy9bbMvWn2\",\"right\":\"EjQP1rE5iExOnGWJyYIe\",\"progress\":\"ASLJoYhAmOvHasjzMKYg\",\"fullProgress\":\"tmwWY_SiGqqKrC8oUUDW\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon icon-${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) return;\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ypqi0benYTguShBFVcsL\",\"emoji\":\"nFlcFpLQg_eQdDkZUxVp\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 5, block: 15, opacity: 0.35, scale: 1,\n  },\n  {\n    inline: 10, block: 45, opacity: 0.3, scale: 0.9,\n  },\n  {\n    inline: 20, block: 75, opacity: 0.3, scale: 0.75,\n  },\n  {\n    inline: 40, block: 20, opacity: 0.25, scale: 0.8,\n  },\n  {\n    inline: 60, block: 50, opacity: 0.25, scale: 0.85,\n  },\n  {\n    inline: 55, block: -5, opacity: 0.20, scale: 0.75,\n  },\n  {\n    inline: 80, block: 15, opacity: 0.15, scale: 0.95,\n  },\n  {\n    inline: 100, block: 70, opacity: 0.15, scale: 0.9,\n  },\n  {\n    inline: 120, block: 25, opacity: 0.10, scale: 0.65,\n  },\n  {\n    inline: 140, block: 0, opacity: 0.10, scale: 0.75,\n  },\n];\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {ICON_POSITIONS.map((position) => {\n        const {\n          inline, block, opacity, scale,\n        } = position;\n\n        const style = buildStyle(\n          `inset-inline-end: ${inline}px`,\n          `inset-block-start: ${block}px`,\n          `opacity: ${opacity}`,\n          `transform: scale(${scale})`,\n        );\n\n        return (\n          <CustomEmoji\n            documentId={emojiDocumentId}\n            className={styles.emoji}\n            noPlay\n            style={style}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (forwardSenderTitle && !areSendersSame) {\n      return (\n        <>\n          <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n          {renderText(forwardSenderTitle)}\n        </>\n      );\n    }\n\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let shouldIgnoreSender = false;\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        shouldIgnoreSender = true;\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    return (\n      <>\n        {!shouldIgnoreSender && <span className=\"embedded-sender\">{renderText(senderTitle)}</span>}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.backgroundEmojiId && (\n        <EmojiIconBackground emojiDocumentId={sender.backgroundEmojiId} className=\"EmbeddedMessage--background-icons\" />\n      )}\n      <div className=\"message-text\">\n        <p className=\"embedded-text-wrapper\">\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const currentLevel = level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { lastMessage } = chat;\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n\n    if (draft && (!chat?.isForum || (isTopic && !isDraftReplyToTopic))) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti();\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n    const premiumGiftSticker = global.premiumGifts?.stickers?.[0];\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: number;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  noUserColors?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiMessageStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport './StatisticsOverview.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'views', title: 'Stats.Message.Views', isPlain: true },\n    {\n      name: 'forwards', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n  [\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiMessageStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName('StatisticsOverview__value', isChangeNegative && 'negative')}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = type === 'boost' ? BOOST_OVERVIEW : type === 'message' ? MESSAGE_OVERVIEW : type === 'group'\n    ? GROUP_OVERVIEW : CHANNEL_OVERVIEW;\n\n  return (\n    <div className={buildClassName('StatisticsOverview', className)}>\n      <div className=\"StatisticsOverview__header\">\n        {title && (\n          <div className=\"StatisticsOverview__title\">\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className=\"StatisticsOverview__caption\">\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className=\"StatisticsOverview__table\">\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    {cell.withAbsoluteValue && (\n                      <span className=\"StatisticsOverview__table-value\">\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={`StatisticsOverview__table-${cell.withAbsoluteValue ? 'secondary-' : ''}value`}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className=\"StatisticsOverview__table-cell\">\n                  <b className=\"StatisticsOverview__table-value\">\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, reactions } = story;\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      <ReactionAnimatedEmoji\n        className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n        reaction={reaction}\n        containerId={containerId}\n        size={customEmojiSize}\n        effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n        shouldPause={isPreview}\n        shouldLoop={!isPreview}\n      />\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    if (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue') {\n      openMapModal({ geoPoint: mediaArea.geo });\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isActive && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat);\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","peers","root","avatar","runDebounced","debounce","cb","_ref4","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","getAttachmentType","attachment","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","disabled","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","onContextMenu","EmbeddedMessage","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","onRevoke","openChatWithDraft","copyLink","handleCopyPrimaryClicked","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","outgoingStatus","MessageOutgoingStatus","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","Icon","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","onEmojiStatusClick","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","ICON_POSITIONS","inline","block","opacity","emojiDocumentId","noPlay","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","quoteText","renderTextWithEntities","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","shouldIgnoreSender","isChatGroup","renderSender","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","currentLevel","hasNextLevel","levelProgress","remainingBoosts","renderMessageText","highlight","emojiSize","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","isLottie","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","lastMessage","senderId","isOutgoing","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","premiumGiftSticker","premiumGifts","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","months","nonInteractive","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","Progressive","head","preload","autoplay","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","geoPoint","geo","handleMediaAreaClick","MediaAreaSuggestedReaction","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","lastCallback","onBeforeUnload","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}