{"version":3,"file":"5689.54e2375290b1307ca037.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/pickers/PickerSelectedItem.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-huge\":\"ceLzD19m\",\"sizeHuge\":\"ceLzD19m\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        style={menuStyle}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              hasReplaceableMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: never;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={buildClassName(styles.canvas, 'canvas-blur-setup')}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb canvas-blur-setup\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const userProfilePhotos = user?.profilePhotos;\n  const chatProfilePhotos = chat?.profilePhotos;\n  const photos = userProfilePhotos?.photos || chatProfilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePrevious(mediaIndex);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, userProfilePhotos?.count || 0, chatProfilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userProfilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userProfilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userProfilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userProfilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userProfilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PickerSelectedItem = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = title || (name ? renderText(name) : undefined);\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem)) as typeof PickerSelectedItem;\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openPremiumGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenPremiumGiftModal = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenPremiumGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenPremiumGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"sectionInfo\":\"IrqRJFxm\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  shouldDelayInit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways={!shouldDelayInit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways={!shouldDelayInit}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways={!shouldDelayInit}\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaHasPreview = lastMessage && !getMessageSticker(lastMessage);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(lastMessage) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n  isSynced,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (isSynced && !similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, isSynced, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n      isSynced: global.isSynced,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger } from '../../util/textFormat';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const {\n    openPremiumModal, requestConfetti, checkGiftCode, getReceipt, openStarsTransactionFromGift,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    openStarsTransactionFromGift({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n\n        <span className=\"action-message-button\">{oldLang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{\n          oldLang('BoostingReceivedGiftOpenBtn')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useSignal,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat, getMessageMediaThumbDataUri, getVideoMediaHash, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useCanvasBlur(\n    dataUri,\n    isDisabled,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n  scrollTargetPosition?: ScrollTargetPosition,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          scrollPosition,\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions,\n\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  shouldDelayInit,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n        shouldDelayInit={shouldDelayInit}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    Boolean(radius) && `border-radius: ${radius}%`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type {\n  ApiInputInvoice,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { GlobalState } from '../types';\n\nimport { formatInteger } from '../../util/textFormat';\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(amount: number) {\n  if (amount < 0) {\n    return `- ${formatInteger(Math.abs(amount))}`;\n  }\n\n  return `+ ${formatInteger(amount)}`;\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: stars!,\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : message.senderId!,\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        canvas.classList.remove('canvas-blur-setup');\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useSignal } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollTargetPosition,\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","getMediaThumbUri","localBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","userProfilePhotos","profilePhotos","chatProfilePhotos","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","membersCount","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","InputText","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","Infinity","priority","lastMessage","selectChatLastMessage","isVerified","ITEM_CLASS_NAME","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","itemClassName","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","selectedIds","selectedId","shouldMinimize","timeoutId","clearTimeout","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","isCategory","category","peerOrCategory","isApiPeerChat","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitleClassName","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","onlyInput","inputPosition","beforeChildren","pickerCategoryTitle","PickerSelectedItem","clickArg","canClose","isMinimized","InfiniteScroll","pickerList","padded","itemSelector","Loading","noResults","titleClassName","isClickable","fluid","withPeerColors","titleText","titleKey","isAvatarSquare","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openPremiumGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenPremiumGiftModal","forUserIds","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","countryList","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","shouldDelayInit","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","suggestedVideoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetchBlob","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","selectSimilarChannelIds","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starGiftSticker","selectGiftStickerForStars","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","getReceipt","openStarsTransactionFromGift","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","shouldShowConfettiRef","withStars","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","isGift","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","handleStarGiftClick","formatInteger","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","isToBottom","scrollPosition","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","innerWidth","anchorCenterY","anchorBottomY","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","openUrl","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","getRequestInputInvoice","inputInvoice","amount","currency","purpose","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","getStarsTransactionFromGift","transactionId","isMyGift","isContact","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","useEffectOnce","addLocalizationCallback","getTranslationFn","DEFAULT_THRESHOLD","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_TO_BE_DISTRIBUTED","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}