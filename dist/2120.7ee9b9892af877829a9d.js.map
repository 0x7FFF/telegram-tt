{"version":3,"file":"2120.7ee9b9892af877829a9d.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/Toggle.module.scss?0590","webpack://telegram-t/./src/components/ui/Toggle.tsx"],"sourcesContent":["import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nfCRD3Y0nXzkML0bsjLH\",\"default\":\"QWzDb6x9al63G3nr9BGn\",\"alternate\":\"EgTekmCFBiBkvcvWELZw\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  areButtonsInColumn?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  areButtonsInColumn,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Draggable.module.scss';\nimport useLang from '../../hooks/useLang';\nimport buildStyle from '../../util/buildStyle';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <i className=\"icon icon-sort\" aria-hidden />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"C9QYXaRLeCEFngOBl4S3\",\"isDragging\":\"vhGsRt79lQzzuXny9KG8\",\"knob\":\"oGgH1RraeCPayQnxA8C_\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject, UIEvent } from 'react';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\n\nimport { LoadMoreDirection } from '../../types';\nimport type { FC } from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    isStatic && 'text-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <i className={`icon icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import React, { memo } from '../../lib/teact/teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      <svg\n        viewBox={`0 0 ${borderRadius * 2} ${borderRadius * 2}`}\n        height={borderRadius * 2}\n        width={borderRadius * 2}\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width={STROKE_WIDTH}\n          stroke-dasharray={`${circumference} ${circumference}`}\n          stroke-dashoffset={strokeDashOffset}\n          stroke-linecap=\"round\"\n          r={circleRadius}\n          cx={borderRadius}\n          cy={borderRadius}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  placeholder?: string;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    placeholder,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        placeholder={placeholder || label}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"fb5F16dNcZnOl5zZNuRC\"};","import type { ChangeEvent, RefObject } from 'react';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        onChange={handleSelectFile}\n        accept=\"image/png, image/jpeg\"\n        ref={inputRef}\n        className={styles.input}\n      />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { MouseButton } from '../../util/windowEnvironment';\nimport forceReflow from '../../util/forceReflow';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = e.currentTarget.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      e.currentTarget.value = e.currentTarget.value.replace(/\\n/g, ' ');\n      e.currentTarget.selectionEnd = previousSelectionEnd;\n    }\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pHTSMORJ7J73wlJmXnNb\",\"widget\":\"bCgS149_amzM_wXYhOwW\",\"min\":\"EIngX7JB2IwA5XnGAlpo\",\"mid\":\"bNWGD8kaT2IHf7HrmLoA\",\"max\":\"FiCjIrDiSiJDbaafBQ8V\",\"filler\":\"KAFaJ8frkI3Uu05TmeTH\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Toggle.module.scss';\n\ninterface OwnProps {\n  value: 'min' | 'mid' | 'max';\n}\n\nfunction Toggle({ value }: OwnProps) {\n  return (\n    <div className={buildClassName(styles.root, 'Toggle')} aria-hidden>\n      <i className={buildClassName(styles.filler, styles[value])} />\n      <i className={buildClassName(styles.widget, styles[value])} />\n    </div>\n  );\n}\n\nexport default memo(Toggle);\n"],"names":["memo","_ref","title","disabled","isForForum","currentAvatarBlobUrl","onChange","selectedFile","setSelectedFile","useState","croppedBlobUrl","setCroppedBlobUrl","useEffect","handleAvatarCrop","useCallback","croppedImg","undefined","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","buildClassName","React","className","role","tabIndex","type","event","target","files","value","accept","src","alt","CropModal","file","onClose","text","isAlternateColor","ShowTransition","isOpen","Boolean","AnimatedCounter","id","options","selected","round","loadingOptions","values","setValues","handleChange","checked","currentTarget","newValues","filter","v","map","option","Checkbox","label","subLabel","indexOf","isLoading","onCloseAnimationEnd","header","textParts","confirmLabel","confirmHandler","confirmIsDestructive","areButtonsInColumn","children","lang","useLang","containerRef","useRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","textPart","ref","onKeyDown","Button","isText","onClick","color","cropperResultOptions","quality","format","circle","size","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","error","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","hasCloseButton","Loading","ariaLabel","ZERO_POINT","x","y","onDrag","onDragEnd","style","externalStyle","knobStyle","isDisabled","state","setState","isDragging","origin","translation","handleMouseDown","e","stopPropagation","preventDefault","getClientCoordinate","current","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","fullClassName","cssStyles","useMemo","buildStyle","onMouseDown","onTouchStart","touches","clientX","clientY","isShown","buttonClassName","isRtl","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","arguments","length","direction","LoadMoreDirection","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","container","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","useLastCallback","listLength","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","IS_ANDROID","buttonRef","icon","leftElement","secondaryIcon","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","multiline","isStatic","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","handleClick","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","useFastClick","ButtonElementTag","dir","RippleEffect","Menu","autoClose","action","MenuSeparator","key","MenuItem","handler","dialogRef","isSlim","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","transitionClassNames","useShowTransition","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","trapFocus","useHistoryBack","isActive","onBack","useLayoutEffectWithPrevDeps","_ref2","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","Portal","DEFAULT_DURATION","message","duration","containerId","onDismiss","actionText","actions","getActions","setIsOpen","timerRef","closeAndDismiss","setTimeout","ANIMATION_END_DELAY","payload","captureEscKeyListener","clearTimeout","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","s","m","l","xl","progress","square","transparent","noCross","radius","circleRadius","STROKE_WIDTH","borderRadius","circumference","Math","PI","strokeDashOffset","min","max","viewBox","stroke","fill","r","cx","cy","name","hidden","Spinner","loadingOption","Radio","step","bold","renderValue","Number","mainClassName","trackWidth","openTimeout","isFirstTimeActivation","onActivate","buttonProps","isMouseInside","_extends","parentContainerClassName","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","element","backgroundColor","props","hasArrow","labelText","htmlFor","count","itemName","itemPluralName","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","usePrevious","prevChildren","fromChildrenRef","isFirstRender","variant","animation","forceAspectRatio","inline","classNames","aspectRatio","noAnimation","onCheck","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","add","tabEl","prevTabEl","parentElement","contains","requestMutation","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","forceReflow","renderText","SCROLL_DURATION","IS_IOS","tabs","areFolders","activeTab","big","onSwitchTab","useHorizontalScroll","scrollWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","_tab$id","Tab","ALL_FOLDER_ID","success","readOnly","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","textarea","previousSelectionEnd","selectionEnd","replace","styles"],"sourceRoot":""}