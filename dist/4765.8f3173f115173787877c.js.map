{"version":3,"file":"4765.8f3173f115173787877c.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/AnimatedWallpaper.tsx","webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/FolderEmoticonPickerMenu.tsx","webpack://telegram-t/./src/components/ui/FolderEmoticonPickerButton.tsx","webpack://telegram-t/./src/components/ui/FolderIcon.tsx","webpack://telegram-t/./src/components/ui/FolderIconEmojis.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/RoundTimer.module.scss?7ffc","webpack://telegram-t/./src/components/ui/RoundTimer.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/RangeSliderWithMarks.module.scss?5535","webpack://telegram-t/./src/components/ui/RangeSliderWithMarks.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/Separator.module.scss?e4cd","webpack://telegram-t/./src/components/ui/Separator.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/TextTimer.tsx","webpack://telegram-t/./src/components/ui/Toggle.module.scss?0590","webpack://telegram-t/./src/components/ui/Toggle.tsx","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://telegram-t/./src/components/ui/placeholder/Skeleton.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, {\n    memo, useEffect, useRef, \n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './AnimatedWallpaper.scss';\nimport renderAnimatedWallpaper from '../../util/renderAnimatedWallpaper';\n\ninterface OwnProps {\n    blobUrl?: string;\n    colors: number[];\n    isDark?: boolean;    \n    animate?: number;\n    isPattern?:boolean;\n    canAnimate?: boolean;  \n}\n\nconst AnimatedWallpaper: FC<OwnProps> = ({\n\n    blobUrl,\n    colors,\n    isDark,\n    isPattern,\n    animate = 1,\n    canAnimate = false  \n}) => {   \n    const _animate = useRef<() => void>(null);\n\n\n    const _colors = [16777215, 16777215, 16777215, 16777215]\n    if(colors.length){\n        let j = 0;\n        for (let i = 0; i < 4; i++) {\n            _colors[i] = colors[j];\n            ++j;\n            if (j >= colors.length) {\n                j = 0\n            } \n        }\n    }\n   \n\n    const gradientCanvasRef = useRef<HTMLCanvasElement>(null);\n    useEffect(() => {            \n        if (gradientCanvasRef.current ) {           \n            _animate.current = renderAnimatedWallpaper(\n                gradientCanvasRef.current,\n                _colors[0],\n                _colors[1],\n                _colors[2],\n                _colors[3],\n                canAnimate\n            )\n        }\n    }, [colors,blobUrl]);\n   \n    \n    useEffect(() => {       \n        if(_animate.current && animate > 1){                 \n            _animate.current();\n        }              \n    }, [animate])   \n \n    return (\n        <div         \n            style={\n                `\n                ${isDark ? 'background-color:black;' :''}                   \n                --tw-image: ${blobUrl};                           \n                `\n            }\n            className=\"AnimatedWallpaper wallpaper-wrap\">\n            <canvas\n                ref={gradientCanvasRef}\n                className={buildClassName('wallpaper-canvas', isDark && isPattern && 'wallpaper-mask')}>               \n            </canvas>\n            {blobUrl && (<div className={buildClassName('wallpaper-pattern')}/> )}\n            \n        </div>\n    );\n};\n\nexport default memo(AnimatedWallpaper);","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Icon from '../common/icons/Icon';\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <Icon name=\"camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y3ZoW17O\",\"default\":\"DWjOG2Ze\",\"alternate\":\"Lq67O2D2\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\n\nimport type { ApiUser } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n  nestedOptions?: IRadioOption[];\n  user?: ApiUser;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  nestedCheckbox?: boolean;\n  loadingOptions?: string[];\n  isRound?: boolean;\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  nestedCheckbox,\n  loadingOptions,\n  isRound,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useLastCallback((event: ChangeEvent<HTMLInputElement>, nestedOptionList?: IRadioOption) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n\n    if (checked) {\n      newValues = [...values, value];\n      if (nestedOptionList && value) {\n        newValues.push(nestedOptionList.value);\n      }\n      if (nestedOptionList && value === nestedOptionList.value) {\n        nestedOptionList.nestedOptions?.forEach((nestedOption) => {\n          if (!newValues.includes(nestedOption.value)) {\n            newValues.push(nestedOption.value);\n          }\n        });\n      }\n    } else {\n      newValues = values.filter((v) => v !== value);\n      if (nestedOptionList && value === nestedOptionList.value) {\n        nestedOptionList.nestedOptions?.forEach((nestedOption) => {\n          newValues = newValues.filter((v) => v !== nestedOption.value);\n        });\n      } else if (nestedOptionList) {\n        const nestedOptionValues = nestedOptionList.nestedOptions?.map((nestedOption) => nestedOption.value) || [];\n        const hasOtherNestedValuesChecked = nestedOptionValues.some((nestedValue) => newValues.includes(nestedValue));\n        if (!hasOtherNestedValuesChecked) {\n          newValues = newValues.filter((v) => v !== nestedOptionList.value);\n        }\n      }\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  });\n  const getCheckedNestedCount = useLastCallback((nestedOptions: IRadioOption[]) => {\n    const checkedCount = nestedOptions?.filter((nestedOption) => values.includes(nestedOption.value)).length;\n    return checkedCount > 0 ? checkedCount : undefined;\n  });\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => {\n        return (\n          <Checkbox\n            label={option.label}\n            subLabel={option.subLabel}\n            value={option.value}\n            checked={selected.indexOf(option.value) !== -1}\n            disabled={option.disabled || disabled}\n            isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n            onChange={handleChange}\n            nestedCheckbox={nestedCheckbox}\n            nestedCheckboxCount={getCheckedNestedCount(option.nestedOptions ?? [])}\n            nestedOptionList={option}\n            values={values}\n            isRound={isRound}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={(title || lang('Telegram'))}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToDataUri, blobToFile } from '../../util/files';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useOldLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <Icon name=\"check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kWQHzIMD\",\"isDragging\":\"k0c5WDAy\",\"knob\":\"UpzQzcvs\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <Icon name=\"sort\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useOldLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import { FC, type TeactNode, useMemo } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { MenuPositionOptions } from './Menu';\n\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMouseInside from '../../hooks/useMouseInside';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport EmojiPickerWithExtra from '../middle/composer/EmojiPickerWithExtra';\nimport SymbolMenuFooter, { SymbolMenuTabs } from '../middle/composer/SymbolMenuFooter';\nimport Button from './Button';\nimport Menu from './Menu';\nimport Portal from './Portal';\nimport Transition from './Transition';\nimport { EMOTICON_TO_SVG } from './FolderIconEmojis';\nimport EmojiButton from '../middle/composer/EmojiButton';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  className?: string;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst FolderEmoticonPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  idPrefix,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji);\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const extraCategory = {\n    id: 'folderIcons',\n    name: 'folderIcons',\n    showTitle: false,\n    emojis: Object.entries(EMOTICON_TO_SVG)\n      .map(([emoji, fc]) => {\n        return fc({});\n      }),\n  };\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPickerWithExtra\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n            extraCategory={extraCategory}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={2} // Object.values({}).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        canSearch={false}\n        isAttachmentModal\n        canSendPlainText\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      'left-column-open',\n      'in-attachment-modal',\n    );\n\n    return (\n      <div className={mobileClassName}>\n        {content}\n      </div>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal // ={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...menuPositionOptions}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(FolderEmoticonPickerMenu));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport ResponsiveHoverButton from './ResponsiveHoverButton';\nimport Spinner from './Spinner';\nimport FolderEmoticonPickerMenu from './FolderEmoticonPickerMenu';\nimport { MenuPositionOptions } from '../../hooks/useMenuPosition';\n\ntype OwnProps = {\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol?: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  isSymbolMenuForced?: boolean;\n  className?: string;\n  icon?: TeactNode;\n} & MenuPositionOptions;\n\nconst FolderEmoticonPickerButton: FC<OwnProps> = ({\n  isMobile,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  icon,\n  ...positionOptions\n}) => {\n  const {\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const {\n      x,\n      y,\n    } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({\n      x,\n      y,\n    });\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const iconElement = icon || <Icon name=\"smile\"/>;\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : openSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          {iconElement}\n          <Icon name=\"keyboard\"/>\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\"/>}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\"/>\n          {iconElement}\n        </ResponsiveHoverButton>\n      )}\n\n      <FolderEmoticonPickerMenu\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...positionOptions}\n      />\n    </>\n  );\n};\n\nexport default memo(FolderEmoticonPickerButton);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport renderText from '../common/helpers/renderText';\nimport { EMOTICON_TO_SVG } from './FolderIconEmojis';\n\ntype OwnProps = {\n  folderId?: number;\n  emoticon?: string | TeactNode;\n};\n\nconst FolderIcon: FC<OwnProps> = ({\n  folderId,\n  emoticon,\n}) => {\n  if (emoticon && typeof emoticon !== 'string') {\n    return emoticon;\n  }\n\n  let emoticonDef = folderId === ALL_FOLDER_ID ? '💬' : emoticon;\n\n  if (!emoticonDef) {\n    emoticonDef = '📁';\n  }\n\n  const FolderIconSvg = EMOTICON_TO_SVG[emoticonDef || '📁'];\n\n  if (!FolderIconSvg) {\n    return renderText(emoticonDef);\n  }\n\n  return <FolderIconSvg />;\n};\n\nexport default memo(FolderIcon);\n","import { FC, memo, TeactNode } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nexport const BotSvg: FC<{}> = () => (\n  <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>🤖</title>\n    <path\n      d=\"M21.116 16.8597C21.8886 16.8597 22.5149 16.0768 22.5149 15.1111C22.5149 14.1453 21.8886 13.3625 21.116 13.3625C20.3434 13.3625 19.7171 14.1453 19.7171 15.1111C19.7171 16.0768 20.3434 16.8597 21.116 16.8597Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M14.8791 16.8597C15.6517 16.8597 16.278 16.0768 16.278 15.1111C16.278 14.1454 15.6517 13.3625 14.8791 13.3625C14.1065 13.3625 13.4802 14.1454 13.4802 15.1111C13.4802 16.0768 14.1065 16.8597 14.8791 16.8597Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M27.0395 21.2574V15.3174C27.0395 10.3252 22.9925 6.27826 18.0004 6.27826C13.0082 6.27826 8.96124 10.3252 8.96124 15.3174V21.2574C8.96124 24.1502 8.96124 25.5966 9.52422 26.7015C10.0194 27.6734 10.8096 28.4636 11.7815 28.9588C12.8864 29.5217 14.3328 29.5217 17.2256 29.5217H18.7752C21.6679 29.5217 23.1143 29.5217 24.2192 28.9588C25.1911 28.4636 25.9813 27.6734 26.4765 26.7015C27.0395 25.5966 27.0395 24.1502 27.0395 21.2574ZM11.5434 15.3174C11.5434 11.7516 14.4341 8.86088 17.9999 8.86088C21.5658 8.86088 24.4565 11.7516 24.4565 15.3174V16.7772C24.4565 18.2549 23.608 19.6077 22.1748 19.9675C21.0836 20.2414 19.6533 20.4826 17.9999 20.4826C16.3466 20.4826 14.9163 20.2414 13.8251 19.9675C12.3919 19.6077 11.5434 18.2549 11.5434 16.7772V15.3174Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M30.2676 16.4C31.096 16.4 31.7676 17.0716 31.7676 17.9V24.3565C31.7676 25.1849 31.096 25.8565 30.2676 25.8565C29.4392 25.8565 28.7676 25.1849 28.7676 24.3565V17.9C28.7676 17.0716 29.4392 16.4 30.2676 16.4Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M7.23291 17.9C7.23291 17.0716 6.56134 16.4 5.73291 16.4C4.90448 16.4 4.23291 17.0716 4.23291 17.9V24.3565C4.23291 25.1849 4.90448 25.8565 5.73291 25.8565C6.56134 25.8565 7.23291 25.1849 7.23291 24.3565V17.9Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const ChannelSvg: FC<{}> = () => (\n  <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>📢</title>\n    <path\n      d=\"M12.1765 22.708H15.5855C16.0157 22.708 16.2308 22.708 16.4395 22.7306C17.0143 22.7929 17.568 22.9829 18.0601 23.2866C18.2387 23.3969 18.4085 23.5289 18.7481 23.7931L22.3164 26.5684C24.4611 28.2365 25.5335 29.0706 26.4338 29.0629C27.217 29.0562 27.9551 28.6953 28.4412 28.0811C29 27.3751 29 26.0166 29 23.2996V11.7634C29 9.04635 29 7.68782 28.4412 6.98185C27.9551 6.3677 27.217 6.00672 26.4338 6.00005C25.5335 5.99239 24.4611 6.82644 22.3164 8.49455L18.7481 11.2699C18.4085 11.534 18.2387 11.6661 18.0601 11.7763C17.568 12.0801 17.0143 12.27 16.4395 12.3324C16.2308 12.355 16.0157 12.355 15.5855 12.355H12.1765C9.31759 12.355 7 14.6726 7 17.5315C7 20.3904 9.31758 22.708 12.1765 22.708Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M12.2982 25.1742C12.1764 25.4348 12.1764 25.7709 12.1764 26.4431V27.8844C12.1764 29.3139 13.3352 30.4727 14.7646 30.4727C16.1941 30.4727 17.3529 29.3139 17.3529 27.8844V26.4431C17.3529 25.7709 17.3529 25.4348 17.231 25.1742C17.1026 24.8995 16.8817 24.6786 16.6069 24.5501C16.3464 24.4283 16.0103 24.4283 15.3381 24.4283H14.1912C13.519 24.4283 13.1829 24.4283 12.9224 24.5501C12.6476 24.6786 12.4267 24.8995 12.2982 25.1742Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const ChatSvg: FC<{}> = () => (\n  <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>✅</title>\n    <path\n      d=\"M30 17.2847C30 11.2598 24.6274 6.37561 18 6.37561C11.3726 6.37561 6 11.2598 6 17.2847C6 20.7209 7.60509 23.5375 10.3363 25.5371C10.6856 25.7929 11.0073 27.2137 10.2288 28.4072C9.45024 29.6006 8.47959 30.146 8.96637 30.3502C9.26647 30.4761 11.0397 30.5384 12.3196 29.8206C14.1496 28.7943 14.6613 27.7725 15.0551 27.8629C15.9973 28.079 16.9839 28.1938 18 28.1938C24.6274 28.1938 30 23.3096 30 17.2847Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const ChatsSvg: FC<{}> = () => (\n  <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>💬</title>\n    <path\n      d=\"M22.3902 9.03227C20.3914 7.162 17.595 6 14.5 6C8.42487 6 3.5 10.4772 3.5 16C3.5 19.1499 4.97133 21.7318 7.47498 23.5647C7.79515 23.7991 8.09005 25.1016 7.37638 26.1956C7.08455 26.643 6.76327 26.991 6.51594 27.2589C6.15843 27.6462 5.95542 27.8661 6.21917 27.9767C6.49426 28.0921 8.11974 28.1492 9.29294 27.4912C10.2112 26.9763 10.7674 26.4625 11.1419 26.1166C11.4516 25.8305 11.6371 25.6592 11.8005 25.6967C12.3863 25.831 12.9908 25.9227 13.6098 25.9677C13.6182 25.9683 13.6267 25.9689 13.6351 25.9695C13.9205 25.9897 14.2089 26 14.5 26C20.5751 26 25.5 21.5228 25.5 16C25.5 13.2908 24.3149 10.8332 22.3902 9.03227Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M32.5 19C32.5 15.0932 30.0356 11.7097 26.4429 10.0641C26.0059 9.86387 25.6121 10.3758 25.8411 10.7985C26.6828 12.3527 27.16 14.1145 27.16 16C27.16 21.6043 22.944 26.1149 17.4721 27.3341C16.9915 27.4412 16.8851 28.0914 17.3467 28.2627C18.6282 28.738 20.0305 29 21.5 29C22.4314 29 23.3358 28.8948 24.1995 28.6967C24.3629 28.6592 24.5484 28.8305 24.8581 29.1166C25.2326 29.4625 25.7888 29.9763 26.7071 30.4912C27.8803 31.1492 29.5057 31.0921 29.7808 30.9767C30.0446 30.8661 29.8416 30.6462 29.4841 30.2589C29.2367 29.991 28.9155 29.643 28.6236 29.1956C27.91 28.1016 28.2048 26.7991 28.525 26.5647C31.0287 24.7318 32.5 22.1499 32.5 19Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const FolderSvg: FC<{}> = () => (\n  <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>📁</title>\n    <path\n      d=\"M6.21265 9.53789C6 10.1456 6 10.9016 6 12.4135C6 12.6655 6 12.7915 6.03544 12.8928C6.09892 13.0742 6.24156 13.2169 6.42298 13.2803C6.52427 13.3158 6.65026 13.3158 6.90226 13.3158H29.2421C29.3595 13.3158 29.4181 13.3158 29.4672 13.308C29.7375 13.2652 29.9494 13.0533 29.9922 12.783C30 12.7339 30 12.6752 30 12.5579C30 12.0885 30 11.8538 29.9689 11.6574C29.7977 10.5764 28.9499 9.72863 27.8689 9.55742C27.6725 9.52632 27.4378 9.52632 26.9684 9.52632H19.1548C18.9418 9.52632 18.8353 9.52632 18.7327 9.52075C17.8706 9.47396 17.0503 9.13419 16.4077 8.55768C16.3312 8.48907 16.2559 8.41377 16.1053 8.26319C15.9547 8.1126 15.8794 8.03725 15.8029 7.96863C15.1602 7.39213 14.3399 7.05236 13.4778 7.00557C13.3752 7 13.2687 7 13.0557 7H11.4135C9.90159 7 9.14562 7 8.53789 7.21265C7.44937 7.59354 6.59354 8.44937 6.21265 9.53789Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M6.20651 16.8766C6 17.282 6 17.8125 6 18.8737V20.3895C6 23.2192 6 24.6341 6.5507 25.7149C7.03512 26.6656 7.80807 27.4386 8.75878 27.923C9.8396 28.4737 11.2545 28.4737 14.0842 28.4737H21.9158C24.7455 28.4737 26.1604 28.4737 27.2412 27.923C28.1919 27.4386 28.9649 26.6656 29.4493 25.7149C30 24.6341 30 23.2192 30 20.3895V18.8737C30 17.8125 30 17.282 29.7935 16.8766C29.6118 16.5201 29.322 16.2303 28.9655 16.0486C28.5602 15.8421 28.0296 15.8421 26.9684 15.8421H9.03158C7.97043 15.8421 7.43985 15.8421 7.03454 16.0486C6.67803 16.2303 6.38817 16.5201 6.20651 16.8766Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const GroupSvg: FC<{}> = () => (\n  <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>👥</title>\n    <path\n      d=\"M14.3333 17.3333C16.9107 17.3333 19 15.244 19 12.6667C19 10.0893 16.9107 8 14.3333 8C11.756 8 9.66667 10.0893 9.66667 12.6667C9.66667 15.244 11.756 17.3333 14.3333 17.3333Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M5 25.3654C5 26.8204 6.17955 28 7.63461 28H21.0376C22.4901 27.997 23.6667 26.8186 23.6667 25.3654C23.6667 24.5819 23.4961 23.799 23.0277 23.1928C22.9608 23.1062 22.8879 23.0232 22.8084 22.9443C22.4728 22.611 22.0286 22.2323 21.4585 21.8601C21.4277 21.8399 21.3965 21.8198 21.365 21.7998C19.9048 20.8708 17.6512 20 14.3333 20C9.6174 20 7.05162 21.7592 5.85822 22.9443C5.22282 23.5753 5 24.4699 5 25.3654Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M25.1023 28H30.823C32.0253 28 33 27.0253 33 25.823C33 25.0652 32.806 24.3089 32.2604 23.7831C31.2358 22.7956 29.037 21.3333 25 21.3333C24.7745 21.3333 24.5548 21.3379 24.3406 21.3467L24.368 21.3738C25.5844 22.5817 25.88 24.1575 25.88 25.3654C25.88 26.3368 25.5943 27.2415 25.1023 28Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M25 18.6667C27.2091 18.6667 29 16.8758 29 14.6667C29 12.4575 27.2091 10.6667 25 10.6667C22.7909 10.6667 21 12.4575 21 14.6667C21 16.8758 22.7909 18.6667 25 18.6667Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const StarSvg: FC<{}> = () => (\n  <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>⭐</title>\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M16.8151 27.4314C17.4066 27.0754 18.1464 27.0754 18.7379 27.4314L23.2643 30.1558C24.6767 31.0059 26.4164 29.739 26.0409 28.1338L24.8434 23.0146C24.6854 22.3394 24.9152 21.6324 25.4399 21.1792L29.4253 17.7361C30.6744 16.6571 30.0084 14.6069 28.3637 14.4678L23.1107 14.0233C22.4222 13.9651 21.8224 13.5308 21.5521 12.8949L19.4922 8.04816C18.849 6.53473 16.7039 6.53473 16.0607 8.04816L14.0008 12.8949C13.7306 13.5308 13.1307 13.9651 12.4422 14.0233L7.18921 14.4678C5.54451 14.6069 4.8786 16.6571 6.12762 17.7361L10.1131 21.1792C10.6377 21.6324 10.8675 22.3394 10.7096 23.0146L9.51201 28.1338C9.1365 29.739 10.8762 31.0059 12.2887 30.1558L16.8151 27.4314Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const UserSvg: FC<{}> = () => (\n  <svg role=\"img\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>👤</title>\n    <path\n      d=\"M19 16.8125C22.0376 16.8125 24.5 14.3501 24.5 11.3125C24.5 8.27493 22.0376 5.8125 19 5.8125C15.9624 5.8125 13.5 8.27493 13.5 11.3125C13.5 14.3501 15.9624 16.8125 19 16.8125Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M8 25.5942C8 27.5787 9.60875 29.1875 11.5933 29.1875H26.4067C28.3912 29.1875 30 27.5787 30 25.5942C30 24.7942 29.8042 23.999 29.2698 23.4036C28.008 21.9978 24.9618 19.5625 19 19.5625C13.0382 19.5625 9.992 21.9978 8.7302 23.4036C8.19579 23.999 8 24.7942 8 25.5942Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport const EMOTICON_TO_SVG: Record<string, FC<{}>> = {\n  '💬': ChatsSvg,\n  '✅': ChatSvg,\n  '👤': UserSvg,\n  '👥': GroupSvg,\n  '⭐': StarSvg,\n  '📢': ChannelSvg,\n  '🤖': BotSvg,\n  '📁': FolderSvg,\n};\n","import type { RefObject, UIEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  scrollContainerClosest?: string;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  scrollContainerClosest,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!loadMoreBackwards || !scrollContainer) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = scrollContainer;\n    if (clientHeight && scrollHeight < clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards, scrollContainerClosest]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n\n    const container = containerRef.current!;\n\n    requestForcedReflow(() => {\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = scrollContainer;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = scrollContainer;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(scrollContainer, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [\n    items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning,\n    scrollContainerClosest,\n  ]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const scrollContainer = scrollContainerClosest\n        ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n        : containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = scrollContainer;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!scrollContainer) return undefined;\n\n    const handleNativeScroll = (e: Event) => handleScroll(e as unknown as UIEvent<HTMLDivElement>);\n\n    scrollContainer.addEventListener('scroll', handleNativeScroll);\n\n    return () => {\n      scrollContainer.removeEventListener('scroll', handleNativeScroll);\n    };\n  }, [handleScroll, scrollContainerClosest]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  secondaryIconClassName?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  allowSelection?: boolean;\n  withColorTransition?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n  nonInteractive?: boolean;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  secondaryIconClassName,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  allowSelection,\n  withColorTransition,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n  nonInteractive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    allowSelection && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuAnchor && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n    withColorTransition && 'with-color-transition',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {leftElement}\n        {icon && (\n          <Icon name={icon} className={buildClassName('ListItem-main-icon', iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {secondaryIcon && (\n          <Button\n            nonInteractive={nonInteractive}\n            className={buildClassName('secondary-icon', secondaryIconClassName)}\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <Icon name={secondaryIcon} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"h039vb1K\",\"thin\":\"NGKaFgra\",\"thick\":\"_BdnjPEa\"};","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'thin' | 'thick';\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className, size = 'thin' }) => {\n  return (\n    <div className={buildClassName(styles.root, styles[size], className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { beginHeavyAnimation, useEffect } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Icon from '../common/icons/Icon';\nimport Button, { type OwnProps as ButtonProps } from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nexport const ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  headerClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  hasAbsoluteCloseButton?: boolean;\n  absoluteCloseButtonColor?: ButtonProps['color'];\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  dialogStyle?: string;\n  dialogRef?: React.RefObject<HTMLDivElement>;\n  isLowStackPriority?: boolean;\n  dialogContent?: React.ReactNode;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\nconst Modal: FC<OwnProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  headerClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  hasAbsoluteCloseButton,\n  absoluteCloseButtonColor = 'translucent',\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  dialogStyle,\n  isLowStackPriority,\n  dialogContent,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n}) => {\n  const {\n    ref: modalRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    withShouldRender: true,\n  });\n\n  const withCloseButton = hasCloseButton || hasAbsoluteCloseButton;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen, modalRef]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      beginHeavyAnimation(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useOldLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title && !withCloseButton) return undefined;\n    const closeButton = (\n      <Button\n        className={buildClassName(hasAbsoluteCloseButton && 'modal-absolute-close-button')}\n        round\n        color={absoluteCloseButtonColor}\n        size=\"smaller\"\n        ariaLabel={lang('Close')}\n        onClick={onClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n    );\n\n    if (hasAbsoluteCloseButton) {\n      return closeButton;\n    }\n\n    return (\n      <div className={buildClassName('modal-header', headerClassName)}>\n        {withCloseButton && closeButton}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n    isLowStackPriority && 'low-priority',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef} style={dialogStyle}>\n            {renderHeader()}\n            {dialogContent}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eldglPwL\",\"svg\":\"xhUfxjkV\",\"circle\":\"hsaty2zA\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatCountdownShort } from '../../util/dates/dateFormat';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\n\nimport styles from './RoundTimer.module.scss';\n\ntype OwnProps = {\n  duration: number;\n  className?: string;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 1000;\nconst TIMER_RADIUS = 14;\n\nconst RoundTimer = ({ duration, className, onEnd }: OwnProps) => {\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const lang = useOldLang();\n\n  useInterval(\n    () => setTimeLeft((prev) => prev - 1),\n    timeLeft > 0 ? UPDATE_FREQUENCY : undefined,\n  );\n\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      onEnd?.();\n    }\n  }, [timeLeft, onEnd]);\n\n  useEffect(() => {\n    setTimeLeft(duration);\n  }, [duration]);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.svg} width=\"32px\" height=\"32px\">\n        <circle\n          cx=\"16\"\n          cy=\"16\"\n          r={TIMER_RADIUS}\n          transform=\"rotate(-90, 16, 16)\"\n          pathLength=\"100\"\n          stroke-dasharray=\"100\"\n          stroke-dashoffset={100 - ((timeLeft - 1) / duration) * 100} // Show it one step further due to animation\n          className={styles.circle}\n        />\n      </svg>\n      <AnimatedCounter className={styles.text} text={formatCountdownShort(lang, timeLeft * 1000)} />\n    </div>\n  );\n};\n\nexport default memo(RoundTimer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\nimport { isLangFnParam } from '../../util/localization/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmoji from '../common/CustomEmoji';\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Portal from './Portal';\nimport RoundTimer from './RoundTimer';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  notification: ApiNotification;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\nconst CUSTOM_EMOJI_SIZE = 1.75 * REM;\n\nconst Notification: FC<OwnProps> = ({\n  notification,\n}) => {\n  const actions = getActions();\n\n  const lang = useLang();\n\n  const {\n    localId,\n    message,\n    action,\n    actionText,\n    cacheBreaker,\n    className,\n    disableClickDismiss,\n    dismissAction,\n    duration = DEFAULT_DURATION,\n    icon,\n    customEmojiIconId,\n    shouldShowTimer,\n    title,\n    containerSelector,\n  } = notification;\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  const handleDismiss = useLastCallback(() => {\n    actions.dismissNotification({ localId });\n  });\n\n  const closeAndDismiss = useLastCallback((force?: boolean) => {\n    if (!force && disableClickDismiss) return;\n    setIsOpen(false);\n    setTimeout(handleDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    if (dismissAction) {\n      // @ts-ignore\n      actions[dismissAction.action](dismissAction.payload);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(() => closeAndDismiss(true), duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, cacheBreaker]); // Reset timer if `cacheBreaker` changes\n\n  const handleMouseEnter = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  });\n\n  const renderedTitle = useMemo(() => {\n    if (!title) return undefined;\n    if (isLangFnParam(title)) {\n      return lang.with(title);\n    }\n\n    return renderText(title, ['simple_markdown', 'emoji', 'br', 'links']);\n  }, [lang, title]);\n\n  const renderedMessage = useMemo(() => {\n    if (isLangFnParam(message)) {\n      return lang.with(message);\n    }\n\n    if (typeof message === 'string') {\n      return renderText(message, ['simple_markdown', 'emoji', 'br', 'links']);\n    }\n\n    return message;\n  }, [lang, message]);\n\n  const renderedActionText = useMemo(() => {\n    if (!actionText) return undefined;\n    if (isLangFnParam(actionText)) {\n      return lang.with(actionText);\n    }\n\n    return actionText;\n  }, [lang, actionText]);\n\n  return (\n    <Portal className=\"Notification-container\" containerSelector={containerSelector}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {customEmojiIconId ? (\n          <CustomEmoji\n            className=\"notification-emoji-icon\"\n            forceAlways\n            size={CUSTOM_EMOJI_SIZE}\n            documentId={customEmojiIconId}\n          />\n        ) : (\n          <Icon name={icon || 'info-filled'} className=\"notification-icon\" />\n        )}\n        <div className=\"content\">\n          {renderedTitle && (\n            <div className=\"notification-title\">{renderedTitle}</div>\n          )}\n          {renderedMessage}\n        </div>\n        {action && renderedActionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"notification-button\"\n          >\n            {renderedActionText}\n          </Button>\n        )}\n        {shouldShowTimer && (\n          <RoundTimer className=\"notification-timer\" key={cacheBreaker} duration={Math.ceil(duration / 1000)} />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\n\nimport Icon from '../common/icons/Icon';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2;\nconst STROKE_WIDTH_XL = 3;\nconst PADDING = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  rotationOffset?: number;\n  withColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  rotationOffset,\n  withColor,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  const dpr = useDevicePixelRatio();\n\n  const color = useDynamicColorListener(canvasRef, !withColor);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * dpr,\n        (size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH) * dpr,\n        color ?? 'white',\n        currentProgress,\n        dpr,\n        isFirst,\n        rotationOffset,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width, dpr, rotationOffset, color]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      {!noCross && <Icon name=\"close\" />}\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  dpr: number,\n  shouldInit = false,\n  rotationOffset?: number,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING * dpr;\n  const offset = rotationOffset ?? (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * offset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent, MouseEventHandler } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  label?: TeactNode;\n  subLabel?: TeactNode;\n  value?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  isLink?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  withIcon?: boolean;\n  className?: string;\n  onlyInput?: boolean;\n  subLabelClassName?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSubLabelClick?: MouseEventHandler<HTMLSpanElement> | undefined;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  subLabelClassName,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  className,\n  onlyInput,\n  withIcon,\n  isLink,\n  onChange,\n  onSubLabelClick,\n}) => {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    'Radio',\n    className,\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    withIcon && 'with-icon',\n    isLoading && 'loading',\n    onlyInput && 'onlyInput',\n    Boolean(subLabel) && 'withSubLabel',\n  );\n\n  return (\n    <label className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel\n          && (\n            <span\n              className={buildClassName(subLabelClassName, 'subLabel', isLink ? 'subLabelLink' : undefined)}\n              dir={lang.isRtl ? 'auto' : undefined}\n              onClick={isLink ? onSubLabelClick : undefined}\n            >\n              {subLabel}\n            </span>\n          )}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Radio from './Radio';\n\nexport type IRadioOption<T = string> = {\n  label: TeactNode;\n  subLabel?: TeactNode;\n  value: T;\n  hidden?: boolean;\n  className?: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n  onClickAction?: (value: string) => void;\n  isLink?: boolean;\n  withIcon?: boolean;\n  subLabelClassName?: string;\n  subLabel?: TeactNode;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n  onClickAction,\n  subLabelClassName,\n  isLink,\n  withIcon,\n  subLabel,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  const onSubLabelClick = useLastCallback((value: string) => () => {\n    onClickAction?.(value);\n  });\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={subLabel || option.subLabel}\n          subLabelClassName={subLabelClassName}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          withIcon={withIcon}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          className={option.className}\n          onChange={handleChange}\n          onSubLabelClick={onSubLabelClick(option.value)}\n          isLink={isLink}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n  isCenteredLayout?: boolean;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n  isCenteredLayout,\n}) => {\n  const lang = useOldLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  function renderTopRow() {\n    if (isCenteredLayout) {\n      return (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {!options && (\n            <>\n              <span className=\"value-min\" dir=\"auto\">{min}</span>\n              <span className=\"label\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n              <span className=\"value-max\" dir=\"auto\">{max}</span>\n            </>\n          )}\n        </div>\n      );\n    }\n\n    if (!label) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"label\" dir=\"auto\">{label}</span>\n        {!options && (\n          <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","// extracted by mini-css-extract-plugin\nexport default {\"dotWrapper\":\"s8NMMSES\",\"sliderContainer\":\"i_wrxmyh\",\"marksContainer\":\"bVlnaLCI\",\"mark\":\"AFFaq4eZ\",\"active\":\"cuogxYPG\",\"slider\":\"H_rMZrqn\",\"tickMarks\":\"O7SI4r_Y\",\"tick\":\"b6UDc3zh\",\"filled\":\"VELPJsJ0\",\"tickUnfilled\":\"K8NtimIi\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './RangeSliderWithMarks.module.scss';\n\nexport type OwnProps = {\n  marks: number[];\n  onChange: (value: number) => void;\n  rangeCount: number;\n};\n\nconst RangeSliderWithMarks: FC<OwnProps> = ({ marks, onChange, rangeCount }) => {\n  // eslint-disable-next-line no-null/no-null\n  const sliderRef = useRef<HTMLInputElement | null>(null);\n\n  const fillPercentage = useMemo(() => {\n    return ((marks.indexOf(rangeCount) / (marks.length - 1)) * 100).toFixed(2);\n  }, [marks, rangeCount]);\n\n  const rangeCountIndex = useMemo(() => marks.indexOf(rangeCount), [marks, rangeCount]);\n\n  const rangeValue = useMemo(() => {\n    return marks.indexOf(rangeCount).toString();\n  }, [marks, rangeCount]);\n\n  useLayoutEffect(() => {\n    sliderRef.current!.style.setProperty('--fill-percentage', `${fillPercentage}%`);\n  }, [fillPercentage]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(event.target.value, 10);\n    const newValue = marks[index];\n    onChange(newValue);\n  };\n\n  return (\n    <div className={styles.dotWrapper}>\n      <form>\n        <div className={styles.sliderContainer}>\n          <div className={styles.tickMarks}>\n            {marks.map((mark, index) => {\n              const isFilled = index <= rangeCountIndex;\n              return (\n                <div\n                  key={mark}\n                  className={buildClassName(\n                    styles.tick,\n                    isFilled ? styles.filled : styles.tickUnfilled,\n                  )}\n                />\n              );\n            })}\n          </div>\n          <div className={styles.marksContainer}>\n            {marks.map((mark) => (\n              <div\n                key={mark}\n                className={buildClassName(styles.mark, rangeCount === mark && styles.active)}\n              >\n                {mark}\n              </div>\n            ))}\n          </div>\n          <input\n            ref={sliderRef}\n            type=\"range\"\n            className={styles.slider}\n            min=\"0\"\n            max={marks.length - 1}\n            value={rangeValue}\n            onChange={handleChange}\n            step=\"1\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(RangeSliderWithMarks);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  resultsItemSelector?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  hasUpButton?: boolean;\n  hasDownButton?: boolean;\n  teactExperimentControlled?: boolean;\n  withBackIcon?: boolean;\n  onChange: (value: string) => void;\n  onStartBackspace?: NoneToVoidFunction;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n  onUpClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onDownClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  resultsItemSelector,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  hasUpButton,\n  hasDownButton,\n  teactExperimentControlled,\n  withBackIcon,\n  onChange,\n  onStartBackspace,\n  onReset,\n  onFocus,\n  onBlur,\n  onClick,\n  onUpClick,\n  onDownClick,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n\n    if (!isInputFocused) {\n      handleFocus();\n    }\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    onFocus?.();\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    onBlur?.();\n  }\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (!resultsItemSelector) return;\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(resultsItemSelector) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n\n    if (e.key === 'Backspace' && e.currentTarget.selectionStart === 0 && e.currentTarget.selectionEnd === 0) {\n      onStartBackspace?.();\n    }\n  });\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      onClick={onClick}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(!isLoading && !withBackIcon)}\n        className=\"icon-container-left\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {isLoading && !withBackIcon ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : withBackIcon ? (\n          <Icon name=\"arrow-left\" className=\"back-icon\" onClick={onReset} />\n        ) : (\n          <Icon name=\"search\" className=\"search-icon\" />\n        )}\n      </Transition>\n      <div>{children}</div>\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || oldLang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        teactExperimentControlled={teactExperimentControlled}\n      />\n      {hasUpButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onUpClick}\n          disabled={!onUpClick}\n          ariaLabel={lang('AriaSearchOlderResult')}\n        >\n          <Icon name=\"up\" />\n        </Button>\n      )}\n      {hasDownButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onDownClick}\n          disabled={!onDownClick}\n          ariaLabel={lang('AriaSearchNewerResult')}\n        >\n          <Icon name=\"down\" />\n        </Button>\n      )}\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container-right\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {withBackIcon && isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          (value || canClose) && onReset && (\n            <Button\n              round\n              size=\"tiny\"\n              color=\"translucent\"\n              onClick={onReset}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          )\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"axfkbhWJ\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', ((event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }), true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"LxlpQKLr\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './Separator.module.scss';\n\ntype OwnProps = {\n  children?: React.ReactNode;\n  className?: string;\n};\n\nfunction Separator({ children, className }: OwnProps) {\n  const lang = useOldLang();\n\n  return (\n    <div\n      dir={lang.isRtl ? 'rtl' : undefined}\n      className={buildClassName(styles.separator, className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Separator;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <Icon name=\"down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.RefObject<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref: externalRef,\n}) => {\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const prevChildren = usePreviousDeprecated(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n\n  const { ref, shouldRender } = useShowTransition({\n    isOpen: isOpen && !isHidden,\n    ref: externalRef,\n    noMountTransition: isFirstRender && !shouldAnimateFirstRender,\n    className: isCustom ? false : undefined,\n    noCloseTransition,\n    withShouldRender: true,\n  });\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={className}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport { MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Icon from '../common/icons/Icon';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\nimport RippleEffect from './RippleEffect';\n\ntype OwnProps = {\n  className?: string;\n  style?: string;\n  title: TeactNode;\n  emoticon?: TeactNode;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  style,\n  title,\n  emoticon,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuAnchor, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n      style={style}\n    >\n      <span className=\"Tab_inner\">\n        {emoticon && (<span className=\"emoticon-wrapper\">{emoticon}</span>)}\n        <span className=\"Tab_text\">\n          {typeof title === 'string' ? renderText(title) : title}\n        </span>\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <Icon name=\"lock-badge\" className=\"blocked\" />}\n        <i className=\"platform\" />\n      </span>\n      <RippleEffect />\n\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: TeactNode;\n  emoticon?: TeactNode;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  className?: string;\n  tabClassName?: string;\n  tabHeight?: number;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, onSwitchTab,\n  contextRootElementSelector, className, tabClassName,\n  tabHeight,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePreviousDeprecated(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useOldLang();\n\n  return (\n    <div\n      className={buildClassName('TabList', 'no-scrollbar', className)}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id}\n          title={tab.title}\n          emoticon={tab.emoticon}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n          style={`height: ${tabHeight}px;`}\n          className={tabClassName}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useOldLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  const resizeHeight = useLastCallback((element: HTMLTextAreaElement) => {\n    requestMutation(() => {\n      element.style.height = '0';\n      requestForcedReflow(() => {\n        const newHeight = element.scrollHeight;\n        return () => {\n          element.style.height = `${newHeight}px`;\n        };\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    resizeHeight(textarea);\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.currentTarget;\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = target.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      target.value = target.value.replace(/\\n/g, ' ');\n      target.selectionEnd = previousSelectionEnd;\n    }\n    resizeHeight(target);\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React, { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const formattedTime = formatMediaDuration(timeLeft);\n\n  return (\n    <span>\n      {lang(langKey, formattedTime)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eGD1rubd\",\"widget\":\"EXXsQxeq\",\"min\":\"C4vXj96y\",\"mid\":\"nRNm3LRD\",\"max\":\"LdztzMx0\",\"filler\":\"kudEBJOk\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Toggle.module.scss';\n\ninterface OwnProps {\n  value: 'min' | 'mid' | 'max';\n}\n\nfunction Toggle({ value }: OwnProps) {\n  return (\n    <div className={buildClassName(styles.root, 'Toggle')} aria-hidden>\n      <i className={buildClassName(styles.filler, styles[value])} />\n      <i className={buildClassName(styles.widget, styles[value])} />\n    </div>\n  );\n}\n\nexport default memo(Toggle);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Oob7moh7\",\"avatar\":\"ao0o6F_1\",\"info\":\"e94nYlC4\",\"title\":\"ANs9RCJu\",\"subtitle\":\"RSn3O5Rx\",\"animated\":\"AtWkrIxV\",\"slide\":\"_iiRl0o2\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n"],"names":["memo","AnimatedWallpaper","blobUrl","colors","isDark","isPattern","animate","canAnimate","_animate","useRef","_colors","length","j","i","gradientCanvasRef","useEffect","current","renderAnimatedWallpaper","React","createElement","style","className","ref","buildClassName","AvatarEditable","title","disabled","isForForum","currentAvatarBlobUrl","onChange","selectedFile","setSelectedFile","useState","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","useCallback","croppedImg","undefined","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","role","tabIndex","type","event","target","files","value","accept","Icon","name","src","draggable","alt","CropModal","file","onClose","Badge","text","isAlternateColor","ShowTransition","isOpen","Boolean","AnimatedCounter","CheckboxGroup","id","options","selected","nestedCheckbox","loadingOptions","isRound","values","setValues","handleChange","useLastCallback","nestedOptionList","checked","currentTarget","newValues","push","nestedOptions","forEach","nestedOption","includes","filter","v","map","some","nestedValue","getCheckedNestedCount","checkedCount","option","Checkbox","label","subLabel","indexOf","isLoading","nestedCheckboxCount","ConfirmDialog","header","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","children","confirmHandler","onCloseAnimationEnd","lang","useOldLang","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","textPart","onKeyDown","Button","isText","onClick","color","cropperResultOptions","quality","format","circle","size","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","error","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","hasCloseButton","Loading","round","ariaLabel","ZERO_POINT","x","y","Draggable","onDrag","onDragEnd","externalStyle","knobStyle","isDisabled","state","setState","isDragging","origin","translation","handleMouseDown","e","stopPropagation","preventDefault","getClientCoordinate","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","fullClassName","cssStyles","useMemo","buildStyle","onMouseDown","onTouchStart","touches","clientX","clientY","FloatingActionButton","isShown","buttonClassName","isRtl","isActivated","withGlobal","global","isBackgroundTranslucent","selectIsContextMenuTranslucent","FolderEmoticonPickerMenu","idPrefix","onLoad","onEmojiSelect","onCustomEmojiSelect","menuPositionOptions","activeTab","setActiveTab","isMobile","useAppLayout","handleMouseEnter","handleMouseLeave","useMouseInside","shouldRender","transitionClassNames","useShowTransitionDeprecated","handleEmojiSelect","emoji","handleCustomEmojiSelect","extraCategory","showTitle","emojis","Object","entries","EMOTICON_TO_SVG","fc","renderContent","isActive","isFrom","SymbolMenuTabs","Emoji","EmojiPickerWithExtra","CustomEmoji","CustomEmojiPicker","isHidden","loadAndPlay","isTranslucent","content","Fragment","Transition","activeKey","renderCount","faded","SymbolMenuFooter","onSwitchTab","canSearch","isAttachmentModal","canSendPlainText","mobileClassName","Menu","_extends","withPortal","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","noCompact","FolderEmoticonPickerButton","isReady","isSymbolMenuOpen","isSymbolMenuForced","forceDarkTheme","openSymbolMenu","closeSymbolMenu","onRemoveSymbol","icon","positionOptions","addRecentEmoji","addRecentCustomEmoji","getActions","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","useFlag","contextMenuAnchor","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","getBoundingClientRect","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","iconElement","Spinner","ResponsiveHoverButton","onActivate","anchor","FolderIcon","folderId","emoticon","emoticonDef","ALL_FOLDER_ID","FolderIconSvg","renderText","ChatsSvg","viewBox","fill","xmlns","d","ChatSvg","UserSvg","GroupSvg","StarSvg","ChannelSvg","BotSvg","FolderSvg","InfiniteScroll","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","scrollContainerClosest","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","direction","LoadMoreDirection","Backwards","Forwards","scrollContainer","scrollHeight","clientHeight","useLayoutEffect","container","requestForcedReflow","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","scrollTop","newAnchorTop","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","handleNativeScroll","teactFastList","IS_ANDROID","ListItem","buttonRef","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","secondaryIconClassName","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","multiline","isStatic","allowSelection","withColorTransition","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","nonInteractive","isTouched","markIsTouched","unmarkIsTouched","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","handleClick","Auxiliary","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","useFastClick","Secondary","ButtonElementTag","dir","RippleEffect","autoClose","bubbleClassName","action","MenuSeparator","key","MenuItem","handler","styles","root","ANIMATION_DURATION","freezeWhenClosed","dialogRef","contentClassName","headerClassName","isSlim","hasAbsoluteCloseButton","absoluteCloseButtonColor","noBackdrop","noBackdropClose","dialogStyle","isLowStackPriority","dialogContent","onEnter","modalRef","useShowTransition","withShouldRender","withCloseButton","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","trapFocus","useHistoryBack","onBack","useLayoutEffectWithPrevDeps","prevIsOpen","body","classList","toggle","beginHeavyAnimation","remove","Portal","closeButton","renderHeader","RoundTimer","duration","onEnd","timeLeft","setTimeLeft","useInterval","prev","svg","cx","cy","r","transform","pathLength","formatCountdownShort","DEFAULT_DURATION","CUSTOM_EMOJI_SIZE","REM","Notification","notification","actions","useLang","localId","message","actionText","cacheBreaker","disableClickDismiss","dismissAction","customEmojiIconId","shouldShowTimer","containerSelector","setIsOpen","timerRef","handleDismiss","dismissNotification","closeAndDismiss","force","setTimeout","ANIMATION_END_DELAY","payload","isArray","cb","captureEscKeyListener","clearTimeout","renderedTitle","isLangFnParam","with","renderedMessage","renderedActionText","forceAlways","documentId","Math","ceil","SIZES","s","m","l","xl","MIN_PROGRESS","ProgressSpinner","progress","square","transparent","noCross","rotationOffset","withColor","canvasRef","progressRef","useStateRef","dpr","useDevicePixelRatio","useDynamicColorListener","growStartedAt","prevProgress","isFirst","growFrom","min","max","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","offset","startAngle","PI","endAngle","ctx","getContext","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","requestMutation","Radio","subLabelClassName","hidden","onlyInput","withIcon","isLink","onSubLabelClick","RadioGroup","loadingOption","onClickAction","RangeSlider","step","bold","renderValue","isCenteredLayout","Number","mainClassName","trackWidth","RangeSliderWithMarks","marks","rangeCount","sliderRef","fillPercentage","toFixed","rangeCountIndex","rangeValue","toString","setProperty","mark","isFilled","parseInt","newValue","openTimeout","isFirstTimeActivation","buttonProps","isMouseInside","SearchInput","resultsItemSelector","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","hasUpButton","hasDownButton","teactExperimentControlled","withBackIcon","onStartBackspace","onReset","onFocus","onBlur","onUpClick","onDownClick","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","oldLang","handleFocus","element","selectionStart","selectionEnd","shouldCleanup","slideClassName","backgroundColor","props","hasArrow","labelText","htmlFor","SelectAvatar","openSystemFilesDialog","ShowMoreButton","count","itemName","itemPluralName","isCustom","noCloseTransition","shouldAnimateFirstRender","externalRef","usePreviousDeprecated","prevChildren","fromChildrenRef","isFirstRender","noMountTransition","Switcher","noAnimation","onCheck","classNames","Tab","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","add","tabEl","prevTabEl","parentElement","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","IS_IOS","TabList","tabs","tabClassName","tabHeight","useHorizontalScroll","scrollWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","TextArea","success","readOnly","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","resizeHeight","newHeight","textarea","previousSelectionEnd","replace","TextTimer","langKey","endsAt","forceUpdate","useForceUpdate","serverTime","getServerTime","formattedTime","formatMediaDuration","filler","widget","PlaceholderChatInfo","Skeleton","variant","animation","forceAspectRatio","inline","aspectRatio"],"sourceRoot":""}