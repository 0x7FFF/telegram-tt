{"version":3,"file":"2363.6af063f9bfc56f60fe10.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/gift/GiftRibbon.module.scss?54c5","webpack://telegram-t/./src/components/common/gift/GiftRibbon.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"fluid\":\"P_7xai7z\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus />;\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    fluid && styles.fluid,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={styles.name} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AmQSvxpZ\",\"text\":\"pQW7dcwr\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useUniqueId from '../../../hooks/useUniqueId';\n\nimport styles from './GiftRibbon.module.scss';\n\nconst COLORS = {\n  red: [['#FF5B54', '#ED1C26'], ['#653633', '#532224']],\n  blue: [['#6ED2FF', '#34A4FC'], ['#344F5A', '#152E42']],\n} as const;\ntype ColorKey = keyof typeof COLORS;\n\nconst COLOR_KEYS = new Set(Object.keys(COLORS) as ColorKey[]);\n\ntype OwnProps = {\n  color: ColorKey | string;\n  text: string;\n  className?: string;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst GiftRibbon = ({\n  text, color, className, theme,\n}: OwnProps & StateProps) => {\n  const randomId = useUniqueId();\n  const validSvgRandomId = `svg-${randomId}`; // ID must start with a letter\n\n  const colorKey = COLOR_KEYS.has(color as ColorKey) ? color as ColorKey : undefined;\n\n  const isDarkTheme = theme === 'dark';\n\n  const gradientColor = colorKey ? COLORS[colorKey][isDarkTheme ? 1 : 0] : undefined;\n  const startColor = gradientColor ? gradientColor[0] : color;\n  const endColor = gradientColor ? gradientColor[1] : color;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.ribbon} width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\">\n        <path d=\"M52.4851 26.4853L29.5145 3.51472C27.2641 1.26428 24.2119 0 21.0293 0H2.82824C1.04643 0 0.154103 2.15429 1.41403 3.41422L52.5856 54.5858C53.8455 55.8457 55.9998 54.9534 55.9998 53.1716V34.9706C55.9998 31.788 54.7355 28.7357 52.4851 26.4853Z\" fill={`url(#${validSvgRandomId})`} />\n        <defs>\n          <linearGradient id={validSvgRandomId} x1=\"27.9998\" y1=\"1\" x2=\"27.9998\" y2=\"55\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={startColor} />\n            <stop offset=\"1\" stop-color={endColor} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      theme: selectTheme(global),\n    };\n  },\n)(GiftRibbon));\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiPeer } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(peer: ApiPeer, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(peer), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, MessageListType, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport { getChatTitle, getMessageHtmlId, isJoinedChannelMessage } from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsMessageFocused,\n  selectStarGiftSticker,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger, formatIntegerCompact } from '../../util/textFormat';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport Avatar from '../common/Avatar';\nimport GiftRibbon from '../common/gift/GiftRibbon';\nimport Sparkles from '../common/Sparkles';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starGiftSticker?: ApiSticker;\n  starsGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n  patternColor?: string;\n};\n\nconst APPEARANCE_DELAY = 10;\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starGiftSticker,\n  starsGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  patternColor,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openGiftInfoModalFromMessage,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage({\n    elementRef: ref,\n    chatId: message.chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isJustAdded,\n  });\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    openGiftInfoModalFromMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          {oldLang('BoostingReceivedGiftOpenBtn')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarGiftUserCaption() {\n    const targetUser = targetUsers && targetUsers[0];\n    if (!targetUser || !senderUser) return undefined;\n\n    if (message.isOutgoing) {\n      return (\n        <div className=\"action-message-user-caption\">\n          <span> {lang('GiftTo')} </span>\n          <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={targetChat} />\n          <span> {targetUser.firstName} </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"action-message-user-caption\">\n        <span> {lang('GiftFrom')} </span>\n        <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={senderUser} />\n        <span> {senderUser.firstName} </span>\n      </div>\n    );\n  }\n\n  function renderStarGiftUserDescription() {\n    const starGift = message.content.action?.starGift;\n    const targetUser = targetUsers && targetUsers[0]?.firstName;\n    const starGiftMessage = message.content.action?.starGift?.message;\n    if (!starGift) return undefined;\n\n    if (starGiftMessage) {\n      return renderTextWithEntities({ text: starGiftMessage.text, entities: starGiftMessage.entities });\n    }\n    const amount = starGift?.starsToConvert;\n\n    if (message.isOutgoing) {\n      return lang('ActionStarGiftOutDescription', {\n        user: targetUser || 'User',\n        count: amount,\n      }, { withNodes: true });\n    }\n\n    if (starGift.isSaved) {\n      return lang('ActionStarGiftDisplaying');\n    }\n\n    if (starGift.isConverted) {\n      return message.isOutgoing\n        ? lang('GiftInfoDescriptionOutConverted', {\n          amount: formatInteger(amount!),\n          user: targetUser || 'User',\n        }, {\n          pluralValue: amount!,\n          withNodes: true,\n          withMarkdown: true,\n        })\n        : lang('GiftInfoDescriptionConverted', {\n          amount: formatInteger(amount!),\n        }, {\n          pluralValue: amount!,\n          withNodes: true,\n          withMarkdown: true,\n        });\n    }\n\n    return lang('ActionStarGiftDescription', {\n      count: amount,\n    }, { withNodes: true });\n  }\n\n  function renderStarGift() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return undefined;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code action-message-star-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n\n        <AnimatedIconFromSticker\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-gift-subtitle\">\n          {renderStarGiftUserDescription()}\n        </div>\n\n        {!message.isOutgoing && (\n          <div className=\"action-message-button\">\n            <Sparkles preset=\"button\" />\n            {oldLang('ActionGiftPremiumView')}\n          </div>\n        )}\n        {starGift.gift.availabilityTotal && (\n          <GiftRibbon\n            color={patternColor || 'blue'}\n            text={oldLang('Gift2Limited1OfRibbon', formatIntegerCompact(starGift.gift.availabilityTotal))}\n          />\n        )}\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isStarGift && renderStarGift()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const theme = selectTheme(global);\n    const {\n      patternColor,\n    } = global.settings.themes[theme] || {};\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starGift = content.action?.type === 'starGift' ? content.action.starGift?.gift : undefined;\n    const starCount = content.action?.stars;\n    const starGiftSticker = starGift?.stickerId ? selectStarGiftSticker(global, starGift.stickerId) : undefined;\n    const starsGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starGiftSticker,\n      starsGiftSticker,\n      topic,\n      patternColor,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import type {\n  ApiInputInvoice,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      userId, shouldHideName, giftId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stargift',\n      user,\n      shouldHideName,\n      giftId,\n      message,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, targetChatId } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: targetChatId!,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","id","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","withGlobal","global","peerId","forceShowSelf","peer","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","fluid","withPeerColors","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","Icon","name","Avatar","getPeerTitle","FullNameTitle","withEmojiStatus","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","useState","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","COLORS","red","blue","COLOR_KEYS","Object","keys","theme","selectTheme","GiftRibbon","color","validSvgRandomId","useUniqueId","colorKey","gradientColor","startColor","endColor","root","ribbon","x1","y1","x2","y2","gradientUnits","offset","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","itemClassName","isLoading","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","inputRef","shouldMinimize","requestMeasure","focus","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","filter","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","type","newSelectedCategories","slice","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","value","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","disabled","inactive","ripple","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","map","container","header","peerChip","InputText","onChange","placeholder","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","role","tabIndex","RippleEffect","IS_IOS","ActionMessageSuggestedAvatar","message","renderContent","openMediaViewer","uploadProfilePhoto","showNotification","getActions","isOutgoing","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","photo","content","action","suggestedPhotoUrl","getPhotoMediaHash","suggestedVideoUrl","getVideoProfilePhotoMediaHash","isVideo","showAvatarNotification","payload","screen","SettingsScreens","Main","actionText","handleSetSuggestedAvatar","file","handleCloseCropModal","handleSetVideo","async","blob","fetchBlob","File","videoTs","videoSizes","find","l","videoStartTs","chatId","messageId","threadId","MAIN_THREAD_ID","origin","MediaViewerOrigin","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","onClose","ConfirmDialog","isOpen","confirmHandler","textParts","SimilarChannel","channel","openChat","fallbackColor","setColor","imgBlobUrl","getChatAvatarHash","averageColor","getAverageColor","rgb2hex","useAverageColor","formatIntegerCompact","membersCount","MoreChannels","channelsCount","isCurrentUserPremium","openPremiumModal","openChatWithInfo","shouldReplaceHistory","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","selectIsCurrentUserPremium","SimilarChannels","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","useTimeout","handleToggle","Skeleton","xmlns","Button","SHOW_CHANNELS_NUMBER","senderId","targetUserIds","targetChatId","targetMessageId","getMessageReplyInfo","replyToMsgId","targetMessage","selectChatMessage","patternColor","settings","themes","isFocused","selectIsMessageFocused","direction","focusDirection","noHighlight","noFocusHighlight","selectTabState","focusedMessage","senderUser","senderChat","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starGift","gift","starCount","stars","starGiftSticker","stickerId","selectStarGiftSticker","starsGiftSticker","selectGiftStickerForStars","topic","selectTopicFromMessage","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","ActionMessage","isEmbedded","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","observeIntersectionForLoading","observeIntersectionForPlaying","onIntersectPinnedMessage","requestConfetti","checkGiftCode","getReceipt","openGiftInfoModalFromMessage","openPrizeStarsTransactionFromGiveaway","oldLang","useOnIntersect","useEnsureMessage","replyInfo","useFocusMessage","elementRef","useUnmountCleanup","isPinned","viewportPinnedIdsToRemove","noAppearanceAnimation","isShown","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isStarGift","isPrizeStars","useIsIntersecting","shouldShowConfettiRef","isUnread","withStars","usersById","users","byId","targetUsers","userId","renderActionMessageText","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isContextMenuShown","handleStarGiftClick","handlePremiumGiftClick","isGift","fromUserId","toUserId","monthsAmount","handlePrizeStarsClick","handleGiftCodeClick","slug","getMessageHtmlId","onMouseDown","preventMessageInputBlur","onContextMenu","giftMessage","AnimatedIconFromSticker","play","noLoop","nonInteractive","renderTextWithEntities","entities","Sparkles","preset","renderGift","isFromGiveaway","isGiveaway","isUnclaimed","renderText","getChatTitle","renderGiftCode","formatInteger","targetUser","firstName","renderStarGiftUserCaption","starGiftMessage","amount","starsToConvert","withNodes","isSaved","isConverted","pluralValue","withMarkdown","renderStarGiftUserDescription","availabilityTotal","renderStarGift","renderPrizeStars","ContextMenuContainer","anchor","messageListType","onCloseAnimationEnd","useModuleLoader","Bundles","Extra","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","closest","isToBottom","scrollPosition","exec","maxDistance","result","animateScroll","element","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","currency","purpose","hash","userIds","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","number","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","isMyGift","getPrizeStarsTransactionFromGiveaway","giveawayPostId","isApiPeerUser","SERVICE_NOTIFICATIONS_USER_ID","isSupport","isContact","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","canvas","img","Image","processBlur","ctx","getContext","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","fastBlur","onload","replyOriginForId","loadMessage","containerRef","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","preventDefault","addEventListener","passive","removeEventListener","useEffectOnce","addLocalizationCallback","getTranslationFn","usePrevious","prevRef","lastRef","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","duration","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","Promise","resolve","get","target","isStopped","random","toString","set","scrollSnapType","startAt","animate","t","currentPath","transition","round","delete","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","offsetHeight","elementHeight","scrollTop","currentScrollTop","containerHeight","scrollHeight","elementTop","offsetTop","offsetLeft","contains","offsetParent","getOffsetToContainer","targetContainerHeight","normalHeight","Number","scrollTo","IS_ANDROID","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","beginHeavyAnimation","animateSingle","newScrollTop","isAnimatingScroll","cancelScrollBlockingAnimation","hex2rgb","param","parseInt","substring","p0","p1","p2","rgb2hsb","r","g","b","h","s","v","hsb2rgb","floor","f","p","q","url","defaultRGB","data","rgb","document","context","image","preloadImage","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","convertToRGBA","getTextColor","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN"],"sourceRoot":""}