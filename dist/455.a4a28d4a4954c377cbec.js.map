{"version":3,"file":"455.a4a28d4a4954c377cbec.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/FullNameTitle.module.scss?6448","webpack://telegram-t/./src/components/common/FullNameTitle.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumIcon.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicDefaultIcon.module.scss?06b0","webpack://telegram-t/./src/components/common/TopicDefaultIcon.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/AvatarBadge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/hooks/useCollapseWithForumPanel.ts","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatOrderDiff.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCacheBuster.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/useOnSelectionChange.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStateRef.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/WorkerConnector.ts","webpack://telegram-t/./src/lib/rlottie/RLottie.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/forumColors.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/stopEvent.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiGroupCall, ApiUser } from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  animationLevel: AnimationLevel;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n  usersById,\n  chatsById,\n  animationLevel,\n}) => {\n  const {\n    joinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    joinGroupCall({\n      chatId,\n    });\n  }, [joinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (participants) {\n      return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n        if (isUser) {\n          if (!usersById[id]) {\n            return undefined;\n          }\n          return { user: usersById[id] };\n        } else {\n          if (!chatsById[id]) {\n            return undefined;\n          }\n          return { chat: chatsById[id] };\n        }\n      }).filter(Boolean);\n    } else return [];\n  }, [chatsById, participants, usersById]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n          if (p.user) {\n            return <Avatar key={p.user.id} user={p.user} animationLevel={animationLevel} />;\n          } else {\n            return <Avatar key={p.chat.id} chat={p.chat} animationLevel={animationLevel} />;\n          }\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    return {\n      groupCall,\n      usersById: global.users.byId,\n      chatsById: global.chats.byId,\n      activeGroupCallId: global.groupCalls.activeGroupCallId,\n      isActive: ((!groupCall ? (chat && chat.isCallNotEmpty && chat.isCallActive)\n        : (groupCall.participantsCount > 0 && groupCall.isLoaded)))\n        && (global.groupCalls.activeGroupCallId !== groupCall?.id),\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { ANIMATION_LEVEL_MAX } from '../../config';\nimport usePrevious from '../../hooks/usePrevious';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useTimeout from '../../hooks/useTimeout';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n};\n\nconst ANIMATION_TIME = 150;\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n}) => {\n  const lang = useLang();\n\n  const prevText = usePrevious(text);\n  const forceUpdate = useForceUpdate();\n\n  const isAnimatingRef = useRef(false);\n\n  const shouldAnimate = getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MAX;\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) return text;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld}>{prevText[i]}</div>\n            <div className={styles.characterNew}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    isAnimatingRef.current = true;\n\n    return elements;\n  }, [prevText, shouldAnimate, text]);\n\n  useTimeout(() => {\n    isAnimatingRef.current = false;\n    forceUpdate();\n  }, shouldAnimate && isAnimatingRef.current ? ANIMATION_TIME : undefined);\n\n  return (\n    <span className={styles.root} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  }, [markPreviewLoaded, previewUrl]);\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport type { LangFn } from '../../hooks/useLang';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport { getTranslation } from '../../util/langProvider';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n// eslint-disable-next-line max-len\nconst TRANSCRIBE_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 24\" class=\"loading-svg\"><rect class=\"loading-rect\" fill=\"transparent\" width=\"32\" height=\"24\" stroke-width=\"3\" stroke-linejoin=\"round\" rx=\"6\" ry=\"6\" stroke=\"var(--accent-color)\" stroke-dashoffset=\"1\" stroke-dasharray=\"32,68\"></rect></svg>';\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  const handleTranscribe = useCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  }, [message.chatId, message.id, transcribeAudio]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const transcribeSvgMemo = useMemo(() => (\n    <div dangerouslySetInnerHTML={{ __html: TRANSCRIBE_SVG }} />\n  ), []);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          transcribeSvgMemo,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: IS_SINGLE_COLUMN_LAYOUT ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: IS_SINGLE_COLUMN_LAYOUT\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = getTranslation;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  svgMemo?: React.ReactNode,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && svgMemo}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat, selectCurrentMessageList, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../global/selectors';\nimport {\n  getChatDescription,\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    isForum?: boolean;\n    topicId?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  isForum,\n  topicId,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    fullInfo,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isForum\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat);\n  }, [chat, isForum, activeChatUsernames, topicId]);\n\n  const handleNotificationChange = useCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (topicId) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  }, [chatId, topicId, updateChatMutedState, updateTopicMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => (\n                <>\n                  {idx > 0 ? ', ' : ''}\n                  <a\n                    key={nick}\n                    href={`${TME_LINK_PREFIX}${nick}`}\n                    onClick={(e) => {\n                      stopEvent(e);\n                      copy(`@${nick}`, lang(isChat ? 'Link' : 'Username'));\n                    }}\n                    className=\"text-entity-link username-link\"\n                  >\n                    {`@${nick}`}\n                  </a>\n                </>\n              ))}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const publicLink = isForum\n      ? getTopicLink('', mainUsername.username, topicId)\n      : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon=\"mention\"\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(publicLink, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{publicLink}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && renderUsernames(activeChatUsernames, true)}\n      {!activeChatUsernames && canInviteUsers && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      isForum,\n      topicId,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { AnimationLevel } from '../../types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  animationLevel: AnimationLevel;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  animationLevel,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n          animationLevel={animationLevel}\n          withVideo\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      {isBot && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n          {lang('DeleteAndStop')}\n        </Button>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n          {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n        </Button>\n      )}\n      {!isPrivateChat && chat.isCreator && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n          {lang('DeleteForAll')}\n        </Button>\n      )}\n      <Button\n        color=\"danger\"\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n      >\n        {lang(renderActionText())}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return (\n    <span className=\"FakeIcon\">\n      {lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}\n    </span>\n  );\n};\n\nexport default memo(FakeIcon);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED, IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, IS_SINGLE_COLUMN_LAYOUT && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\">{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ysHMmXALnn0fgFRc7Bn7\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getChatTitle, getUserFullName, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport FakeIcon from './FakeIcon';\nimport CustomEmoji from './CustomEmoji';\nimport PremiumIcon from './PremiumIcon';\n\nimport styles from './FullNameTitle.module.scss';\n\ntype OwnProps = {\n  peer: ApiChat | ApiUser;\n  className?: string;\n  noVerified?: boolean;\n  noFake?: boolean;\n  withEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  isSavedMessages?: boolean;\n  noLoopLimit?: boolean;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  observeIntersection?: ObserveFn;\n};\n\nconst FullNameTitle: FC<OwnProps> = ({\n  className,\n  peer,\n  noVerified,\n  noFake,\n  withEmojiStatus,\n  emojiStatusSize,\n  isSavedMessages,\n  noLoopLimit,\n  onEmojiStatusClick,\n  observeIntersection,\n}) => {\n  const lang = useLang();\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n  const emojiStatus = isUser && (peer as ApiUser).emojiStatus;\n  const isPremium = isUser && (peer as ApiUser).isPremium;\n\n  if (isSavedMessages) {\n    return (\n      <div className={buildClassName('title', styles.root, className)}>\n        <h3>{lang('SavedMessages')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName('title', styles.root, className)}>\n      <h3 dir=\"auto\" className=\"fullName\">{renderText(title || '')}</h3>\n      {!noVerified && peer.isVerified && <VerifiedIcon />}\n      {!noFake && peer.fakeType && <FakeIcon fakeType={peer.fakeType} />}\n      {withEmojiStatus && emojiStatus && (\n        <CustomEmoji\n          documentId={emojiStatus.documentId}\n          size={emojiStatusSize}\n          loopLimit={!noLoopLimit ? EMOJI_STATUS_LOOP_LIMIT : undefined}\n          observeIntersectionForLoading={observeIntersection}\n          onClick={onEmojiStatusClick}\n        />\n      )}\n      {withEmojiStatus && !emojiStatus && isPremium && <PremiumIcon />}\n    </div>\n  );\n};\n\nexport default memo(FullNameTitle);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat, selectChatMessages, selectChatOnlineCount, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  withVideoAvatar?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    animationLevel: AnimationLevel;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  withVideoAvatar,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  topic,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (chat && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {threadInfo?.messagesCount ? lang('messages', threadInfo.messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          withVideo={withVideoAvatar}\n          animationLevel={animationLevel}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon topic={topic!} className=\"topic-header-icon\" size={TOPIC_ICON_SIZE} />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        <i className={`icon-message-${status}`} />\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV, IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst FOCUS_DELAY_TIMEOUT_MS = IS_SINGLE_COLUMN_LAYOUT ? 550 : 400;\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, FOCUS_DELAY_TIMEOUT_MS);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport generateIdFor from '../../util/generateIdFor';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './PremiumIcon.scss';\n\n// eslint-disable-next-line max-len\nconst PREMIUM_ICON = { __html: '<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"var(--color-fill)\"/></svg>' };\nconst store: Record<string, boolean> = {};\n\ntype OwnProps = {\n  withGradient?: boolean;\n  big?: boolean;\n  className?: string;\n  onClick?: VoidFunction;\n};\n\nconst PremiumIcon: FC<OwnProps> = ({\n  withGradient,\n  big,\n  className,\n  onClick,\n}) => {\n  const html = useMemo(() => {\n    return withGradient ? getPremiumIconGradient() : PREMIUM_ICON;\n  }, [withGradient]);\n\n  return (\n    <i\n      onClick={onClick}\n      className={buildClassName(\n        'PremiumIcon', className, withGradient && 'gradient', onClick && 'clickable', big && 'big',\n      )}\n      dangerouslySetInnerHTML={html}\n      title=\"Premium\"\n    />\n  );\n};\n\nfunction getPremiumIconGradient() {\n  const id = generateIdFor(store);\n  return {\n    // eslint-disable-next-line max-len\n    __html: `<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"${id}\" x1=\"3\" y1=\"63.5001\" x2=\"84.1475\" y2=\"-1.32262\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6B93FF\"/><stop offset=\"0.439058\" stop-color=\"#976FFF\"/><stop offset=\"1\" stop-color=\"#E46ACE\"/></linearGradient></defs><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"url(#${id})\"/></svg>`,\n  };\n}\n\nexport default memo(PremiumIcon);\n","import React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withVideoAvatar?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    areMessagesLoaded: boolean;\n    serverTimeOffset: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withVideoAvatar,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  serverTimeOffset,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (user && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{renderText(status)}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus, serverTimeOffset)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        withVideo={withVideoAvatar}\n        animationLevel={animationLevel}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      serverTimeOffset,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED, IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const currentPhoto = photo || userOrChat?.fullInfo?.profilePhoto;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = currentPhoto || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal', 'photo');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && currentPhoto && !isVideo && `photo${currentPhoto.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && currentPhoto && isVideo && getVideoAvatarMediaHash(currentPhoto);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && currentPhoto?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    currentPhoto?.thumbnail?.dataUri, !isBlurredThumb, IS_SINGLE_COLUMN_LAYOUT && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = currentPhoto || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {currentPhoto && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { GENERAL_TOPIC_ID } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectChat, selectCurrentMessageList, selectThreadInfo, selectUser, selectUserStatus,\n} from '../../global/selectors';\nimport { getUserStatus, isChatChannel, isUserOnline } from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    serverTimeOffset: number;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  serverTimeOffset,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? animationLevel >= 1 ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized') : 'none'\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const handleClickPremium = useCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  }, [openPremiumModal, user]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount && messagesCount > 1\n            ? lang('Chat.Title.Topic', messagesCount + (topic!.id === GENERAL_TOPIC_ID ? 1 : -1), 'i')\n            : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus, serverTimeOffset)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n    const { mediaId, avatarOwnerId } = global.mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const threadInfo = currentTopicId ? selectThreadInfo(global, userId, currentTopicId) : undefined;\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      serverTimeOffset,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: threadInfo?.messagesCount,\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"report\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n        {lang('lng_report_button')}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/environment';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  canViewSet?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  observeIntersection: ObserveFn;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noAnimate,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  canViewSet,\n  observeIntersection,\n  isCurrentUserPremium,\n  sharedCanvasRef,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noAnimate;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => ref.current!.querySelector('.sticker-context-menu .bubble'),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextRemoveRecent = useCallback(() => {\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const handleOpenSet = useCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  }, [openStickerSet, stickerSetInfo]);\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isCustomEmoji && 'custom-emoji',\n    `sticker-button-${id}`,\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (noContextMenu || isCustomEmoji) return [];\n\n    const items: ReactNode[] = [];\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    canViewSet, handleContextFave, handleContextRemoveRecent, handleContextUnfave, handleOpenSet, handleSendQuiet,\n    handleSendScheduled, isLocked, isSavedMessages, lang, onFaveClick, onRemoveRecentClick, onUnfaveClick, onClick,\n    noContextMenu, isCustomEmoji,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        isSmall\n        size={size}\n        shouldLoop\n        shouldPreloadPreview\n        noLoad={!shouldLoad}\n        noPlay={!shouldPlay}\n        withSharedAnimation\n        sharedCanvasRef={sharedCanvasRef}\n      />\n      {isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon-lock-badge\" />\n        </div>\n      )}\n      {isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aJM6jZTv0FGmbmVoeSGw\",\"icon\":\"BYayNMDdPVgrna3NsHfu\",\"title\":\"G4SxYH1X0X2e4J1z7GPV\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { GENERAL_TOPIC_ID } from '../../config';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getTopicDefaultIcon } from '../../util/forumColors';\n\nimport styles from './TopicDefaultIcon.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  letterClassName?: string;\n  topicId: number;\n  iconColor?: number;\n  title: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TopicDefaultIcon: FC<OwnProps> = ({\n  className,\n  letterClassName,\n  topicId,\n  iconColor,\n  title,\n  onClick,\n}) => {\n  const iconSrc = getTopicDefaultIcon(iconColor);\n\n  if (topicId === GENERAL_TOPIC_ID) {\n    return (\n      <i className={buildClassName(styles.root, className, 'icon-hashtag', 'general-forum-icon')} onClick={onClick} />\n    );\n  }\n  return (\n    <div className={buildClassName(styles.root, className)} onClick={onClick}>\n      <img className={styles.icon} src={iconSrc} alt=\"\" draggable={false} />\n      <div className={buildClassName(styles.title, letterClassName, 'topic-icon-letter')}>\n        {renderText(getFirstLetters(title, 1))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TopicDefaultIcon);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n          isRtl={lang.isRtl}\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities(\n    trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    message.id,\n    isSimple,\n    isProtected,\n  );\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'Badge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('Badge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"Badge mention\">\n        <i className=\"icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('Badge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"Badge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !IS_SINGLE_COLUMN_LAYOUT && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport Badge from './Badge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <Badge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiUser,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiFormattedText,\n  ApiUserStatus,\n  ApiTopic,\n  ApiTypingStatus,\n} from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  isUserId,\n  getPrivateChatUserId,\n  getMessageAction,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectUser,\n  selectChatMessage,\n  selectOutgoingStatus,\n  selectDraft,\n  selectCurrentMessageList,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectUserStatus,\n  selectIsDefaultEmojiStatusPack,\n  selectTopicFromMessage,\n  selectThreadParam,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport Badge from './Badge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  offsetCollapseDelta: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  isEmojiStatusColored?: boolean;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: AnimationLevel;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  isEmojiStatusColored,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  offsetCollapseDelta,\n  draft,\n  animationLevel,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openForumPanel,\n    focusLastMessage,\n    loadTopics,\n  } = getActions();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleClick = useCallback(() => {\n    if (isForum) {\n      openForumPanel({ chatId });\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isForum, openChat, chatId, isSelected, canScrollDown, openForumPanel, focusLastMessage,\n  ]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  }, [chatId, onDragEnter]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.topics === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      offsetCollapseDelta={offsetCollapseDelta}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n          animationLevel={animationLevel}\n          withVideo\n          observeIntersection={observeIntersection}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n            key={!IS_SINGLE_COLUMN_LAYOUT && isEmojiStatusColored ? `${isSelected}` : undefined}\n          />\n          {isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = chatId === global.forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const statusEmoji = user?.emojiStatus && global.customEmojis.byId[user.emojiStatus.documentId];\n    const isEmojiStatusColored = statusEmoji && selectIsDefaultEmojiStatusPack(global, statusEmoji.stickerSetInfo);\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      isEmojiStatusColored,\n      lastMessageTopic,\n      typingStatus,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, {\n  memo, useEffect, useRef, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID, CHAT_HEIGHT_FORUM_PX,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport { selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport useCollapseWithForumPanel from './hooks/useCollapseWithForumPanel';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  foldersDispatch,\n  onScreenSelect,\n}) => {\n  const { openChat, openNextChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        const position = Number(digit) - 1;\n        if (position > orderedIds!.length - 1 || position < 0) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isActive, openChat, openNextChat, orderedIds]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useCollapseWithForumPanel(containerRef, isForumPanelOpen);\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  }, []);\n\n  const viewportOffsetPx = useMemo(() => {\n    if (!viewportIds?.length) return 0;\n    const global = getGlobal();\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    return orderedIds!.reduce((acc, id, i) => {\n      if (i >= viewportOffset) {\n        return acc;\n      }\n      return acc + (selectChat(global, id)!.isForum ? CHAT_HEIGHT_FORUM_PX : CHAT_HEIGHT_PX);\n    }, 0);\n  }, [orderedIds, viewportIds]);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const global = getGlobal();\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    let currentChatListHeight = viewportOffsetPx;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const expendedOffsetTop = currentChatListHeight;\n      const collapsedOffsetTop = (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      currentChatListHeight += (selectChat(global, id)!.isForum ? CHAT_HEIGHT_FORUM_PX : CHAT_HEIGHT_PX);\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={isForumPanelOpen ? collapsedOffsetTop : expendedOffsetTop}\n          offsetCollapseDelta={expendedOffsetTop - collapsedOffsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={(orderedIds?.length || 0) * CHAT_HEIGHT_PX}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import { useLayoutEffect } from '../../../../lib/teact/teact';\nimport { fastRaf } from '../../../../util/schedulers';\nimport { ANIMATION_END_DELAY } from '../../../../config';\n\nconst ANIMATION_DURATION = 450;\n\n// Reduce height of forum chat items when opening Forum Panel\nexport default function useCollapseWithForumPanel(\n  containerRef: React.RefObject<HTMLDivElement>,\n  isForumPanelOpen = false,\n) {\n  useLayoutEffect(() => {\n    const chatEls = Array.from(containerRef.current!.querySelectorAll<HTMLDivElement>('.Chat'));\n\n    chatEls.forEach((chatEl) => {\n      const offsetCollapseDelta = Number(chatEl.dataset.offsetCollapseDelta);\n      chatEl.style.transform = `translateY(${isForumPanelOpen ? offsetCollapseDelta : -offsetCollapseDelta!}px)`;\n    });\n\n    fastRaf(() => {\n      chatEls.forEach((chatEl) => {\n        chatEl.classList.add('animate-collapse');\n        chatEl.style.transform = '';\n      });\n    });\n\n    setTimeout(() => {\n      // Wait one more frame for better animation performance\n      fastRaf(() => {\n        chatEls.forEach((chatEl) => {\n          chatEl.classList.remove('animate-collapse');\n        });\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [containerRef, isForumPanelOpen]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport type { AnimationLevel } from '../../../types';\n\nimport {\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage, selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus, selectThreadInfo, selectThreadParam, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport Badge from './Badge';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  animationLevel?: AnimationLevel;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  animationLevel,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleDelete = useCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  }, [chat.id, deleteTopic, topic.id]);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  }, [openChat, chatId, topic.id, canScrollDown, focusLastMessage]);\n\n  const contextActions = useTopicContextActions(topic, chat, wasTopicOpened, canDelete, handleOpenDeleteModal);\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      contextActions={contextActions}\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      animationLevel: global.settings.byKey.animationLevel,\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getHasAdminRight } from '../../../../global/helpers';\n\nimport useLang from '../../../../hooks/useLang';\nimport { useMemo } from '../../../../lib/teact/teact';\n\nexport default function useTopicContextActions(\n  topic: ApiTopic,\n  chat: ApiChat,\n  wasOpened?: boolean,\n  canDelete?: boolean,\n  handleDelete?: NoneToVoidFunction,\n) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, isOwner, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n    } = getActions();\n\n    const canToggleClosed = isOwner || chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: true }),\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]);\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n  const lang = useLang();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID,\n  TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport { selectChat, selectCurrentMessageList, selectIsForumPanelOpen } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useCallback(() => {\n    closeForumPanel();\n  }, [closeForumPanel]);\n\n  const handleToggleChatInfo = useCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  }, [chat, openChatWithInfo]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n      waitForTransitionEnd(ref.current!, () => {\n        dispatchHeavyAnimationStop();\n      });\n\n      if (isVisible) {\n        shouldRenderRef.current = true;\n        ref.current!.style.transform = 'none';\n      } else {\n        shouldRenderRef.current = false;\n        ref.current!.style.transform = '';\n      }\n    }\n  }, [isVisible, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = global.forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as T[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    return chat.topics ? getOrderedTopics(Object.values(chat.topics), undefined, true) : [];\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  function handleOpenTopic(e: React.MouseEvent<HTMLDivElement>) {\n    if (lastActiveTopic.unreadCount === 0) return;\n    e.stopPropagation();\n    openChat({ id: chat.id, threadId: lastActiveTopic.id, shouldReplaceHistory: true });\n  }\n\n  useLayoutEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <span className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onMouseDown={handleOpenTopic}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </span>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <span\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onMouseDown={handleOpenTopic}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </span>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { AnimationLevel } from '../../../../types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\nimport { fastRaf } from '../../../../util/schedulers';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  animationLevel,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  animationLevel?: AnimationLevel;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities(draft.text, draft.entities, undefined, undefined, undefined, undefined, true)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={buildClassName('media-preview--image', isRoundVideo && 'round')} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useChatOrderDiff(orderedIds: (string | number)[] | undefined) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [orderById, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useRef,\n  useCallback,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ANIMATION_LEVEL_MIN } from '../../config';\nimport {\n  ARE_CALLS_SUPPORTED, IS_PWA, IS_SINGLE_COLUMN_LAYOUT,\n} from '../../util/environment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatBot,\n  selectIsUserBlocked,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  }, []);\n\n  const handleHeaderMenuClose = useCallback(() => {\n    setIsMenuOpen(false);\n  }, []);\n\n  const handleHeaderMenuHide = useCallback(() => {\n    setMenuPosition(undefined);\n  }, []);\n\n  const handleSubscribeClick = useCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  }, [joinChannel, chatId, shouldSendJoinRequest, showNotification, isChannel, lang]);\n\n  const handleStartBot = useCallback(() => {\n    sendBotCommand({ command: '/start' });\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleJoinRequestsClick = useCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  }, [requestNextManagementScreen]);\n\n  const handleSearchClick = useCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (IS_SINGLE_COLUMN_LAYOUT) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because teact must update the state and render the async component\n      requestAnimationFrame(() => {\n        requestAnimationFrame(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  }, [noAnimation, onTopicSearch, openLocalTextSearch, withForumActions]);\n\n  const handleAsMessagesClick = useCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  }, [chatId, openChat]);\n\n  function handleRequestCall() {\n    requestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_PWA || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  }, [canSearch, handleSearchClick]);\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!IS_SINGLE_COLUMN_LAYOUT && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel=\"Search in this chat\"\n            >\n              <i className=\"icon-search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon-phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon-more\" />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={IS_SINGLE_COLUMN_LAYOUT || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId, messageListType }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectChatBot(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chat.fullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chat.fullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = global.settings.byKey.animationLevel === ANIMATION_LEVEL_MIN;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, false);\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} />\n        {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    this.container.appendChild(this.video);\n    this.recalculatePositionAndSize();\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    if (!this.video) return;\n    const { size, position: { x, y } } = this.options;\n    const { width, height } = this.container.getBoundingClientRect();\n    this.video.style.left = `${Math.round(x * width)}px`;\n    this.video.style.top = `${Math.round(y * height)}px`;\n    this.video.style.width = `${size}px`;\n    this.video.style.height = `${size}px`;\n  }\n}\n","import {\n  useCallback, useEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport RLottie from '../../../../lib/rlottie/RLottie';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n  removeCustomEmojiInputRenderCallback,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { fastRaf } from '../../../../util/schedulers';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport { useResizeObserver } from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\n\nconst SIZE = 1.25 * REM;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  html: string,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n) {\n  const mapRef = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const removeContainers = useCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = mapRef.current.get(id);\n      if (player) {\n        player.destroy();\n        mapRef.current.delete(id);\n      }\n    });\n  }, []);\n\n  const synchronizeElements = useCallback(() => {\n    if (!inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n    const global = getGlobal();\n    const removedContainers = new Set(mapRef.current.keys());\n    const customEmojies = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojies.forEach((element) => {\n      const id = element.dataset.uniqueId!;\n      const documentId = element.dataset.documentId!;\n      if (!id) {\n        return;\n      }\n      removedContainers.delete(id);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (mapRef.current.has(id)) {\n        const player = mapRef.current.get(id)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n\n      const animation = createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        uniqueId: id,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n      });\n      animation.play();\n\n      mapRef.current.set(id, animation);\n    });\n\n    removeContainers(Array.from(removedContainers));\n  }, [absoluteContainerRef, inputRef, removeContainers, sharedCanvasHqRef, sharedCanvasRef]);\n\n  useEffect(() => {\n    addCustomEmojiInputRenderCallback(synchronizeElements);\n\n    return () => {\n      removeCustomEmojiInputRenderCallback(synchronizeElements);\n    };\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!html || !inputRef.current || !sharedCanvasRef.current) {\n      removeContainers(Array.from(mapRef.current.keys()));\n      return;\n    }\n\n    synchronizeElements();\n  }, [html, inputRef, removeContainers, sharedCanvasRef, synchronizeElements]);\n\n  useResizeObserver(sharedCanvasRef, synchronizeElements, true);\n\n  const freezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.pause();\n    });\n  }, []);\n\n  const unfreezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.play();\n    });\n  }, []);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nfunction createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  uniqueId,\n  mediaUrl,\n  position,\n  isHq,\n} : {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  uniqueId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n}): CustomEmojiPlayer {\n  if (customEmoji.isLottie) {\n    const lottie = RLottie.init(\n      uniqueId,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      undefined,\n      customEmoji.id,\n      mediaUrl,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n    );\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeContainer(uniqueId),\n      updatePosition: (x: number, y: number) => lottie.setSharedCanvasCoords(uniqueId, { x, y }),\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainerRef.current!, { size: SIZE, position });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\n\ntype OwnProps = {\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_INPUT_HEIGHT = IS_SINGLE_COLUMN_LAYOUT ? 256 : 416;\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 240;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n\n  useInputCustomEmojis(html, inputRef, sharedCanvasRef, sharedCanvasHqRef, absoluteContainerRef);\n\n  const updateInputHeight = useCallback((willSend = false) => {\n    const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n    const clone = scrollerCloneRef.current!;\n    const currentHeight = Number(scroller.style.height.replace('px', ''));\n    const maxHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : MAX_INPUT_HEIGHT;\n    const newHeight = Math.min(clone.scrollHeight, maxHeight);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      scroller.style.height = `${newHeight}px`;\n      scroller.style.transitionDuration = `${transitionDuration}ms`;\n      scroller.classList.toggle('overflown', clone.scrollHeight > maxHeight);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }, [isAttachmentModalInput]);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      e.target.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    if (!isComposing && !html.length && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || (IS_TOUCH_ENV && IS_SINGLE_COLUMN_LAYOUT)\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={buildClassName('custom-scroll', SCROLLER_CLASS)}>\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","export default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return files.map(fixMovMime);\n}\n\n// .mov MIME type not reported sometimes https://developer.mozilla.org/en-US/docs/Web/API/File/type#sect1\nfunction fixMovMime(file: File) {\n  const ext = file.name.split('.').pop()!;\n  if (!file.type && ext.toLowerCase() === 'mov') {\n    return new File([file], file.name, { type: 'video/quicktime' });\n  }\n  return file;\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/environment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useOnSelectionChange from '../../../../hooks/useOnSelectionChange';\nimport useCacheBuster from '../../../../hooks/useCacheBuster';\n\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isAllowed: boolean,\n  inputSelector: string,\n  html: string,\n  onUpdateHtml: (html: string) => void,\n  stickers?: ApiSticker[],\n  isDisabled = false,\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [htmlBeforeSelection, setHtmlBeforeSelection] = useState('');\n\n  const [cacheBuster, updateCacheBuster] = useCacheBuster();\n\n  const handleSelectionChange = useCallback((range: Range) => {\n    if (range.collapsed) {\n      updateCacheBuster(); // Update tooltip on cursor move\n    }\n  }, [updateCacheBuster]);\n\n  useOnSelectionChange(document.querySelector<HTMLDivElement>(inputSelector), handleSelectionChange);\n\n  useEffect(() => {\n    if (!html) {\n      setHtmlBeforeSelection('');\n      return;\n    }\n    setHtmlBeforeSelection(getHtmlBeforeSelection(document.querySelector<HTMLDivElement>(inputSelector)!));\n  }, [html, inputSelector, cacheBuster]);\n\n  const lastEmojiText = htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : ENDS_ON_EMOJI_IMG_REGEX)?.[0];\n  const hasStickers = Boolean(stickers?.length && lastEmojiText);\n\n  useEffect(() => {\n    if (isDisabled) return;\n\n    if (isAllowed && lastEmojiText) {\n      loadCustomEmojiForEmoji({\n        emoji: IS_EMOJI_SUPPORTED ? lastEmojiText : lastEmojiText.match(/.+alt=\"(.+)\"/)?.[1]!,\n      });\n    } else if (hasStickers || !lastEmojiText) {\n      clearCustomEmojiForEmoji();\n    }\n    // We omit `hasStickers` here to prevent re-fetching after manually closing tooltip (via <Esc>).\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lastEmojiText, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji, isAllowed, isDisabled]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker) => {\n    if (!lastEmojiText) return;\n    const containerEl = document.querySelector<HTMLDivElement>(inputSelector)!;\n    const regexText = IS_EMOJI_SUPPORTED ? lastEmojiText\n      // Escape regexp special chars\n      : lastEmojiText.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmojiText.length;\n\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = containerEl.innerHTML.substring(htmlBeforeSelection.length);\n    onUpdateHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestAnimationFrame(() => {\n      focusEditableElement(containerEl, true, true);\n    });\n  }, [htmlBeforeSelection, inputSelector, lastEmojiText, onUpdateHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: hasStickers,\n    closeCustomEmojiTooltip: clearCustomEmojiForEmoji,\n    insertCustomEmoji,\n  };\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDebouncedCallback from '../../../../hooks/useDebouncedCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst DEBOUNCE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):[-+_:\\p{L}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):[-+_:\\d\\wа-яё]*$/gi;\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  htmlRef: { current: string },\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n  const [filteredEmojis, setFilteredEmojisInner] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  const setFilteredEmojis = useDebouncedCallback((emojis: Emoji[]) => {\n    setFilteredEmojisInner(emojis);\n  }, [], DEBOUNCE);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  const html = htmlRef.current;\n  useEffect(() => {\n    if (isDisabled) return;\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), filteredEmojis.map((emoji) => emoji.native)),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  }, [filteredEmojis, isDisabled]);\n\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || isDisabled) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter, EMOJIS_LIMIT);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched);\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, html, isAllowed, markIsOpen, recentEmojiIds, unmarkIsOpen, setShouldForceInsertEmoji,\n    isDisabled, baseEmojiKeywords, emojiKeywords, setFilteredEmojis,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const currentHtml = htmlRef.current;\n    const atIndex = currentHtml.lastIndexOf(':', isForce ? currentHtml.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${currentHtml.substr(0, atIndex)}${renderText(textEmoji, ['emoji_html'])}`);\n      let messageInput: HTMLDivElement;\n      if (inputId === EDITABLE_INPUT_ID) {\n        messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!;\n      } else {\n        messageInput = document.getElementById(inputId) as HTMLDivElement;\n      }\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlRef, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker, isForce?: boolean) => {\n    const currentHtml = htmlRef.current;\n    const atIndex = currentHtml.lastIndexOf(':', isForce ? currentHtml.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${currentHtml.substr(0, atIndex)}${buildCustomEmojiHtml(emoji)}`);\n      let messageInput: HTMLDivElement;\n      if (inputId === EDITABLE_INPUT_ID) {\n        messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!;\n      } else {\n        messageInput = document.getElementById(inputId) as HTMLDivElement;\n      }\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlRef, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    insertCustomEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names,\n  } = library;\n\n  let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  return matched.slice(0, limit);\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useCacheBuster from '../../../../hooks/useCacheBuster';\nimport useOnSelectionChange from '../../../../hooks/useOnSelectionChange';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яё]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  inputSelector: string,\n  onUpdateHtml: (html: string) => void,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [htmlBeforeSelection, setHtmlBeforeSelection] = useState('');\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const updateFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n\n    runThrottled(() => {\n      const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n        if (member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n\n        return acc;\n      }, []);\n\n      const filteredIds = filterUsersByName(unique([\n        ...((withInlineBots && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]), usersById, filter);\n\n      setUsersToMention(Object.values(pickTruthy(usersById, filteredIds)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds]);\n\n  const [cacheBuster, updateCacheBuster] = useCacheBuster();\n\n  const handleSelectionChange = useCallback((range: Range) => {\n    if (range.collapsed) {\n      updateCacheBuster(); // Update tooltip on cursor move\n    }\n  }, [updateCacheBuster]);\n\n  useOnSelectionChange(document.querySelector<HTMLDivElement>(inputSelector), handleSelectionChange);\n\n  useEffect(() => {\n    setHtmlBeforeSelection(getHtmlBeforeSelection(document.querySelector<HTMLDivElement>(inputSelector)!));\n  }, [inputSelector, cacheBuster]);\n\n  useEffect(() => {\n    if (!canSuggestMembers || !htmlBeforeSelection.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = htmlBeforeSelection.includes('@') && getUsernameFilter(htmlBeforeSelection);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      updateFilteredUsers(filter, canSuggestInlineBots(htmlBeforeSelection));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, updateFilteredUsers, markIsOpen, unmarkIsOpen, htmlBeforeSelection]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const insertedHtml = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const containerEl = document.querySelector<HTMLDivElement>(inputSelector)!;\n\n    const atIndex = htmlBeforeSelection.lastIndexOf('@');\n    if (atIndex !== -1) {\n      const newHtml = `${htmlBeforeSelection.substr(0, atIndex)}${insertedHtml}&nbsp;`;\n      const htmlAfterSelection = containerEl.innerHTML.substring(htmlBeforeSelection.length);\n      onUpdateHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestAnimationFrame(() => {\n        focusEditableElement(containerEl, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlBeforeSelection, inputSelector, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart[];\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  isButtonsInOneRow?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  isButtonsInOneRow,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div className={isButtonsInOneRow ? 'dialog-buttons mt-2' : ''} ref={containerRef} onKeyDown={handleKeyDown}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  offsetCollapseDelta?: number;\n  withPortalForMenu?: boolean;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>, arg?: any) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  offsetCollapseDelta,\n  onMouseDown,\n  onClick,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: withPortalForMenu }),\n    [withPortalForMenu],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [allowDisabledClick, clickArg, disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleSecondaryIconClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n    e.stopPropagation();\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  };\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      data-offset-collapse-delta={offsetCollapseDelta}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        ref={buttonRef}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n            onMouseDown={!IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n          >\n            <i className={`icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: VoidFunction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  function handleClick() {\n    action?.();\n    closeAndDismiss();\n  }\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={action}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  children: React.ReactNode;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden, undefined, isFirstRender, isCustom ? false : undefined, noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        tabEl.classList.add(classNames.active);\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    prevPlatformEl.classList.remove('animate');\n    platformEl.classList.remove('animate');\n    platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n    forceReflow(platformEl);\n    platformEl.classList.add('animate');\n    platformEl.style.transform = 'none';\n\n    prevTabEl.classList.remove(classNames.active);\n    tabEl.classList.add(classNames.active);\n  }, [isActive, previousActiveTab]);\n\n  return (\n    <div\n      className={buildClassName('Tab', className)}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/environment';\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    fastSmoothScrollHorizontal(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useOnChange from './useOnChange';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          setVolume(getGlobal().audioPlayer.volume);\n          toggleMuted(Boolean(getGlobal().audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(getGlobal().audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useCallback, useState } from '../lib/teact/teact';\n\nconst useCacheBuster = () => {\n  const [cacheBuster, setCacheBuster] = useState<boolean>(false);\n\n  const updateCacheBuster = useCallback(() => {\n    setCacheBuster((current) => !current);\n  }, []);\n\n  return [cacheBuster, updateCacheBuster] as const;\n};\n\nexport default useCacheBuster;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\nimport fastBlur from '../lib/fastBlur';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = preferredWidth || img.width;\n      canvas.height = preferredHeight || img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${radius}px)`;\n      }\n\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, radius, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getActions();\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    if (isInSearch) {\n      return compact([actionPin, actionAddToFolder]);\n    }\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionAddToFolder,\n      actionUnreadMark,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]);\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      (e.target as HTMLElement).classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    (e.target as HTMLElement).classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        stopEvent(e);\n      }, true);\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', function cancelClickOnce(e) {\n          element.removeEventListener('mousedown', cancelClickOnce, true);\n          stopEvent(e);\n        }, true);\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n  withPortal?: boolean;\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useContextMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n      withPortal = false,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const menuRect = menuEl ? {\n      width: menuEl.offsetWidth,\n      height: menuEl.offsetHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width - rootRect.left > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n\n    const addedYForPortalPositioning = (withPortal ? triggerRect.top : 0);\n    const addedXForPortalPositioning = (withPortal ? triggerRect.left : 0);\n\n    const left = (horizontalPosition === 'left'\n      ? Math.max(MENU_POSITION_VISUAL_COMFORT_SPACE_PX, Math.min(\n        x - triggerRect.left,\n        rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX,\n      ))\n      : (x - triggerRect.left)) + addedXForPortalPositioning;\n    const top = y - triggerRect.top + addedYForPortalPositioning;\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX + addedXForPortalPositioning - triggerRect.left) - left;\n    const offsetY = (anchorY + addedYForPortalPositioning - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    handleForumPanelAnimationEnd,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (container: HTMLElement | null, isDisabled?: boolean, shouldPreventDefault = false) => {\n  useEffect(() => {\n    if (!container || isDisabled) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../util/environment';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  useEffect(() => {\n    if (isOpen) {\n      if (!IS_SINGLE_COLUMN_LAYOUT) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isOpen, onClose]);\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nconst useLayoutEffectWithPrevDeps = <T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useEffect } from '../lib/teact/teact';\n\nexport default function useOnSelectionChange(container: HTMLElement | null, callback: (range: Range) => void) {\n  useEffect(() => {\n    if (!container) return undefined;\n\n    const onSelectionChange = () => {\n      const selection = window.getSelection();\n      if (!selection) return;\n\n      for (let i = 0; i < selection.rangeCount; i++) {\n        const range = selection.getRangeAt(i);\n        const ancestor = range.commonAncestorContainer;\n        if (container.contains(ancestor)) {\n          callback(range);\n        }\n      }\n    };\n\n    document.addEventListener('selectionchange', onSelectionChange);\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [callback, container]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n  }, [forceUpdate]);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n  }, [], ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\nimport { getGlobal } from '../lib/teact/teactn';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    const { serverTimeOffset } = getGlobal();\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : serverTimeOffset);\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport useOnChange from './useOnChange';\n\n// Allows to use state value as \"silent\" dependency in hooks (not causing updates).\n// Useful for state values that update frequently (such as controlled input value).\nexport function useStateRef<T>(value: T) {\n  const ref = useRef<T>(value);\n\n  useOnChange(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref;\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import generateIdFor from './generateIdFor';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype CallMethodData = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype OriginMessageData = CallMethodData | {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type WorkerMessageData = {\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\n// TODO Replace `any` with proper generics\nexport default class WorkerConnector {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(private worker: Worker) {\n    this.subscribe();\n  }\n\n  request(messageData: { name: string; args: any }) {\n    const { worker, requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateIdFor(requestStates);\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    worker.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.worker.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  private subscribe() {\n    const { worker, requestStates } = this;\n\n    worker.addEventListener('message', ({ data }: WorkerMessageEvent) => {\n      if (data.type === 'methodResponse') {\n        const requestState = requestStates.get(data.messageId);\n        if (requestState) {\n          if (data.error) {\n            requestState.reject(data.error);\n          } else {\n            requestState.resolve(data.response);\n          }\n        }\n      } else if (data.type === 'methodCallback') {\n        const requestState = requestStates.get(data.messageId);\n        requestState?.callback?.(...data.callbackArgs);\n      } else if (data.type === 'unhandledError') {\n        throw new Error(data.error?.message);\n      }\n    });\n  }\n}\n","import {\n  DPR,\n  IS_SINGLE_COLUMN_LAYOUT,\n  IS_SAFARI,\n  IS_ANDROID,\n} from '../../util/environment';\nimport WorkerConnector from '../../util/WorkerConnector';\nimport { animate } from '../../util/animation';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { fastRaf } from '../../util/schedulers';\n\ninterface Params {\n  noLoop?: boolean;\n  size?: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst MAX_WORKERS = 4;\nconst HIGH_PRIORITY_QUALITY = IS_SINGLE_COLUMN_LAYOUT ? 0.75 : 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\n\nconst instancesById = new Map<string, RLottie>();\n\nconst workers = new Array(MAX_WORKERS).fill(undefined).map(\n  () => new WorkerConnector(new Worker(new URL('./rlottie.worker.ts', import.meta.url))),\n);\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private containers = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [container, canvas, onLoad, id, , params] = args;\n    let instance = instancesById.get(id);\n\n    if (!instance) {\n      // eslint-disable-next-line prefer-rest-params\n      instance = new RLottie(...args);\n      instancesById.set(id, instance);\n    } else {\n      instance.addContainer(container, canvas, onLoad, params?.coords);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad: NoneToVoidFunction | undefined,\n    private id: string,\n    private tgsUrl: string,\n    private params: Params = {},\n    private customColor?: [number, number, number],\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addContainer(containerId, container, onLoad, params.coords);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeContainer(containerId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.containers.get(containerId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.containers.delete(containerId);\n\n    if (!this.containers.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.containers.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number]) {\n    this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  setSharedCanvasCoords(containerId: string, newCoords: Params['coords']) {\n    const containerInfo = this.containers.get(containerId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    if (!canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false') {\n      const sizeFactor = this.calcSizeFactor();\n      ensureCanvasSize(canvas, sizeFactor);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.dataset.isJustCleaned = 'true';\n      fastRaf(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvas.width),\n      y: Math.round((newCoords?.y || 0) * canvas.height),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords.x, containerInfo.coords.y);\n    }\n  }\n\n  private addContainer(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n  ) {\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      let { size } = this.params;\n\n      if (!size) {\n        size = (\n          container.offsetWidth\n          || parseInt(container.style.width, 10)\n          || container.parentNode.offsetWidth\n        );\n\n        if (!size) {\n          throw new Error('[RLottie] Failed to detect width from container');\n        }\n      }\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d')!;\n\n      canvas.style.width = `${size}px`;\n      canvas.style.height = `${size}px`;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      canvas.width = imgSize;\n      canvas.height = imgSize;\n\n      container.appendChild(canvas);\n\n      this.containers.set(containerId, {\n        canvas, ctx, onLoad,\n      });\n    } else {\n      if (!container.offsetParent) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      ensureCanvasSize(canvas, sizeFactor);\n\n      imgSize = Math.round(this.params.size! * sizeFactor);\n\n      this.containers.set(containerId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round((coords?.x || 0) * canvas.width),\n          y: Math.round((coords?.y || 0) * canvas.height),\n        },\n        onLoad,\n      });\n    }\n\n    if (!this.imgSize) {\n      this.imgSize = imgSize;\n      this.imageData = new ImageData(imgSize, imgSize);\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      isLowPriority,\n      size,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY\n        : HIGH_PRIORITY_QUALITY,\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(DPR * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesById.delete(this.id);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    workers[this.workerIndex].request({\n      name: 'init',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    workers[this.workerIndex].request({\n      name: 'destroy',\n      args: [this.id],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    workers[this.workerIndex].request({\n      name: 'changeData',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.params.isLowPriority,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.containers.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.containers.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = Math.min(1, (this.direction * this.speed) / currentSpeed);\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    workers[this.workerIndex].request({\n      name: 'renderFrames',\n      args: [this.id, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    canvas.width = expectedWidth;\n    canvas.height = expectedHeight;\n  }\n}\n\nexport default RLottie;\n","import { getActions, getGlobal } from '../global';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = getGlobal().audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, getGlobal().audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, getGlobal().audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (getGlobal().globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  let initialTouchCenter = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    initialTouchCenter = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1) {\n        onWheelDrag(e);\n      } else if (isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './environment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\nimport { fastRaf } from './schedulers';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  fastRaf(() => {\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n\n      container.scrollTop = Math.round(target - currentPath);\n\n      isAnimating = t < 1;\n\n      if (!isAnimating) {\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    });\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  return scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return Promise.resolve();\n  }\n\n  let isStopped = false;\n  const id = Math.random().toString();\n  container.dataset.scrollId = id;\n  stopById.set(id, () => {\n    isStopped = true;\n  });\n\n  container.style.scrollSnapType = 'none';\n\n  let resolve: VoidFunction;\n  const promise = new Promise<void>((r) => {\n    resolve = r;\n  });\n  const startAt = Date.now();\n\n  animate(() => {\n    if (isStopped) return false;\n\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    if (t >= 1) {\n      container.style.scrollSnapType = '';\n      container.dataset.scrollId = undefined;\n      stopById.delete(id);\n      resolve();\n    }\n    return t < 1;\n  });\n\n  return promise;\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import blue from '../assets/icons/forumTopic/blue.svg';\nimport green from '../assets/icons/forumTopic/green.svg';\nimport grey from '../assets/icons/forumTopic/grey.svg';\nimport red from '../assets/icons/forumTopic/red.svg';\nimport rose from '../assets/icons/forumTopic/rose.svg';\nimport violet from '../assets/icons/forumTopic/violet.svg';\nimport yellow from '../assets/icons/forumTopic/yellow.svg';\n\n// eslint-disable-next-line max-len\n// https://github.com/telegramdesktop/tdesktop/blob/1aece79a471d99a8b63d826b1bce1f36a04d7293/Telegram/SourceFiles/data/data_forum_topic.cpp#L50\nconst TOPIC_MAPPING: Record<number, [string, string]> = {\n  0x6FB9F0: [blue, 'blue'],\n  0xFFD67E: [yellow, 'yellow'],\n  0xCB86DB: [violet, 'violet'],\n  0x8EEE98: [green, 'green'],\n  0xFF93B2: [rose, 'rose'],\n  0xFB6F5F: [red, 'red'],\n};\n\nexport function getTopicColors() {\n  return Object.keys(TOPIC_MAPPING).map((key) => parseInt(key, 10));\n}\n\nexport function getTopicDefaultIcon(iconColor?: number) {\n  return (iconColor && TOPIC_MAPPING[iconColor as keyof typeof TOPIC_MAPPING][0]) || grey;\n}\n\nexport function getTopicColorCssVariable(iconColor?: number) {\n  const color = (iconColor && TOPIC_MAPPING[iconColor as keyof typeof TOPIC_MAPPING][1]) || 'grey';\n  return `--color-topic-${color}`;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)(\\s|$)/g,\n    '$1<img alt=\"$2\" data-document-id=\"$3\">$4',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<b>$3</b>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<i>$3</i>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<s>$3</s>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    `$1<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$3</span>$5`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const fragmentEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n  replaceChildren(fragmentEl, range.cloneContents());\n\n  return fragmentEl.innerHTML;\n}\n\nfunction replaceChildren(el: HTMLElement, nodes?: DocumentFragment) {\n  if (el.replaceChildren === undefined) {\n    while (el.lastChild) {\n      el.removeChild(el.lastChild);\n    }\n    if (nodes !== undefined) {\n      el.append(nodes);\n    }\n  } else {\n    el.replaceChildren(nodes || '');\n  }\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","usersById","users","byId","chatsById","chats","activeGroupCallId","groupCalls","isActive","participantsCount","isLoaded","isCallNotEmpty","isCallActive","id","animationLevel","settings","byKey","className","hasPinnedOffset","joinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","Object","values","filter","_","i","map","isUser","user","Boolean","useEffect","subscribed","buildClassName","onClick","p","key","round","text","prevText","usePrevious","forceUpdate","useForceUpdate","isAnimatingRef","useRef","shouldAnimate","getGlobal","ANIMATION_LEVEL_MAX","textElement","elements","length","push","current","useTimeout","undefined","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","useFlag","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","add","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","noTransition","renderWaveform","canvas","spikes","progress","peak","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","Math","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","decodeWaveform","encoded5bit","bitsCount","valuesCount","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","newData","springFactor","leftFiller","rightFiller","idx","val","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","getSeeklineSpikeAmounts","withAvatar","MIN_SPIKES","IS_SINGLE_COLUMN_LAYOUT","matches","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","canvasRef","waveform","min","durationFactor","spikesCount","Uint8Array","useLayoutEffect","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","captureEvents","onCapture","onRelease","onDrag","transcribeSvgMemo","dangerouslySetInnerHTML","__html","renderFirstLine","title","fileName","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getTranslation","getFileSizeString","formatMediaDateTime","renderAudio","svgMemo","onClickTranscribe","draggable","renderVoice","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","fullInfo","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","description","bio","getChatDescription","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","href","TME_LINK_PREFIX","stopEvent","publicLink","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","header","isSavedMessages","withVideo","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","fakeType","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","alt","VERIFIED_ICON","peer","noVerified","noFake","withEmojiStatus","emojiStatusSize","noLoopLimit","onEmojiStatusClick","getUserFullName","emojiStatus","isPremium","isVerified","FakeIcon","CustomEmoji","documentId","loopLimit","EMOJI_STATUS_LOOP_LIMIT","observeIntersectionForLoading","PremiumIcon","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","withVideoAvatar","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","messagesCount","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","getMessageHtmlId","decoding","onContextMenu","isGif","Keys","activeKey","DEFAULT_TEXT","FOCUS_DELAY_TIMEOUT_MS","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","canSubmit","setCanSubmit","IS_TOUCH_ENV","focus","requestAnimationFrame","select","action","event","preventDefault","autoComplete","type","tabIndex","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","shouldMinimize","setTimeout","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","currentTarget","viewportIds","getMore","useInfiniteScroll","isMinimized","canClose","clickArg","items","iconElement","titleText","PREMIUM_ICON","store","withGradient","big","html","generateIdFor","getPremiumIconGradient","serverTimeOffset","userStatus","selectUserStatus","noStatusOrTyping","adminMember","customTitle","isOwner","isUserOnline","getUserStatus","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","currentPhoto","profilePhoto","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","mediaViewer","currentTopicId","openPremiumModal","photos","MEMO_EMPTY_ARRAY","prevMediaId","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","TopicIcon","letterClassName","GENERAL_TOPIC_ID","renderPhotoTabs","Transition","renderPhoto","FullNameTitle","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","observeIntersectionForPlaying","blankUrl","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","options","selected","noAnimate","noContextMenu","canViewSet","isCurrentUserPremium","sharedCanvasRef","onFaveClick","onUnfaveClick","onRemoveRecentClick","openStickerSet","isCustomEmoji","hasEffect","stickerSetInfo","isLocked","shouldPlay","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useContextMenuPosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","shouldShowCloseButton","contextMenuItems","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","containerRef","isSmall","shouldLoop","shouldPreloadPreview","noPlay","withSharedAnimation","autoClose","iconColor","iconSrc","getTopicDefaultIcon","iconEmojiId","typingUser","typingUserName","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","isUnread","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","isForumPanelActive","selectIsForumPanelOpen","Badge","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","MAIN_THREAD_ID","isSelectedForum","forumPanelChatId","statusEmoji","customEmojis","isEmojiStatusColored","selectIsDefaultEmojiStatusPack","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","folderId","orderDiff","animationType","offsetTop","offsetCollapseDelta","onDragEnter","openChat","openForumPanel","focusLastMessage","loadTopics","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","shouldReplaceHistory","forceOnHeavyAnimation","handleDragEnter","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","ListItem","withPortalForMenu","Avatar","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","isForumPanelOpen","openNextChat","shouldIgnoreDragRef","resolvedFolderId","ALL_FOLDER_ID","ARCHIVED_FOLDER_ID","useFolderManagerForOrderedIds","orderDiffById","getAnimationType","useChatOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_PWA","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","position","Number","observe","useIntersectionObserver","rootRef","throttleMs","chatEls","from","querySelectorAll","chatEl","dataset","transform","fastRaf","classList","remove","ANIMATION_END_DELAY","useCollapseWithForumPanel","useDebouncedCallback","handleDragLeave","rect","clientY","top","viewportOffsetPx","viewportOffset","reduce","CHAT_HEIGHT_FORUM_PX","CHAT_HEIGHT_PX","InfiniteScroll","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","pinnedCount","getPinnedChatsCount","currentChatListHeight","expendedOffsetTop","collapsedOffsetTop","teactOrderKey","getOrderKey","renderChats","Loading","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","canTogglePinned","actionUnreadMark","handler","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","compact","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","isHidden","onTopicSearch","closeForumPanel","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","isVisible","prevIsVisible","useHistoryBack","onBack","captureEscKeyListener","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","withForumActions","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","TypingStatus","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","renderSummary","opacity","orderById","prevOrderById","mapValues","order","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","selectIsInSelectMode","noMenu","bot","selectChatBot","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","ANIMATION_LEVEL_MIN","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestCall","requestNextManagementScreen","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","CustomEmojiTooltip","CustomSend","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","handleQuickFilesDrop","fromTarget","Portal","containerId","onDragOver","clearTimeout","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","this","createElement","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","SCROLLER_CLASS","MAX_INPUT_HEIGHT","IGNORE_KEYS","messageSendKeyCombo","replyingToId","selectReplyingToId","isSelectModeActive","captionLimit","isAttachmentModalInput","editableInputId","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","mapRef","Map","removeContainers","ids","player","get","delete","synchronizeElements","removedContainers","keys","uniqueId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","animation","isLottie","lottie","RLottie","coords","isLowPriority","removeContainer","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","set","addCustomEmojiInputRenderCallback","removeCustomEmojiInputRenderCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","updateInputHeight","willSend","scroller","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","exec","toggle","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","IS_ANDROID","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","inputRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","b","m","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","onScroll","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","File","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","fixMovMime","ext","pop","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","ENDS_ON_EMOJI_IMG_REGEX","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isAllowed","inputSelector","onUpdateHtml","stickers","isDisabled","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","htmlBeforeSelection","setHtmlBeforeSelection","cacheBuster","updateCacheBuster","useCacheBuster","handleSelectionChange","range","collapsed","useOnSelectionChange","getHtmlBeforeSelection","lastEmojiText","hasStickers","insertCustomEmoji","containerEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","cache","WeakMap","memoized","fn","cached","args","areSortedArraysEqual","lastArgs","lastResult","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","prepareRecentEmojisMemo","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","searchInLibraryMemo","library","matched","matchedKeywords","keyword","sort","flat","matchedNames","unique","useEmojiTooltip","htmlRef","markIsOpen","unmarkIsOpen","setById","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojisInner","filteredCustomEmojis","setFilteredCustomEmojis","setFilteredEmojis","ensureEmojiData","then","uniqueByField","selectCustomEmojiForEmojis","native","getEmojiCode","forceSend","endsWith","substr","insertEmoji","textEmoji","isForce","currentHtml","atIndex","lastIndexOf","messageInput","EDITABLE_INPUT_CSS_SELECTOR","getElementById","isEmojiTooltipOpen","closeEmojiTooltip","default","uncompressEmoji","runThrottled","throttle","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","updateFilteredUsers","withInlineBots","memberIds","member","filteredIds","filterUsersByName","usernameFilter","getUsernameFilter","insertMention","forceFocus","insertedHtml","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","timeoutRef","useOnChange","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","textParts","isButtonsInOneRow","children","handleSelectWithEnter","index","useKeyboardListNavigation","textPart","buttonClassName","buttonRef","leftElement","secondaryIcon","rightElement","allowDisabledClick","onSecondaryIconClick","isTouched","markIsTouched","unmarkIsTouched","getLayout","withPortal","handleSecondaryIconClick","handleMouseDown","DEFAULT_DURATION","onDismiss","actionText","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","setAttribute","hidden","loadingOption","step","renderValue","mainClassName","trackWidth","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","noCloseTransition","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","variant","forceAspectRatio","inline","classNames","onCheck","isBlocked","badgeCount","isBadgeActive","previousActiveTab","tabRef","tabEl","prevTabEl","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","tabs","areFolders","activeTab","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","fastSmoothScrollHorizontal","tab","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","useReducer","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","useEffectWithPrevDeps","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","setCacheBuster","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","timer","clearLongPressTimer","startLongPressTimer","originalEvent","touches","cancelClickOnce","emulateContextMenuEvent","passive","EMPTY_RECT","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","marginTop","parseInt","getComputedStyle","menuRect","offsetHeight","rootRect","horizontalPosition","verticalPosition","triggerRect","addedYForPortalPositioning","addedXForPortalPositioning","menuMaxHeight","offsetX","offsetY","replyOriginForId","loadMessage","loadMessageThrottled","throttled","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","handleForumPanelAnimationEnd","shouldRenderForumPanel","shouldPreventDefault","handleScroll","deltaX","deltaY","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","shift","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","documentElement","runCallbacks","isConnected","debugKey","prevDeps","idRef","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","Date","now","spentTime","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","callback","onSelectionChange","ancestor","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","ms","noFirst","noLast","CalendarModal","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","useStateRef","savedCallback","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","mul_sum","shg_sum","vmin","vmax","putImageData","WorkerConnector","worker","subscribe","request","messageData","requestStates","requestStatesByCallback","requestState","promise","reject","assign","withCallback","catch","finally","postMessage","cancelCallback","progressCallback","isCanceled","response","callbackArgs","WAITING","Symbol","HIGH_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","IS_SAFARI","instancesById","workers","Worker","URL","lastWorkerIndex","static","params","instance","addContainer","customColor","onEnded","onLoop","initConfig","initRenderer","isSharedCanvas","containers","clearRect","imgSize","isAnimating","isWaiting","forceRestart","isPaused","isEnded","approxFrameIndex","stopFrameIndex","doPlay","every","frames","frame","prevFrameIndex","close","playSegment","startFrameIndex","reduceFactor","setSpeed","speed","setNoLoop","newCoords","containerInfo","isJustCleaned","sizeFactor","calcSizeFactor","ensureCanvasSize","getFrame","HTMLDivElement","offsetParent","ImageData","isRendererInited","quality","DPR","isDestroyed","clearCache","destroyRenderer","cacheModulo","setColor","newColor","workerIndex","cycleRestrict","onRendererInit","bind","msPerFrame","framesCount","changeData","onChangeData","lastRenderAt","animate","frameIndex","requestFrame","cleanupPrevFrame","containerData","currentSpeed","delta","expectedNextFrameIndex","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","expectedHeight","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","currentId","queue","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","a","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","t","newSum","oldAverage","newAverage","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","initialTouchCenter","innerWidth","innerHeight","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","withCursor","body","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","rgb2hex","p0","rgb2hsb","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","preloadImage","naturalHeight","naturalWidth","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","fastSmoothScroll","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","calculateScrollFrom","FocusDirection","scrollWithJs","isAnimatingScroll","elementTop","scrollTop","offset","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","currentPath","stopById","containerWidth","scrollId","isStopped","random","scrollSnapType","force","forcePlaceCaretAtEnd","activeElement","createRange","lastChild","nodeValue","selectNodeContents","collapse","TOPIC_MAPPING","blue","violet","green","rose","red","getTopicColors","grey","getTopicColorCssVariable","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","windowSize","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","console","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","ENTITY_CLASS_BY_NODE_NAME","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parseMarkdown","parseMarkdownLinks","fixImageContent","innerText","trimShift","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","getEntityDataFromNode","hasChildNodes","parsedHtml","RE_LINK_TEMPLATE","rawText","nodeName","getEntityTypeFromNode","rawIndex","language","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","nodes","append","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange","click"],"sourceRoot":""}