{"version":3,"file":"6945.ac9c840ac3febffbf41e.js","mappings":"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AA2Bt8B,GACjDu8B,eAAgBlM,KAAyBmM,EAAAA,EAAAA,KAA+Bx8B,GACxEy8B,uBAAuBC,EAAAA,EAAAA,KAA4B18B,GACnD28B,oBAAqBxG,IAAmBD,IAAkBmD,EAC1DhR,uBAAwBroB,EAAO82B,SAASC,MAAM1O,uBAC9C0Q,oBACA6D,YAAa58B,EAAO68B,QAAQD,YAC5B1D,eACD,GA/Hen5B,EAloDwB+8B,EAC1CnY,OACA8U,gBACAsD,gBACA1D,oBACAM,yBACAqD,UACAvyB,WACAwyB,aACAC,UACAC,SACAxU,iBACA1oB,SACA2V,WACAkgB,UACAuC,qBACArK,kBACAa,QACA3uB,OACAg5B,gBACAZ,2BACAjI,wBACAkI,yBACArC,iBACA7G,kBACAwK,aACAmC,iBACAlC,sBACAE,sBACAqC,wBACA1N,gBACA0L,aACAlD,wBACAgD,0BACAiD,oBACAlD,uBACAI,oBACAG,uBACAE,oBACAE,mBACAxD,iBACAC,eACA6E,gBACAnB,wBACArE,yBACAC,4BACAI,qBACAC,iBACAgE,gBACAE,cACAE,sBACAG,eACAD,mBACA3D,cACAC,cACAL,YACAkB,gBACAZ,sBACAE,uBACA2D,iBACAzT,cACA4T,sBACAM,sBACA7zB,SACAkwB,YACA5B,+BACAwG,4BACAC,mBACAC,WACAp8B,aACAm4B,sBACAE,gBACA+C,iBACAE,yBACApU,0BACA0Q,qBACA6D,eACAD,uBACAa,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,gBACV1P,GAAe,cACf2P,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBjnB,GAAgB,oCAChBknB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,GAAiB,YACjBC,KACEn9B,EAAAA,EAAAA,MAEEC,IAAOC,EAAAA,EAAAA,KAGPk9B,IAAW76B,EAAAA,EAAAA,IAAuB,MAGlC86B,IAAmB96B,EAAAA,EAAAA,IAA0B,OAE5CuwB,G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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n    hasSavedMessages?: boolean;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        text: parseHtmlAsFormattedText(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Icon from '../../common/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown, isForwarding],\n    isShown && isForwarding ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n\n  const leftIcon = useMemo(() => {\n    if (isShowingReply) {\n      return 'reply';\n    }\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId && message) {\n      sender = selectSender(global, message);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport Icon from './Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            editingMessage={editingMessage}\n            hasReplaceableMedia={canMediaBeReplaced}\n            isButtonVisible={!activeVoiceRecording}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={isInScheduledList}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    return {\n      availableReactions: type === 'story' ? global.reactions.availableReactions : undefined,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: link });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\",\"-7s\":\"kFel0ZLm\",\"7S\":\"kFel0ZLm\",\"-14s\":\"C63lwaZj\",\"14S\":\"C63lwaZj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat?.id === sender?.id;\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {!isChatSender && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  useEffect(() => {\n    updateCanvas();\n  }, [emojiImage, lang.isRtl, customColor]);\n\n  const updateCanvasSize = useLastCallback((parentWidth: number, parentHeight: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = parentWidth * dpr;\n    canvas.height = parentHeight * dpr;\n\n    canvas.style.width = `${parentWidth}px`;\n    canvas.style.height = `${parentHeight}px`;\n\n    updateCanvas();\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  }, [dpr]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  isSavedDialog?: boolean;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} isSavedDialog={isSavedDialog} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isSavedDialog }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getAverageColor, rgb2hex } from '../../../util/colors';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useTimeout from '../../../hooks/useTimeout';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY, []);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = () => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  };\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nfunction useAverageColor(channel: ApiChat) {\n  const [color, setColor] = useState(DEFAULT_BADGE_COLOR);\n  const imgBlobUrl = useMedia(getChatAvatarHash(channel), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isChatChannel, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat!)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\">{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n      const isFileSticker = newAttachment && isUploadingFileSticker(newAttachment);\n\n      if (canReplace || isFileSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(photo.isSpoiler);\n\n  useEffect(() => {\n    if (photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [photo.isSpoiler]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMessageMediaFormat, getMessageMediaHash, getMessageMediaThumbDataUri, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSignal from '../../../hooks/useSignal';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMessageMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const tooglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    tooglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    tooglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(video.isSpoiler);\n\n  useEffect(() => {\n    if (video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [video.isSpoiler]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            {backgroundEmojiId && (\n              <EmojiIconBackground\n                emojiDocumentId={backgroundEmojiId}\n                className=\"WebPage--background-icons\"\n              />\n            )}\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const availableReactions = useMemo(() => {\n    const reactions = isInSavedMessages ? defaultTagReactions\n      : (enabledReactions?.type === 'some' ? enabledReactions.allowed\n        : allAvailableReactions?.map((reaction) => reaction.reaction));\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    maxUniqueReactions, topReactions,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\nconst SavedTagButton: FC<{\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n}> = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    video.pause();\n    video.src = '';\n    video.load();\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        video.pause();\n        video.src = '';\n        video.load();\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","AnimatedCounter","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","AvatarList","peers","root","avatar","runDebounced","debounce","cb","chatOrUserId","isSavedDialog","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","Number","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","includes","ChatExtra","isInSettings","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","result","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","idx","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_IMAGE_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","quoteText","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","isShowingReply","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","WebPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","url","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForumAsMessages","selectTopicFromMessage","isInScheduledList","availableReactions","reactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","mimeType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","self","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","mediaBlobUrl","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","NothingFound","PasswordForm","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","forceShowSelf","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","Loading","fluid","withPeerColors","iconElement","titleText","LimitPreview","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","adminMember","customTitle","isOwner","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","ProfileInfo","openPremiumModal","openStickerSet","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","stickerSetInfo","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","renderStatus","ReactionStaticEmoji","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","EmbeddedMessage","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","emojiSize","isChatGroup","isChatSender","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","CustomEmojiEffect","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","random","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","ChatFolderModal","MuteChatModal","ChatBadge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","Archive","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","ChatCallStatus","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","Chat","folderId","orderDiff","animationType","offsetTop","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","ActionMessageSuggestedAvatar","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","SimilarChannels","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","isFileSticker","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","Photo","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","onStop","playerRef","circleRef","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","shouldPlay","stopPlaying","capturePlaying","tooglePlaying","stopCurrentAudio","handleTimeUpdate","onTimeUpdate","cx","cy","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","isWebPageVideo","calculateVideoDimensions","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","maxUniqueReactions","areReactionsLocked","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","getReactionKey","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","SavedTagButton","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","geoPoint","geo","channelId","handleMediaAreaClick","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","savedCallback","lastCallback","onBeforeUnload","ConnectorClass","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}