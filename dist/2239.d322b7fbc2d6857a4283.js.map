{"version":3,"file":"2239.d322b7fbc2d6857a4283.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useInterval.ts","webpack://telegram-t/./src/util/directInputManager.ts","webpack://telegram-t/./src/util/resetScroll.ts"],"sourcesContent":["import type { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiPhoto, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { AnimationLevel } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { ANIMATION_LEVEL_MAX, IS_TEST } from '../../config';\nimport { VIDEO_AVATARS_DISABLED } from '../../util/windowEnvironment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserOnline,\n} from '../../global/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName, { createClassNameBuilder } from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './Avatar.scss';\n\nconst LOOP_COUNT = 3;\n\nconst cn = createClassNameBuilder('Avatar');\ncn.media = cn('media');\ncn.icon = cn('icon');\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'mini' | 'small' | 'small-mobile' | 'medium' | 'large' | 'jumbo';\n  chat?: ApiChat;\n  user?: ApiUser;\n  photo?: ApiPhoto;\n  userStatus?: ApiUserStatus;\n  text?: string;\n  isSavedMessages?: boolean;\n  withVideo?: boolean;\n  noLoop?: boolean;\n  loopIndefinitely?: boolean;\n  animationLevel?: AnimationLevel;\n  noPersonalPhoto?: boolean;\n  lastSyncTime?: number;\n  forceVideo?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  photo,\n  userStatus,\n  text,\n  isSavedMessages,\n  withVideo,\n  noLoop,\n  loopIndefinitely,\n  lastSyncTime,\n  forceVideo,\n  animationLevel,\n  noPersonalPhoto,\n  observeIntersection,\n  onClick,\n}) => {\n  const { loadFullUser } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const videoLoopCountRef = useRef(0);\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  const isForum = chat?.isForum;\n  let imageHash: string | undefined;\n  let videoHash: string | undefined;\n\n  const canShowVideo = (\n    withVideo && !VIDEO_AVATARS_DISABLED && animationLevel === ANIMATION_LEVEL_MAX\n    && user?.isPremium && user?.hasVideoAvatar\n  );\n  const profilePhoto = user?.fullInfo?.personalPhoto || user?.fullInfo?.profilePhoto || user?.fullInfo?.fallbackPhoto;\n  const hasProfileVideo = profilePhoto?.isVideo;\n  const isIntersectingForVideo = useIsIntersecting(\n    ref, canShowVideo && hasProfileVideo ? observeIntersection : undefined,\n  );\n  const shouldLoadVideo = isIntersectingForVideo && (canShowVideo || (forceVideo && photo?.isVideo));\n\n  const shouldFetchBig = size === 'jumbo';\n  if (!isSavedMessages && !isDeleted) {\n    if (user && !noPersonalPhoto) {\n      imageHash = getChatAvatarHash(user, shouldFetchBig ? 'big' : undefined);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat, shouldFetchBig ? 'big' : undefined);\n    } else if (photo) {\n      imageHash = `photo${photo.id}?size=m`;\n      if (photo.isVideo && withVideo) {\n        videoHash = `videoAvatar${photo.id}?size=u`;\n      }\n    }\n\n    if (hasProfileVideo) {\n      videoHash = getChatAvatarHash(user!, undefined, 'video');\n    }\n  }\n\n  const imgBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const videoBlobUrl = useMedia(videoHash, !shouldLoadVideo, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const hasBlobUrl = Boolean(imgBlobUrl || videoBlobUrl);\n  // `videoBlobUrl` can be taken from memory cache, so we need to check `shouldLoadVideo` again\n  const shouldPlayVideo = Boolean(isIntersectingForVideo && videoBlobUrl && shouldLoadVideo);\n\n  const transitionClassNames = useMediaTransition(hasBlobUrl);\n\n  const isOnline = !isSavedMessages && user && userStatus && isUserOnline(user, userStatus);\n  const onlineTransitionClassNames = useMediaTransition(isOnline);\n  const onlineClassNamesPrefixed = useMemo(() => {\n    return onlineTransitionClassNames.split(' ').map((c) => (c === 'shown' ? 'online' : `online-${c}`)).join(' ');\n  }, [onlineTransitionClassNames]);\n\n  const handleVideoEnded = useCallback((e) => {\n    const video = e.currentTarget;\n    if (!videoBlobUrl) return;\n\n    if (loopIndefinitely) return;\n\n    videoLoopCountRef.current += 1;\n    if (videoLoopCountRef.current >= LOOP_COUNT || noLoop) {\n      video.style.display = 'none';\n    }\n  }, [loopIndefinitely, noLoop, videoBlobUrl]);\n\n  const userId = user?.id;\n  useEffect(() => {\n    if (userId && canShowVideo && !profilePhoto) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, profilePhoto, userId, canShowVideo]);\n\n  const lang = useLang();\n\n  let content: TeactNode | undefined;\n  const author = user ? getUserFullName(user) : (chat ? getChatTitle(lang, chat) : text);\n\n  if (isSavedMessages) {\n    content = <i className={buildClassName(cn.icon, 'icon-avatar-saved-messages')} role=\"img\" aria-label={author} />;\n  } else if (isDeleted) {\n    content = <i className={buildClassName(cn.icon, 'icon-avatar-deleted-account')} role=\"img\" aria-label={author} />;\n  } else if (isReplies) {\n    content = <i className={buildClassName(cn.icon, 'icon-reply-filled')} role=\"img\" aria-label={author} />;\n  } else if (hasBlobUrl) {\n    content = (\n      <>\n        <img\n          src={imgBlobUrl}\n          className={buildClassName(cn.media, 'avatar-media', transitionClassNames, videoBlobUrl && 'poster')}\n          alt={author}\n          decoding=\"async\"\n        />\n        {shouldPlayVideo && (\n          <OptimizedVideo\n            canPlay\n            src={videoBlobUrl}\n            className={buildClassName(cn.media, 'avatar-media', 'poster')}\n            muted\n            loop={loopIndefinitely}\n            autoPlay\n            disablePictureInPicture\n            playsInline\n            onEnded={handleVideoEnded}\n          />\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    isForum && 'forum',\n    onlineClassNamesPrefixed,\n    onClick && 'interactive',\n    (!isSavedMessages && !imgBlobUrl) && 'no-photo',\n  );\n\n  const hasMedia = Boolean(isSavedMessages || imgBlobUrl);\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, hasMedia);\n    }\n  }, [onClick, hasMedia]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      data-test-sender-id={IS_TEST ? senderId : undefined}\n      aria-label={typeof content === 'string' ? author : undefined}\n    >\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  areButtonsInColumn?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  areButtonsInColumn,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { RefObject, UIEvent } from 'react';\nimport { LoadMoreDirection } from '../../types';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const state = stateRef.current;\n\n    state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n    let newScrollTop;\n\n    if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n      const { scrollTop } = container;\n      const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n      newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n    } else {\n      const nextAnchor = state.listItemElements[0];\n      if (nextAnchor) {\n        state.currentAnchor = nextAnchor;\n        state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n      }\n    }\n\n    if (withAbsolutePositioning || noScrollRestore) {\n      return;\n    }\n\n    if (noScrollRestoreOnTop && container.scrollTop === 0) {\n      return;\n    }\n\n    resetScroll(container, newScrollTop);\n\n    state.isScrollTopJustUpdated = true;\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { GlobalState } from '../types';\nimport { selectChat } from './chats';\nimport { isChatBasicGroup } from '../helpers';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const chat = selectChat(global, chatId);\n  if (!chat || !chat.fullInfo || !chat.fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, chat.fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\nimport { selectIsCurrentUserPremium } from './users';\nimport { DEFAULT_LIMITS } from '../../config';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  const value = limits[limit][isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: string | number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nconst useInfiniteScroll = <ListId extends string | number>(\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: ListId[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n): [ListId[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: ListId;\n  }>();\n\n  const viewportIdsRef = useRef<ListId[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, LoadMoreDirection.Forwards, listSlice, listIds[0]);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  if (isDisabled) {\n    lastParamsRef.current = {};\n  }\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  } else if (!listIds) {\n    viewportIdsRef.current = undefined;\n  }\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    if (!noScroll) {\n      lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice<ListId extends string | number>(\n  sourceIds: ListId[],\n  direction: LoadMoreDirection,\n  listSlice: number,\n  offsetId?: ListId,\n) {\n  const { length } = sourceIds;\n  const index = offsetId ? sourceIds.indexOf(offsetId) : 0;\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n\nexport default useInfiniteScroll;\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n    if (!noFirst) savedCallback.current();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport forceReflow from './forceReflow';\n\nconst resetScroll = (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n\n// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1264266\nexport function patchChromiumScroll(element: HTMLElement) {\n  element.style.display = 'none';\n  forceReflow(element);\n  element.style.display = '';\n}\n\nexport default resetScroll;\n"],"names":["cn","createClassNameBuilder","media","icon","memo","_ref","className","size","chat","user","photo","userStatus","text","isSavedMessages","withVideo","noLoop","loopIndefinitely","lastSyncTime","forceVideo","animationLevel","noPersonalPhoto","observeIntersection","onClick","loadFullUser","getActions","ref","useRef","videoLoopCountRef","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","id","isForum","imageHash","videoHash","canShowVideo","VIDEO_AVATARS_DISABLED","ANIMATION_LEVEL_MAX","isPremium","hasVideoAvatar","profilePhoto","fullInfo","personalPhoto","fallbackPhoto","hasProfileVideo","isVideo","isIntersectingForVideo","useIsIntersecting","undefined","shouldLoadVideo","shouldFetchBig","getChatAvatarHash","imgBlobUrl","useMedia","ApiMediaFormat","videoBlobUrl","hasBlobUrl","Boolean","shouldPlayVideo","transitionClassNames","useMediaTransition","isOnline","isUserOnline","onlineTransitionClassNames","onlineClassNamesPrefixed","useMemo","split","map","c","join","handleVideoEnded","useCallback","e","video","currentTarget","current","style","display","userId","useEffect","lang","useLang","content","author","getUserFullName","getChatTitle","React","buildClassName","role","src","alt","decoding","OptimizedVideo","canPlay","muted","loop","autoPlay","disablePictureInPicture","playsInline","onEnded","userFullName","getFirstLetters","title","isUserId","fullClassName","getUserColorKey","hasMedia","handleClick","senderId","IS_TEST","renderText","withGlobal","global","_ref2","selectCurrentChat","selectUser","contactName","getUserFirstOrLastName","isOpen","onClose","deleteChatMember","handleDeleteChatMember","chatId","ConfirmDialog","textParts","confirmLabel","confirmHandler","confirmIsDestructive","onCloseAnimationEnd","header","areButtonsInColumn","children","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","textPart","onKeyDown","Button","isText","color","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","arguments","length","direction","LoadMoreDirection","scrollHeight","clientHeight","useLayoutEffect","container","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","includes","scrollTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","newAnchorTop","offsetParent","teactFastList","buildStyle","IS_ANDROID","dialogRef","isSlim","hasCloseButton","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","useShowTransition","modalRef","disableDirectTextInput","enableDirectTextInput","captureKeyboardListeners","onEsc","element","key","preventDefault","stopPropagation","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","document","activeElement","newFocusedIndex","shiftKey","focus","addEventListener","removeEventListener","trapFocus","useHistoryBack","isActive","onBack","useEffectWithPrevDeps","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","Portal","tabIndex","round","ariaLabel","selectChatGroupCall","selectChat","groupCallId","selectGroupCall","groupCalls","byId","selectGroupCallParticipant","participantId","participants","selectIsAdminInActiveGroupCall","selectActiveGroupCall","isChatBasicGroup","isCreator","adminRights","manageCall","activeGroupCallId","selectPhoneCallUser","phoneCall","currentUserId","adminId","selectCurrentLimit","limit","_limits$limit","appConfig","DEFAULT_LIMITS","selectIsCurrentUserPremium","limits","value","selectPremiumLimit","getViewportSlice","sourceIds","listSlice","offsetId","indexOf","indexForDirection","Math","max","to","newViewportIds","slice","areSomeLocal","areAllLocal","listIds","isDisabled","lastParamsRef","viewportIdsRef","forceUpdate","useForceUpdate","prevListIds","usePrevious","prevIsDisabled","areSortedArraysEqual","getMore","viewportIds","callback","delay","noFirst","savedCallback","setInterval","clearInterval","counter","getIsDirectTextInputDisabled","patchChromiumScroll","forceReflow","IS_IOS","overflow"],"sourceRoot":""}