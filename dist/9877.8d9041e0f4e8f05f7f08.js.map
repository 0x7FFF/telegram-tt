{"version":3,"file":"9877.8d9041e0f4e8f05f7f08.js","mappings":"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,WACAJ,qBACA6D,sBAAsBC,EAAAA,EAAAA,KAA2Br8B,GACjDs8B,eAAgB/L,KAAyBgM,EAAAA,EAAAA,KAA+Bv8B,GACxEw8B,uBAAuBC,EAAAA,EAAAA,KAA4Bz8B,GACnD08B,oBAAqBrG,IAAmBD,IAAkBmD,EAC1DhR,uBAAwBvoB,EAAOg3B,SAASC,MAAM1O,uBAC9C0Q,oBACA0D,YAAa38B,EAAO48B,QAAQD,YAC5BvD,eACD,GA9Her5B,EAroDwB88B,EAC1ChY,OACA8U,gBACAmD,gBACAvD,oBACAM,yBACAkD,UACAtyB,WACAuyB,aACAC,UACAC,SACArU,iBACA5oB,SACA2V,WACAogB,UACAuC,qBACArK,kBACAa,QACA7uB,OACAq2B,gBACA6C,gBACAZ,2BACAjI,wBACAkI,yBACArC,iBACA7G,kBACAwK,aACAgC,iBACA/B,sBACAE,sBACAkC,wBACAvN,gBACA0L,aACAlD,wBACAgD,0BACA8C,oBACA/C,uBACAI,oBACAG,uBACAE,mBACAtD,iBACAC,eACA0E,gBACAlB,wBACAnE,yBACAC,4BACAI,qBACAC,iBACA8D,gBACAE,cACAE,sBACAE,eACAzD,cACAC,cACAL,YACAkB,gBACAZ,sBACAE,uBACAwD,iBACAtT,cACAyT,sBACAM,sBACA5zB,SACAowB,YACA5B,+BACAqG,4BACAC,mBACAC,WACAn8B,aACAq4B,sBACAE,gBACA4C,iBACAE,yBACAjU,0BACA0Q,qBACA0D,eACAD,uBACAa,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,gBACVvP,GAAe,cACfwP,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBhnB,GAAgB,oCAChBinB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,GAAiB,YACjBC,KACEl9B,EAAAA,EAAAA,MAEEC,IAAOC,EAAAA,EAAAA,KAGPi9B,IAAW56B,EAAAA,EAAAA,IAAuB,MAGlC66B,IAAmB76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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n    hasSavedMessages?: boolean;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        text: parseHtmlAsFormattedText(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Icon from '../../common/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown, isForwarding],\n    isShown && isForwarding ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n\n  const leftIcon = useMemo(() => {\n    if (isShowingReply) {\n      return 'reply';\n    }\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId && message) {\n      sender = selectSender(global, message);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport Icon from './Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            editingMessage={editingMessage}\n            hasReplaceableMedia={canMediaBeReplaced}\n            isButtonVisible={!activeVoiceRecording}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={isInScheduledList}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    return {\n      availableReactions: type === 'story' ? global.reactions.availableReactions : undefined,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageWebPageDocument,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document! || getMessageWebPageDocument(message);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: link });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\",\"-7s\":\"kFel0ZLm\",\"7S\":\"kFel0ZLm\",\"-14s\":\"C63lwaZj\",\"14S\":\"C63lwaZj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat?.id === sender?.id;\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {!isChatSender && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  useEffect(() => {\n    updateCanvas();\n  }, [emojiImage, lang.isRtl, customColor]);\n\n  const updateCanvasSize = useLastCallback((parentWidth: number, parentHeight: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = parentWidth * dpr;\n    canvas.height = parentHeight * dpr;\n\n    canvas.style.width = `${parentWidth}px`;\n    canvas.style.height = `${parentHeight}px`;\n\n    updateCanvas();\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  }, [dpr]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  isSavedDialog?: boolean;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} isSavedDialog={isSavedDialog} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isSavedDialog }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getAverageColor, rgb2hex } from '../../../util/colors';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useTimeout from '../../../hooks/useTimeout';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY, []);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nfunction useAverageColor(channel: ApiChat) {\n  const [color, setColor] = useState(DEFAULT_BADGE_COLOR);\n  const imgBlobUrl = useMedia(getChatAvatarHash(channel), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isChatChannel, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat!)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\">{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n      const isFileSticker = newAttachment && isUploadingFileSticker(newAttachment);\n\n      if (canReplace || isFileSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(photo.isSpoiler);\n\n  useEffect(() => {\n    if (photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [photo.isSpoiler]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMessageMediaFormat, getMessageMediaHash, getMessageMediaThumbDataUri, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSignal from '../../../hooks/useSignal';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMessageMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const tooglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    tooglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    tooglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(video.isSpoiler);\n\n  useEffect(() => {\n    if (video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [video.isSpoiler]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            {backgroundEmojiId && (\n              <EmojiIconBackground\n                emojiDocumentId={backgroundEmojiId}\n                className=\"WebPage--background-icons\"\n              />\n            )}\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            message={message}\n            observeIntersection={observeIntersection}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const availableReactions = useMemo(() => {\n    const reactions = isInSavedMessages ? defaultTagReactions\n      : (enabledReactions?.type === 'some' ? enabledReactions.allowed\n        : allAvailableReactions?.map((reaction) => reaction.reaction));\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    maxUniqueReactions, topReactions,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\nconst SavedTagButton: FC<{\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n}> = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    video.pause();\n    video.src = '';\n    video.load();\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        video.pause();\n        video.src = '';\n        video.load();\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","AnimatedCounter","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","AvatarList","peers","root","avatar","runDebounced","debounce","cb","chatOrUserId","isSavedDialog","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","Number","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","includes","ChatExtra","isInSettings","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","shouldRenderAllLinks","isPremium","activeUsernames","result","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","idx","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_IMAGE_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","quoteText","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","isShowingReply","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","WebPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","url","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForumAsMessages","selectTopicFromMessage","isInScheduledList","availableReactions","reactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","getMessageWebPageDocument","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","mimeType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","self","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","mediaBlobUrl","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","NothingFound","PasswordForm","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","forceShowSelf","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","Loading","fluid","withPeerColors","iconElement","titleText","LimitPreview","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","adminMember","customTitle","isOwner","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","ProfileInfo","openPremiumModal","openStickerSet","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","renderStatus","ReactionStaticEmoji","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","EmbeddedMessage","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","emojiSize","isChatGroup","isChatSender","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","CustomEmojiEffect","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","random","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","ChatFolderModal","MuteChatModal","ChatBadge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","Archive","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","ChatCallStatus","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","Chat","folderId","orderDiff","animationType","offsetTop","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","ActionMessageSuggestedAvatar","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","SimilarChannels","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","isFileSticker","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","Photo","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","onStop","playerRef","circleRef","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","shouldPlay","stopPlaying","capturePlaying","tooglePlaying","stopCurrentAudio","handleTimeUpdate","onTimeUpdate","cx","cy","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","isWebPageVideo","calculateVideoDimensions","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","maxUniqueReactions","areReactionsLocked","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","getReactionKey","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","SavedTagButton","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","geoPoint","geo","channelId","handleMediaAreaClick","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","savedCallback","lastCallback","onBeforeUnload","ConnectorClass","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}