{"version":3,"file":"7700.76aab9418590c6dfda45.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useInterval.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"sectionInfo\":\"IrqRJFxm\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport generateUniqueId from '../../../util/generateUniqueId';\nimport { SVG_NAMESPACE } from '../../../util/svgController';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const svg = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svg.setAttribute('class', styles.ghost);\n  svg.setAttribute('width', `${width}px`);\n  svg.setAttribute('height', `${height}px`);\n  svg.setAttribute('style', `left: ${x}px; top: ${y}px;`);\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n  const defs = document.createElementNS(SVG_NAMESPACE, 'defs');\n  svg.appendChild(defs);\n\n  const filter = createFilter(Math.min(width, height), seed);\n  filter.setAttribute('id', filterId);\n  defs.appendChild(filter);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.setAttribute('filter', `url(#${filterId})`);\n  svg.appendChild(g);\n\n  const foreignObject = document.createElementNS(SVG_NAMESPACE, 'foreignObject');\n  foreignObject.setAttribute('class', styles.elementContainer);\n  foreignObject.setAttribute('width', `${width}px`);\n  foreignObject.setAttribute('height', `${height}px`);\n  g.appendChild(foreignObject);\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(smallestSide: number, baseSeed: number = 42) {\n  const filter = document.createElementNS(SVG_NAMESPACE, 'filter');\n  filter.setAttribute('x', '-150%');\n  filter.setAttribute('y', '-150%');\n  filter.setAttribute('width', '400%');\n  filter.setAttribute('height', '400%');\n  filter.setAttribute('color-interpolation-filters', 'sRGB');\n\n  const feTurbulence = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence.setAttribute('type', 'fractalNoise');\n  feTurbulence.setAttribute('baseFrequency', '0.5');\n  feTurbulence.setAttribute('numOctaves', '1');\n  feTurbulence.setAttribute('result', 'dustNoise');\n  feTurbulence.setAttribute('seed', baseSeed.toString());\n  filter.appendChild(feTurbulence);\n\n  const feComponentTransfer = document.createElementNS(SVG_NAMESPACE, 'feComponentTransfer');\n  feComponentTransfer.setAttribute('in', 'dustNoise');\n  feComponentTransfer.setAttribute('result', 'dustNoiseMask');\n  filter.appendChild(feComponentTransfer);\n\n  const feFuncA = document.createElementNS(SVG_NAMESPACE, 'feFuncA');\n  feFuncA.setAttribute('type', 'linear');\n  feFuncA.setAttribute('slope', '5');\n  feFuncA.setAttribute('intercept', '0');\n  feComponentTransfer.appendChild(feFuncA);\n\n  const feFuncAAnimate = document.createElementNS(SVG_NAMESPACE, 'animate');\n  feFuncAAnimate.setAttribute('attributeName', 'slope');\n  feFuncAAnimate.setAttribute('values', '5; 2; 1; 0');\n  feFuncAAnimate.setAttribute('dur', `${DURATION}ms`);\n  feFuncAAnimate.setAttribute('fill', 'freeze');\n  feFuncA.appendChild(feFuncAAnimate);\n\n  const feComposite = document.createElementNS(SVG_NAMESPACE, 'feComposite');\n  feComposite.setAttribute('in', 'SourceGraphic');\n  feComposite.setAttribute('in2', 'dustNoiseMask');\n  feComposite.setAttribute('operator', 'in');\n  feComposite.setAttribute('result', 'dustySource');\n  filter.appendChild(feComposite);\n\n  const feTurbulence2 = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence2.setAttribute('type', 'fractalNoise');\n  feTurbulence2.setAttribute('baseFrequency', '0.015');\n  feTurbulence2.setAttribute('numOctaves', '1');\n  feTurbulence2.setAttribute('result', 'displacementNoice1');\n  feTurbulence2.setAttribute('seed', (baseSeed + 1).toString());\n  filter.appendChild(feTurbulence2);\n\n  const feTurbulence3 = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence3.setAttribute('type', 'fractalNoise');\n  feTurbulence3.setAttribute('baseFrequency', '1');\n  feTurbulence3.setAttribute('numOctaves', '2');\n  feTurbulence3.setAttribute('result', 'displacementNoice2');\n  feTurbulence3.setAttribute('seed', (baseSeed + 2).toString());\n  filter.appendChild(feTurbulence3);\n\n  const feMerge = document.createElementNS(SVG_NAMESPACE, 'feMerge');\n  feMerge.setAttribute('result', 'combinedNoise');\n  filter.appendChild(feMerge);\n\n  const feMergeNode1 = document.createElementNS(SVG_NAMESPACE, 'feMergeNode');\n  feMergeNode1.setAttribute('in', 'displacementNoice1');\n  feMerge.appendChild(feMergeNode1);\n\n  const feMergeNode2 = document.createElementNS(SVG_NAMESPACE, 'feMergeNode');\n  feMergeNode2.setAttribute('in', 'displacementNoice2');\n  feMerge.appendChild(feMergeNode2);\n\n  const feDisplacementMap = document.createElementNS(SVG_NAMESPACE, 'feDisplacementMap');\n  feDisplacementMap.setAttribute('in', 'dustySource');\n  feDisplacementMap.setAttribute('in2', 'combinedNoise');\n  feDisplacementMap.setAttribute('scale', '0');\n\n  feDisplacementMap.setAttribute('xChannelSelector', 'R');\n  feDisplacementMap.setAttribute('yChannelSelector', 'G');\n  filter.appendChild(feDisplacementMap);\n\n  const feDisplacementMapAnimate = document.createElementNS(SVG_NAMESPACE, 'animate');\n  feDisplacementMapAnimate.setAttribute('attributeName', 'scale');\n  feDisplacementMapAnimate.setAttribute('values', `0; ${smallestSide * 3}`);\n  feDisplacementMapAnimate.setAttribute('dur', `${DURATION}ms`);\n  feDisplacementMapAnimate.setAttribute('fill', 'freeze');\n  feDisplacementMap.appendChild(feDisplacementMapAnimate);\n\n  return filter;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i ref={downloadButtonRef} className=\"icon icon-download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i ref={playButtonRef} className=\"icon icon-large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback(), delay);\n    if (!noFirst) savedCallback();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import EMOJI_REGEX from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 code points per one emoji.\n\nexport default function parseEmojiOnlyString(text: string): number | false {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const totalCount = countIfEmojiOnly(textWithoutNewlines);\n  if (!totalCount || totalCount > DETECT_UP_TO) {\n    return false;\n  }\n\n  // Calculate max emoji count per column or line. Used in UI to determine the size of the emoji.\n  let max = lines.length;\n  for (const line of lines) {\n    const count = countIfEmojiOnly(line);\n    if (count === false) {\n      return false;\n    }\n    if (count > max) {\n      max = count;\n    }\n  }\n\n  return max;\n}\n\nfunction countIfEmojiOnly(line: string): false | number {\n  const iterator = line.matchAll(EMOJI_REGEX);\n  let count = 0;\n  let currentIndex = 0;\n\n  for (const match of iterator) {\n    if (match.index !== currentIndex) {\n      return false;\n    }\n\n    count++;\n    currentIndex = match.index + match[0].length;\n  }\n\n  if (currentIndex !== line.length) {\n    return false;\n  }\n\n  return count;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","peer","Avatar","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","Set","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","PasswordForm","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","peerColor","noUserColors","shoudReset","emojiIconClassName","children","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","countryList","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","usernameList","otherUsernames","usernameLinks","s","CustomEmojiEffect","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","buildStyle","path","withSharedAnimation","onAnimationEnd","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","stopActiveReaction","isCustom","availableReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","available","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","root","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","AnimatedSticker","animatedIcon","roundToNearestEven","play","onLoad","withIconHeart","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","svg","createElementNS","SVG_NAMESPACE","ghost","defs","smallestSide","baseSeed","feTurbulence","feComponentTransfer","feFuncA","feFuncAAnimate","feComposite","feTurbulence2","feTurbulence3","feMerge","feMergeNode1","feMergeNode2","feDisplacementMap","feDisplacementMapAnimate","createFilter","g","foreignObject","elementContainer","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","Photo","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","shouldSkipModal","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","InputText","teactExperimentControlled","SavedTagButton","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","noFirst","savedCallback","setInterval","clearInterval","resolver","deps","msOrSchedulerFn","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","DETECT_UP_TO","MAX_LENGTH","lines","fixNonStandardEmoji","textWithoutNewlines","countIfEmojiOnly","line","iterator","matchAll","EMOJI_REGEX","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}