{"version":3,"file":"3779.34b9f6e6d68453dfc728.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftOption.module.scss?a171","webpack://telegram-t/./src/components/main/premium/GiftOption.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.module.scss?8334","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.module.scss?e7ab","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommand.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getMessageActionPhoto,\n  getMessageDocument,\n  getMessageFileName,\n  getMessageFileSize,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoFullDimensions,\n  getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\ntype UseMediaProps = {\n  mediaId?: number;\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  message,\n  mediaId = 0,\n  avatarOwner,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const actionPhoto = message ? getMessageActionPhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n  const avatarMedia = avatarOwner?.photos?.[mediaId];\n  const isVideoAvatar = Boolean(avatarMedia?.isVideo || actionPhoto?.isVideo);\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto || actionPhoto));\n  const { isGif } = video || webPageVideo || {};\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaHash = useMemo(() => (isFull?: boolean) => {\n    if (avatarOwner) {\n      if (avatarMedia) {\n        if (avatarMedia.isVideo && isFull) {\n          return getVideoAvatarMediaHash(avatarMedia);\n        } else if (mediaId === 0) {\n          // Show preloaded avatar if this is the first media (when user clicks on profile info avatar)\n          return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n        } else {\n          return `photo${avatarMedia.id}?size=c`;\n        }\n      } else {\n        return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n      }\n    }\n    if (actionPhoto && isVideoAvatar && isFull) {\n      return `videoAvatar${actionPhoto.id}?size=u`;\n    }\n    return message && getMessageMediaHash(message, isFull ? 'full' : 'preview');\n  }, [avatarOwner, actionPhoto, isVideoAvatar, message, avatarMedia, mediaId]);\n\n  const pictogramBlobUrl = useMedia(\n    message\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocumentPhoto || isDocumentVideo)\n    && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    !isVideo ? previewBlobUrl || pictogramBlobUrl || bestImageData : undefined\n  );\n  const isLocal = Boolean(localBlobUrl);\n  const fileName = message\n    ? getMessageFileName(message)\n    : avatarOwner\n      ? `avatar${avatarOwner!.id}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  const dimensions = useMemo(() => {\n    if (message) {\n      if (isDocumentPhoto || isDocumentVideo) {\n        return getMessageDocument(message)!.mediaSize!;\n      } else if (photo || webPagePhoto || actionPhoto) {\n        return getPhotoFullDimensions((photo || webPagePhoto || actionPhoto)!)!;\n      } else if (video || webPageVideo) {\n        return getVideoDimensions((video || webPageVideo)!)!;\n      }\n    } else {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n    return undefined;\n  }, [\n    isDocumentPhoto,\n    isDocumentVideo,\n    isVideoAvatar,\n    message,\n    photo,\n    video,\n    actionPhoto,\n    webPagePhoto,\n    webPageVideo,\n  ]);\n\n  return {\n    getMediaHash,\n    photo,\n    video,\n    webPagePhoto,\n    actionPhoto,\n    webPageVideo,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocumentPhoto,\n    isDocumentVideo,\n    fileName,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    avatarPhoto: avatarMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    videoSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(selectBot(global, message.chatId));\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { MenuItemProps } from '../ui/MenuItem';\n\nimport { getMessageMediaFormat, getMessageMediaHash, isUserId } from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsDownloading,\n  selectIsMessageProtected,\n} from '../../global/selectors';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  avatarOwnerId?: string;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  message?: ApiMessage;\n  canUpdateMedia?: boolean;\n  isSingleMedia?: boolean;\n  avatarPhoto?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  fileName?: string;\n  canReport?: boolean;\n  selectMedia: (mediaId?: number) => void;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  avatarPhoto,\n  avatarOwnerId,\n  fileName,\n  isChatProtected,\n  isDownloading,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  selectMedia,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    message && getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (!avatarPhoto || !avatarOwnerId) return;\n    if (isUserId(avatarOwnerId)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwnerId, photo: avatarPhoto });\n    }\n    selectMedia(0);\n  });\n\n  const lang = useLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    return message\n      ? (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={message}\n        />\n      )\n      : (avatarOwnerId && avatarPhoto) ? (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={avatarOwnerId}\n          photo={avatarPhoto}\n        />\n      ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (message?.isForwardingAllowed && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {message?.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message, canUpdateMedia, avatarPhoto, avatarOwner,\n  }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      isDownloading,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      avatarOwnerId: avatarOwner?.id,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => videoPreview?.destroy();\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FWH9e05HHn4BJrkuqmgL\",\"preview\":\"PmR9chdfbwrolc8FOkNB\",\"previewCanvas\":\"O7IGkaF5yzopTKVImH2v\",\"previewTime\":\"R85IB61J5InMMYwLQWxU\",\"previewTimeText\":\"QBMgsZDdCiXJzzHzd8rg\",\"track\":\"YiY5CtrarIYsGovxCo1b\",\"buffered\":\"s3rSBAeNFQimTK3eRl8t\",\"played\":\"sQTcQShWx8rMXJFKN2hO\",\"seeking\":\"pNanY7hqtTLHXdRob0qg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useFullscreen from '../../hooks/useFullscreen';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered && !isUnsupported, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChat, selectChatMessage, selectIsMessageProtected, selectScheduledMessage, selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  mediaId?: number;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  isMoving?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  mediaId?: number;\n  senderId?: string;\n  threadId?: number;\n  avatarOwner?: ApiPeer;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    mediaId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    origin,\n    withAnimation,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    isHidden,\n    onClose,\n    onFooterClick,\n    isMoving,\n  } = props;\n\n  const lang = useLang();\n\n  const {\n    isVideo,\n    isPhoto,\n    actionPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    videoSize,\n    loadProgress,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (avatarOwner || actionPhoto) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={mediaId}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = message.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message, forcePlayback: true, isForMediaViewer: true });\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = message && calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={mediaId}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n    } = selectTabState(global).mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        origin,\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport { useFullscreenStatus } from '../../hooks/useFullscreen';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport useTimeout from '../../hooks/useTimeout';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  mediaId?: number;\n  getMediaId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMedia: (id?: number) => void;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  onClose: () => void;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  mediaId,\n  getMediaId,\n  selectMedia,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveMediaId, setActiveMediaId] = useSignal<number | undefined>(mediaId);\n  const activeMediaIdRef = useSignalRef(getActiveMediaId);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeMediaId = useDerivedState(getActiveMediaId);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n  const { onClose } = rest;\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectMediaDebounced = useDebouncedCallback(selectMedia, [selectMedia], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveMediaId(mediaId);\n    }\n  }, [mediaId, setActiveMediaId, transformRef]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeMediaIdRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMediaId(activeMediaIdRef.current, direction);\n      if (mId !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMediaId(activeMediaIdRef.current, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    onClose,\n    setTransform,\n    getMediaId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMediaDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    withAnimation,\n    setIsMouseDown,\n    setIsActive,\n    isHidden,\n    isFullscreen,\n    transformRef,\n    setActiveMediaId,\n    activeMediaIdRef,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  if (activeMediaId === undefined) return undefined;\n\n  const nextMediaId = getMediaId(activeMediaId, 1);\n  const prevMediaId = getMediaId(activeMediaId, -1);\n  const hasPrev = prevMediaId !== undefined;\n  const hasNext = nextMediaId !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={prevMediaId}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...rest}\n          mediaId={activeMediaId}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={nextMediaId}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport { getSenderTitle } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectPeer,\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n  isFallbackAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isFallbackAvatar,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  });\n\n  const lang = useLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={sender.id} size=\"medium\" peer={sender} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang(isFallbackAvatar ? 'lng_mediaview_profile_public_photo' : 'lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: selectPeer(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getChatMediaMessageIds, isChatAdmin, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMediaSearch, selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: number;\n  mediaId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiPeer;\n  avatarOwnerFallbackPhoto?: ApiPhoto;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  mediaId,\n  senderId,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatarOwner,\n  avatarOwnerFallbackPhoto,\n  message,\n  chatMessages,\n  collectionIds,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const {\n    webPagePhoto,\n    webPageVideo,\n    isVideo,\n    actionPhoto,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n    avatarPhoto,\n    fileName,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = !!avatarPhoto && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  /* Navigation */\n  const singleMediaId = webPagePhoto || webPageVideo || actionPhoto ? mediaId : undefined;\n\n  const mediaIds = useMemo(() => {\n    if (singleMediaId) {\n      return [singleMediaId];\n    } else if (avatarOwner) {\n      return avatarOwner.photos?.map((p, i) => i) || [];\n    } else {\n      return getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n    }\n  }, [singleMediaId, avatarOwner, chatMessages, collectionIds, isFromSharedMedia]);\n\n  const selectedMediaIndex = mediaId ? mediaIds.indexOf(mediaId) : -1;\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaIndex;\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    if (typeof mql.addEventListener === 'function') {\n      mql.addEventListener('change', forceUpdate);\n    } else if (typeof mql.addListener === 'function') {\n      mql.addListener(forceUpdate);\n    }\n\n    return () => {\n      if (typeof mql.removeEventListener === 'function') {\n        mql.removeEventListener('change', forceUpdate);\n      } else if (typeof mql.removeListener === 'function') {\n        mql.removeListener(forceUpdate);\n      }\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwner = usePrevious<ApiPeer | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevMediaId !== mediaId;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (!prevMessage || shouldAnimateOpening) && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, shouldAnimateOpening, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const mediaIdRef = useStateRef(mediaId);\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    const currentMediaId = mediaIdRef.current;\n\n    if (!chatId || !currentMediaId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId: currentMediaId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId: currentMediaId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [mediaId!],\n    });\n  });\n\n  const selectMedia = useLastCallback((id?: number) => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      mediaId: id,\n      avatarOwnerId: avatarOwner?.id,\n      origin: origin!,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const mediaIdsRef = useStateRef(mediaIds);\n\n  const getMediaId = useLastCallback((fromId?: number, direction?: number): number | undefined => {\n    if (fromId === undefined) return undefined;\n    const mIds = mediaIdsRef.current;\n    const index = mIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < mIds.length - 1)) {\n      return mIds[index + direction];\n    }\n    return undefined;\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    if (mediaIds.length <= 1) {\n      handleClose();\n      return;\n    }\n    let index = mediaId ? mediaIds.indexOf(mediaId) : -1;\n    // Before deleting, select previous media or the first one\n    index = index > 0 ? index - 1 : 0;\n    selectMedia(mediaIds[index]);\n  });\n\n  const lang = useLang();\n\n  function renderSenderInfo() {\n    return avatarOwner ? (\n      <SenderInfo\n        key={mediaId}\n        chatId={avatarOwner.id}\n        isAvatar\n        isFallbackAvatar={isUserId(avatarOwner.id)\n          && (avatarOwner as ApiUser).photos?.[mediaId!]?.id === avatarOwnerFallbackPhoto?.id}\n      />\n    ) : (\n      <SenderInfo\n        key={mediaId}\n        chatId={chatId}\n        messageId={mediaId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          message={message}\n          canUpdateMedia={canUpdateMedia}\n          avatarPhoto={avatarPhoto}\n          avatarOwner={avatarOwner}\n          fileName={fileName}\n          canReport={canReport}\n          selectMedia={selectMedia}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        mediaId={mediaId}\n        getMediaId={getMediaId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectMedia={selectMedia}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n      isHidden,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId } = global;\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        withAnimation,\n        isHidden,\n        shouldSkipHistoryAnimations,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const user = selectUser(global, avatarOwnerId);\n      const chat = selectChat(global, avatarOwnerId);\n      let canUpdateMedia = false;\n      if (user) {\n        canUpdateMedia = avatarOwnerId === currentUserId;\n      } else if (chat) {\n        canUpdateMedia = isChatAdmin(chat);\n      }\n\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: user || chat,\n        avatarOwnerFallbackPhoto: user ? selectUserFullInfo(global, avatarOwnerId)?.fallbackPhoto : undefined,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectChatScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n    let collectionIds: number[] | undefined;\n\n    if (origin === MediaViewerOrigin.Inline\n      || origin === MediaViewerOrigin.Album) {\n      collectionIds = selectOutlyingListByMessageId(global, chatId, threadId, message.id)\n        || selectListedIds(global, chatId, threadId);\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gJ2Z_EQBnbDYMJ2NKHPj\",\"fullSize\":\"F47ywnKRf0QnMNfkDAhN\",\"backdrop\":\"aZegQFa4eGDydcez2hhX\",\"captionBackdrop\":\"tt0i3c46mBP8eper4sX9\",\"backdropNonInteractive\":\"qBNqjd4Jivn9JZM9LTR1\",\"close\":\"oHmnmRivkoOTtFlipOlm\",\"wrapper\":\"tfRbD6UXCoHpURk9jkFs\",\"slideAnimation\":\"KeE62xWk53FkLDgmLDHC\",\"slideAnimationToActive\":\"u4UY_cga_HGYeSeXtJFy\",\"content\":\"AS2XHnign2xV16Kjj6bL\",\"slideAnimationFromActive\":\"fMXsSVdwtbHbHVPe7TRY\",\"composer\":\"RrR48bdsuf7ziCaT39SR\",\"caption\":\"DfZIQpvbsc1Lopohx81T\",\"storyIndicators\":\"E5huzrUvL4LEC9dx4KwW\",\"slide\":\"Xd5grwcEn6r_RQyYYwTw\",\"slidePreview\":\"fH5dgpor5kv4sjYevuiU\",\"activeSlide\":\"Cs943zlR1iWQhsSG8QUZ\",\"slideInner\":\"UxBW6ApLLCk97qq1YxJH\",\"mediaWrapper\":\"tOO6t_Iv78rQnpDEOgh8\",\"media\":\"IWB6V7TuwMQUqxdPJDKT\",\"name\":\"zX3llen5J3KlIJGrCz2u\",\"forward\":\"mFCpxKAL5_Xa89VkFv5i\",\"storyHeader\":\"Kcahvy487TvQIEvXamQu\",\"sender\":\"E1bHDTXle6dida5Kw_Ob\",\"senderInfo\":\"MtJgsqpsPRYORGENbJDM\",\"senderName\":\"h7HZqUP3UoB_TWRA3ien\",\"storyMetaRow\":\"N9xfCNDRX4SkiLZ4_S9E\",\"storyMeta\":\"_fljB0mSVyj1YctbrtIQ\",\"closeButton\":\"qiXq5_w5pl5BhuytgsUI\",\"actions\":\"rlPJs7dRj8mRAAzEoxxg\",\"active\":\"YFM2wDC77SIBRSobTTNQ\",\"visibilityButton\":\"L2DlAgxoJ9gNRcSiZRkI\",\"visibilityButtonSelf\":\"uFpWDsHmcfI_qQSfKtph\",\"button\":\"Njk4jy0AOyHD31ABkS6M\",\"buttonMenu\":\"nqQ3MS3rHe4c00GJvtwh\",\"captionGradient\":\"MnckwrDaIp2zIGy011sM\",\"captionInner\":\"jXIvfN5QPnrzWo9eANQf\",\"captionContent\":\"_nAzidGNr0mdSkqyvmj_\",\"hasOverflow\":\"d3FJsMTVC2kORJMGxgbG\",\"expanded\":\"zAH8_B8BrtyxRZR_iHvS\",\"animate\":\"ZguPPKlRJgtkBr7ENcvT\",\"withShowMore\":\"XOq3cloVnzuYbz2bQw_b\",\"captionShowMore\":\"OIcA1buYWPCjn6NzLZJn\",\"navigate\":\"nAa_W_FxKosbXRpB3tgu\",\"prev\":\"zwhGmE8SJA8XAnthasxt\",\"next\":\"a9J5InzXCE1XEX5m3A6J\",\"modal\":\"RiK8REKD0zdsqi8XRHh5\",\"thumbnail\":\"lFdi4MIeHlnMCtiJbwTA\",\"ghost\":\"zY4iKmbIIQ3TXtFU3PvS\",\"ghost2\":\"b1yiparcCewkKHh2aOHA\",\"ghostImage\":\"rAlVsvmsoSnnvgZfAsc5\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNraau1Tus9Dhh2t0acA\",\"closeButton\":\"osHMUMN4HFvGPbQ6eYUw\",\"stealthIcon\":\"VLiBdviejkHCeGYNuGbe\",\"title\":\"uEr8ArVuYRUD3Ca3K1Sr\",\"description\":\"uV7xfk10UeLETmkHjCSv\",\"listItem\":\"P7J78AMcEBuYTdRnkNpv\",\"icon\":\"cFpiujXxzIbtMShso6wr\",\"button\":\"z5JVVwDZqJmujLRuZYiL\",\"subtitle\":\"ADx8YQgxcFasnFZ14Tcy\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <Picker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"wU1uWdwnVeSGSB5gOjJ6\",\"active\":\"SlrHi8_ck8rgqhL48EhA\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Tc2kIulYTlFPvwfiTsFu\",\"header\":\"JXAfpcoB9izWjIX_WP0Q\",\"closeButton\":\"Hku60UdVn3LASgJdRQuw\",\"headerTitle\":\"L0Y7Snis7FiIcjMWZBBV\",\"content\":\"TBDaWd1Xw_wRqKUfj6IE\",\"section\":\"aNUFlXJVOpJVBLust1Ow\",\"title\":\"zNuDMViBzMNzGZxwFYGt\",\"list\":\"uW2YeebP6I62I5STt6az\",\"option\":\"CmouOddJNYo5qMb1eDhZ\",\"checked\":\"PxjIam8OpB7IAvp7fByQ\",\"input\":\"K9FImlb6XOJreshP5cfK\",\"icon\":\"Wpl9IXFnTYZf8HWj8H7_\",\"action\":\"oOUd_PRdTkIxpN_BekC1\",\"optionContent\":\"BkziTDKbvbzgii4mPbsx\",\"footer\":\"gH3hgLj6tnN_xhycOx0Q\",\"info\":\"i2HOS8g2UGDP69ABnvAe\",\"submit\":\"XwAIvijHgerStkRxm6rt\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryPinned } = getActions();\n\n  const lang = useLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isPinned);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isPinned !== isPinned) {\n      toggleStoryPinned({ peerId: story!.peerId, storyId: story!.id, isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst OVERFLOW_THRESHOLD_PX = 5.75 * REM;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n\n  const caption = story.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const { clientHeight } = ref.current;\n    setHasOverflow(clientHeight > OVERFLOW_THRESHOLD_PX);\n  }, [caption]);\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransition(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useEffect(() => {\n    if (!showMoreButtonRef.current || !contentRef.current) {\n      return;\n    }\n\n    const button = showMoreButtonRef.current;\n    const container = contentRef.current;\n\n    const { offsetWidth } = button;\n    requestMutation(() => {\n      container.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n    });\n  }, [canExpand]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    hasOverflow && !isExpanded && styles.hasOverflow,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          <MessageText\n            messageOrStory={story}\n            withTranslucentThumbs\n            forcePlayback\n          />\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SZ7yrkn5jnFJYa8rf9Lq\",\"viewInfo\":\"sGmslpAUN8yKBOxe13Kg\",\"interactive\":\"UfBe8dmqVfC7BCCMwpOI\",\"avatars\":\"fx7W4KZAaiK5T2nIZL5c\",\"spacer\":\"SdmjC2sdiWVr6VAguB1N\",\"reactionCount\":\"be7sESSsLrdDEAFmfgN1\",\"reactionCountHeart\":\"j6UTHtXm5pGlZTUQtiNw\",\"channelReaction\":\"ZeZWZgtRc6Lk344t1KSQ\",\"views\":\"nrvshNssU3J7YjDRMGJt\",\"viewIcon\":\"ALYrJzsIz00qOE3fZxAg\",\"reactionButton\":\"BnHCTCGK8AHZZfrBsrRz\",\"reactionHeart\":\"oDRgq62aSPNYamk9P2EV\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  areViewsExpired?: boolean;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  areViewsExpired,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useLang();\n\n  const {\n    viewsCount, reactionsCount, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = story && 'recentViewerIds' in story ? story.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [story]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {!areViewsExpired && Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <div className={styles.channelReaction}>\n          <Button\n            round\n            className={styles.reactionButton}\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleLikeStory}\n            ariaLabel={lang('AccDescrLike')}\n          >\n            {sentReaction && (\n              <ReactionAnimatedEmoji\n                key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                containerId={containerId}\n                reaction={sentReaction}\n                withEffectOnly={isSentStoryReactionHeart}\n              />\n            )}\n            {(!sentReaction || isSentStoryReactionHeart) && (\n              <Icon\n                name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n              />\n            )}\n          </Button>\n          {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uXHBlEUDZKJr1u7dvj4k\",\"viewed\":\"GiJXPT0zbAmsx82Nm8ci\",\"active\":\"PaCfy7Nei0tOQAE9i0XV\",\"inner\":\"goBtmBaUzEEUaT_NbrvT\",\"progress\":\"kvGsn6HE3seo_5jfVRs1\",\"paused\":\"J1oS3YeXCbdBhKm3eIBi\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport {\n  selectChat, selectIsCurrentUserPremium,\n  selectPeerStories, selectPeerStory,\n  selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dateFormat';\nimport download from '../../util/download';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n}\n\nconst VIDEO_MIN_READY_STATE = 4;\nconst SPACEBAR_CODE = 32;\n\nconst PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nconst SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryPinned,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n\n  const isChangelog = peerId === storyChangelogUserId;\n  const isChannel = !isUserId(peerId);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isPinned : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isPinned : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const shouldShowFooter = isLoadedStory && (isOut || isChannel);\n\n  const {\n    shouldRender: shouldRenderSkeleton, transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransition(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransition(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransition(!isOut && !isChangelog && !isChannel);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransition(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransition(true);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress(handleLongPressStart, handleLongPressEnd);\n\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !isVideo || !fullMediaData);\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => { if (hasAllData && !isUnsupported) handlePlayStory(); }, [hasAllData, isUnsupported]);\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isOut || isDeletedStory || areViewsExpired) return;\n\n    // Refresh recent viewers list each time\n    loadStoryViews({ peerId, storyId, isPreload: true });\n  }, [isDeletedStory, areViewsExpired, isOut, peerId, storyId]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) return;\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      setCurrentTime(video.currentTime);\n    }\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    setCurrentTime(0);\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    setCurrentTime(0);\n    openNextStory();\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    setCurrentTime(0);\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    const duration = isLoadedStory && story.content.video?.duration\n      ? story.content.video.duration\n      : undefined;\n\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (isChannel) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderInfo}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>{lang('StorySave')}</MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>{lang('ArchiveStory')}</MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>{lang('StealthMode')}</MenuItem>\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPlaying={markStoryPlaying}\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n            onEnded={handleOpenNextStory}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} areViewsExpired={areViewsExpired} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={styles.captionGradient} />}\n      {hasText && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={appearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang('ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId, storyId, isPrivateStories, isArchivedStories, isReportModalOpen, isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const { orderedIds, pinnedIds, archiveIds } = selectPeerStories(global, peerId) || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  return {\n    peer: (user || chat)!,\n    story,\n    orderedIds: isArchivedStories ? archiveIds : (isPrivateStories ? pinnedIds : orderedIds),\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n  };\n})(Story));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress(\n  onStart: NoneToVoidFunction,\n  onEnd: NoneToVoidFunction,\n) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart();\n      isLongPressActive.current = true;\n    }, DEFAULT_THRESHOLD);\n  }, [onStart]);\n\n  const cancel = useCallback(() => {\n    if (isLongPressActive.current) {\n      onEnd();\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1);\n    const resultId = byId[previewIndexId]?.id || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <Avatar\n          peer={peer}\n          withStory\n          storyViewerMode=\"disabled\"\n        />\n        <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { ANIMATION_END_DELAY, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport { selectIsStoryViewerOpen, selectPeer, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport {\n  IS_FIREFOX, IS_IOS, IS_SAFARI,\n} from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSignal from '../../hooks/useSignal';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ANIMATION_DURATION_MS = 350 + (IS_SAFARI || IS_FIREFOX ? ANIMATION_END_DELAY : 20);\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePrevious(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n  const animationDuration = isMobile ? 0 : ANIMATION_DURATION_MS;\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    const timeoutId = window.setTimeout(() => {\n      setRenderingPeerId(currentPeerId);\n    }, animationDuration);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [animationDuration, currentPeerId]);\n\n  useEffect(() => {\n    let timeOutId: number | undefined;\n\n    if (renderingPeerId !== currentPeerId) {\n      timeOutId = window.setTimeout(() => {\n        setRenderingStoryId(currentStoryId);\n      }, animationDuration);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n\n    return () => {\n      window.clearTimeout(timeOutId);\n    };\n  }, [renderingPeerId, currentStoryId, currentPeerId, renderingStoryId, animationDuration]);\n\n  useEffect(() => {\n    let timeOutId: number | undefined;\n\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n      timeOutId = window.setTimeout(() => {\n        setIsAnimating(false);\n      }, animationDuration);\n    }\n\n    return () => {\n      setIsAnimating(false);\n      window.clearTimeout(timeOutId);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, animationDuration]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${-offsetY}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, renderingPeerId, onClose, windowWidth, windowHeight]);\n\n  useLayoutEffect(() => {\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n\n        return;\n      }\n\n      const getScale = () => {\n        if (isMobile) return '1';\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        if (!isMobile) offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        if (!isMobile) offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, isMobile, slideSizes]);\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { archived, active } } = global.stories;\n  const peer = currentPeerId ? selectPeer(global, currentPeerId) : undefined;\n\n  return {\n    byPeerId,\n    peerIds: peer?.areStoriesHidden ? archived : active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"hOwWWII6h241MvvB87N5\",\"viewsList\":\"hOwWWII6h241MvvB87N5\",\"views-list-loading\":\"ZaMMMcb_gGs7nmClMvzj\",\"viewsListLoading\":\"ZaMMMcb_gGs7nmClMvzj\",\"info\":\"Yt7QHLaCNE1N3OSWXa_n\",\"centeredInfo\":\"vKqMQNiuvK152lO__j16\",\"view-reaction\":\"x77ctFpUWd2rG2IUxz7y\",\"viewReaction\":\"x77ctFpUWd2rG2IUxz7y\",\"header\":\"oGYCTCHvXEkdIBMd0dHh\",\"content\":\"NfqCS7dx9c9nxYXZc3p2\",\"top-button\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"topButton\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"contact-filter\":\"RnVt9sK0OgnrHADARI9k\",\"contactFilter\":\"RnVt9sK0OgnrHADARI9k\",\"selected\":\"deHea5ii46_J57LhYmaj\",\"sort\":\"Mq_j5_FRMS06qJcPCwmC\",\"sort-button\":\"BYQ1X4iADCMrIUqdd3Lt\",\"sortButton\":\"BYQ1X4iADCMrIUqdd3Lt\",\"icon-sort\":\"yq5P30VXV4gSKmSHmXLL\",\"iconSort\":\"yq5P30VXV4gSKmSHmXLL\",\"icon-down\":\"mjcXdhEuASJWWO5Cqlxq\",\"iconDown\":\"mjcXdhEuASJWWO5Cqlxq\",\"search\":\"vs1AYj85WQxzI646EBZt\",\"bottom-info\":\"sWTOVQoWoeNAu2G8kVOl\",\"bottomInfo\":\"sWTOVQoWoeNAu2G8kVOl\",\"scrolled\":\"knxco2DJ3lthvQo2SOG6\",\"footer\":\"RqsPFLpLbJYFm50JYSiw\",\"closeButton\":\"DonddSsGK4E9DM8F5ctU\",\"opacity-fade-in\":\"h15igx036PH4epiXwUBg\",\"opacityFadeIn\":\"h15igx036PH4epiXwUBg\",\"fadeIn\":\"T9DzW6zCmxNgXv1YaUji\",\"blocked\":\"EVxErnsRszao77tgwSaA\",\"check\":\"HbQucamQwAYpvNnTqHVM\",\"menuBubble\":\"Y3KJ1StmiJpvbpeqbMuv\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiStoryView, ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiStoryView;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\nconst StoryView = ({\n  storyView,\n  user,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat, closeStoryViewer, unblockUser, blockUser, deleteContact, updateStoryView,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    closeStoryViewer();\n\n    setTimeout(() => {\n      openChat({ id: storyView.userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    const { userId, areStoriesBlocked, isUserBlocked } = storyView;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId, isOnlyStories: true });\n            updateStoryView({ userId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId, isOnlyStories: true });\n            updateStoryView({ userId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId });\n            updateStoryView({ userId, isUserBlocked: false });\n          } else {\n            blockUser({ userId });\n            updateStoryView({ userId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, user]);\n\n  return (\n    <ListItem\n      key={storyView.userId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => handleClick()}\n      rightElement={storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      <PrivateChatInfo\n        userId={storyView.userId}\n        noStatusOrTyping\n        status={formatDateAtTime(lang, storyView.date * 1000)}\n        statusIcon=\"message-read\"\n        withStory\n        forceShowSelf\n      />\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const user = selectUser(global, storyView.userId);\n\n  return {\n    user,\n    availableReactions: global.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  viewsById?: Record<string, ApiStoryView>;\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  viewsById,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViews, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const viewsCount = story?.viewsCount || 0;\n  const reactionsCount = story?.reactionsCount || 0;\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViewIds = useMemo(() => {\n    if (!viewsById) {\n      return undefined;\n    }\n\n    return Object.values(viewsById)\n      .sort(prepareComparator(areReactionsFirst))\n      .map((view) => view.userId);\n  }, [areReactionsFirst, viewsById]);\n\n  const placeholderCount = !sortedViewIds?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViewIds?.length) && sortedViewIds!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViews({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViewIds?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViewIds?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViewIds}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViewIds?.map((id) => (\n            <StoryView key={id} storyView={viewsById![id]} />\n          ))}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiStoryView, b: ApiStoryView) => {\n    if (areReactionsFirst) {\n      if (a.reaction && !b.reaction) {\n        return -1;\n      }\n      if (!a.reaction && b.reaction) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, viewsById, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    viewsById,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePrevious(isOpen);\n  const prevBestImageData = usePrevious(bestImageData);\n  const prevPeerId = usePrevious(peerId);\n  const prevOrigin = usePrevious(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  chatsById?: Record<string, ApiChat>;\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  chatsById,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const topicsResult = forumId ? chatsById?.[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById![forumId!], topic.id)\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [chatsById, forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById?.[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatType } from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n  sortChatIds,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatsById: Record<string, ApiChat>;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  chatsById,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), chatsById, undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, chatsById, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      chatsById={chatsById}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsById,\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      chatsById,\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n}) => {\n  const {\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingIsStory = usePrevious(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      setForwardChatOrTopic({ chatId: recipientId, topicId: threadId });\n    }\n  }, [currentUserId, isManyMessages, isStory, lang]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pZFkNPeaXsO10mdITSZR\",\"buttons\":\"bYI0Nm410CJjgAhnH3EL\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiGeoPoint } from '../../../api/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  geoPoint?: ApiGeoPoint;\n  zoom?: number;\n};\n\nconst OpenMapModal = ({ geoPoint, zoom }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          Open Street Maps\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"jztdH6qO5uz3c2muOpPT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  urlAuth?: TabState['urlAuth'];\n  currentUserName?: string;\n};\n\nconst UrlAuthModal: FC<OwnProps> = ({\n  urlAuth, currentUserName,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(urlAuth, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (urlAuth?.url && isLoginChecked) {\n      const acceptAction = urlAuth.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    urlAuth, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(urlAuth?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, currentUserName]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(UrlAuthModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused, unmarkTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(selectedDate);\n  }, [onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <Button onClick={handleSubmit}>\n          {submitLabel}\n        </Button>\n        {secondButtonLabel && (\n          <Button onClick={onSecondButtonClick} isText>\n            {secondButtonLabel}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useWindowSize from '../../../../hooks/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const reloadFrame = useCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  }, [ref]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  webApp?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  webApp,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = webApp || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(webApp!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, setWebAppPaymentSlug, webApp]);\n\n  const handleToggleClick = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: !attachBot,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [hideCloseModal, isOpen, markUnloaded]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { webApp }): StateProps => {\n    const { botId } = webApp || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CWJDTp88gsPYaq6de8yn\",\"more-button\":\"_VJv8UKGVoUJKFRjrn8B\",\"moreButton\":\"_VJv8UKGVoUJKFRjrn8B\",\"close-icon\":\"l4SsaN4Dx0bKGb83CYhA\",\"closeIcon\":\"l4SsaN4Dx0bKGb83CYhA\",\"state-back\":\"jscxQ3PMmXnE2oWrMVBY\",\"stateBack\":\"jscxQ3PMmXnE2oWrMVBY\",\"loading-spinner\":\"ElvN45roGsPDzZuJjk3H\",\"loadingSpinner\":\"ElvN45roGsPDzZuJjk3H\",\"hide\":\"L441lq9G5_x3lNeWNFlB\",\"frame\":\"uFAepVSf6dgEREGs6Kio\",\"with-button\":\"ruOZRuUOenMeQp5WIpy0\",\"withButton\":\"ruOZRuUOenMeQp5WIpy0\",\"main-button\":\"QoAHIcQHa0NNmR8fma3w\",\"mainButton\":\"QoAHIcQHa0NNmR8fma3w\",\"visible\":\"OViz2KN7MjYjs1f5Z3JN\",\"hidden\":\"IEfxtMw7c1U4BRBpulWm\",\"main-button-spinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"mainButtonSpinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"web-app-popup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"webAppPopup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"without-title\":\"GuFs2OL_xXL5ODh10kTj\",\"withoutTitle\":\"GuFs2OL_xXL5ODh10kTj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiAttachBot;\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  bot,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {bot?.isInactive && bot.isForSideMenu && (\n        renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PEnE7xWTMwTPGmhubmj6\",\"text\":\"U4UYSH7uHW3k4FlqBefm\",\"header\":\"Jdlm3dtJ8gOIY0x0u2d4\",\"description\":\"cE44My72bdvMJna9mgoc\",\"icon\":\"mxF3NdPgAi_H0ZFgNEtw\",\"font-icon\":\"r6_o8xZKIo11QFFYm2Hv\",\"fontIcon\":\"r6_o8xZKIo11QFFYm2Hv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  onClick?: VoidFunction;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\nconst PremiumFeatureItem: FC<OwnProps> = ({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  onClick,\n}) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={onClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NtJc4bt94t9fklIWC6wF\",\"arrow\":\"_rzXza87NHdAMH2TDKul\",\"right\":\"J4UYbae0Frt01jIavpB0\",\"arrow-hidden\":\"qd3rvhZma3JJmhdt07Ig\",\"arrowHidden\":\"qd3rvhZma3JJmhdt07Ig\",\"dot\":\"eCgEFkp07vgaUGwymYAQ\",\"medium\":\"AIpVWjJc47egZ8ATaC3n\",\"small\":\"MnRKztu0OZTyIywGLMc6\",\"invisible\":\"boSFbatyzatdw70J7mpu\",\"active\":\"nlCmVncFkKVtsawWqcfw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qiAkShre9E6R3S_XXL9S\",\"floating-badge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floatingBadge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floating-badge-triangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floatingBadgeTriangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floating-badge-icon\":\"y7T3FpaFXDsnPGk6dPmg\",\"floatingBadgeIcon\":\"y7T3FpaFXDsnPGk6dPmg\",\"text\":\"X0zFAEpRoPWj1yE904xR\",\"floating-badge-value\":\"rQ6ZdKdWi4HVydX6qhWS\",\"floatingBadgeValue\":\"rQ6ZdKdWi4HVydX6qhWS\",\"left-text\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"leftText\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-text\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightText\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-value\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightValue\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"left-value\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"leftValue\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"line\":\"slESyAvUqizX4_EIX_yg\",\"left\":\"lQi3xqxjvl2Owb4ES2SM\",\"right\":\"Dcv5uphsn2Sxpg3ROS_u\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jeeOV_UYyl50GFLOzjGC\",\"title\":\"SVqE3gr2ekQUWfFT_Mvg\",\"description\":\"mCBNPstzrSlOQsz6rOtE\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dVn5gk50tXn1EiI4kJFJ\",\"sticker\":\"PIYKt4xxOUBpRjRu0b4q\",\"effect-sticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\",\"effectSticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: NoneToVoidFunction;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useCallback(() => {\n    onClick(realIndex);\n  }, [onClick, realIndex]);\n\n  const handleEnded = useCallback(() => {\n    inanimate();\n    onEnded();\n  }, [inanimate, onEnded]);\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useCallback((i: number) => {\n    setOffset(-i);\n  }, []);\n\n  const handleEnded = useCallback(() => {\n    setTimeout(() => {\n      setOffset((current) => cycleRestrict(renderedStickers.length, current + 1));\n    }, ENDED_DELAY);\n  }, [renderedStickers.length]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((l, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={l}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dfgGrPUU6AC7NazJh8Ut\",\"header\":\"Y9bbyTXeZIKzoa8wtnkn\",\"circle\":\"eTSbeIbZl_YRbAPcqHhQ\",\"title\":\"me5CfUvQ6RleMxtFjIaR\",\"features\":\"ssjliTyWlTUXFLdz5NJd\",\"mobile\":\"ckFVT8AXlwgCejTXWdfQ\",\"scrolled\":\"T0nWA26c2Q0j0Z_PpexK\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { DPR } from '../../../../util/windowEnvironment';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLang from '../../../../hooks/useLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * DPR * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n    });\n  }, []);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE / DPR;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WHiQiGCtWfjSlEysEelB\",\"wrapper\":\"WUpKHfqLbeZmhfYqqiko\",\"down\":\"MiGmL4xqBPkxmLim4Ai0\",\"frame\":\"xuhT9JHpFkVsTcUWeh4L\",\"video\":\"sLLJqCkdSug4bzEQrACs\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QfngIllOc1THaTQiJf7h\",\"button\":\"n8tTb600de2uZKGkyw67\",\"button-content\":\"eZLuJy6dL4ekVllaRcCm\",\"buttonContent\":\"eZLuJy6dL4ekVllaRcCm\",\"back-button\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"backButton\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"white-back-button\":\"E42Dy7DFLAxvj8HE4GAD\",\"whiteBackButton\":\"E42Dy7DFLAxvj8HE4GAD\",\"content\":\"JMdhJYW94Mas4JDye486\",\"frame\":\"fEQZ2fyO9g6L1v8QJUCJ\",\"slide\":\"xkC9BFxv7RkSwbPe4RMb\",\"limits\":\"zngeFAwxdlVJZY876fHc\",\"stories\":\"uOZMPO0FyBVTsM6ACXDw\",\"limits-content\":\"le7Qv9QkHlO3qdK0Hs_g\",\"limitsContent\":\"le7Qv9QkHlO3qdK0Hs_g\",\"header\":\"Mw81cOCIGy8KGn9VokFA\",\"no-header-border\":\"tRvcw256KSHRqgSj5uGX\",\"noHeaderBorder\":\"tRvcw256KSHRqgSj5uGX\",\"preview\":\"EXGFQjwHmQxjvMLbYtS9\",\"title\":\"eEYA2lXPy_DUKe8JKHiP\",\"description\":\"TVO7LjkV_yHUGIu5PXCA\",\"footer\":\"EKr_FVmiDSwhUxouhaqB\",\"no-footer-border\":\"H8z5Q6gsuqeCy82HFlyX\",\"noFooterBorder\":\"H8z5Q6gsuqeCy82HFlyX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPremiumPromo } from '../../../api/types';\nimport type { ApiLimitType, GlobalState } from '../../../global/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n};\n\nexport const PREMIUM_FEATURE_SECTIONS = [\n  'stories',\n  'double_limits',\n  'more_upload',\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'infinite_reactions',\n  'premium_stickers',\n  'animated_emoji',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\nconst PREMIUM_BOTTOM_VIDEOS: string[] = [\n  'faster_download',\n  'voice_to_text',\n  'advanced_chat_management',\n  'infinite_reactions',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\ntype ApiLimitTypeWithoutUpload = Exclude<ApiLimitType, 'uploadMaxFileparts' | 'chatlistInvites' | 'chatlistJoined'>;\n\nconst LIMITS_ORDER: ApiLimitTypeWithoutUpload[] = [\n  'channels',\n  'dialogFolderPinned',\n  'channelsPublic',\n  'savedGifs',\n  'stickersFaved',\n  'aboutLength',\n  'captionLength',\n  'dialogFilters',\n  'dialogFiltersChats',\n];\n\nconst LIMITS_TITLES: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  onBack: VoidFunction;\n  initialSection: string;\n  promo: ApiPremiumPromo;\n  onClickSubscribe: (startParam?: string) => void;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  onBack,\n  onClickSubscribe,\n  isPremium,\n  limits,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  function handleClick() {\n    onClickSubscribe(initialSection);\n  }\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = e.currentTarget;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n    e.currentTarget.style.setProperty('--scroll-progress', progress.toString());\n    e.currentTarget.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex}`);\n    prevElement?.classList.toggle('reverse', false);\n    reverseElement?.classList.toggle('reverse', true);\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = PREMIUM_FEATURE_SECTIONS.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, initialSection, prevInitialSection, startScrolling, stopScrolling]);\n\n  const handleSelectSlide = useCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  }, [startScrolling, stopScrolling]);\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {PREMIUM_FEATURE_SECTIONS.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        <Button\n          className={buildClassName(styles.button)}\n          isShiny={!isPremium}\n          withPremiumGradient={!isPremium}\n          onClick={isPremium ? onBack : handleClick}\n        >\n          {isPremium\n            ? lang('OK')\n            : lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JJNHc_FZuydBNBIHK9xC\",\"transition\":\"Q05gUm0HCMtSoeX2HVGw\",\"button\":\"Fb3VVHNrypZ3lhYfSVI_\",\"main\":\"E9_LJ9RqAHTj8h84EROt\",\"logo\":\"Vaf41aTAoSwl_e_cZhah\",\"status-emoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"statusEmoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"header-text\":\"J2z1gqvfQu5kqV_UP8US\",\"headerText\":\"J2z1gqvfQu5kqV_UP8US\",\"description\":\"PXg8sU2cfdeysJXctlpB\",\"list\":\"LlPAfJpL066su4P2NFmh\",\"no-button\":\"wpPtJKCqTdOGkKoh7KTo\",\"noButton\":\"wpPtJKCqTdOGkKoh7KTo\",\"header\":\"Rwuf1efaEfZ13AD5XbCB\",\"hidden-header\":\"NV7fN3j69oFZEJu7ejG8\",\"hiddenHeader\":\"NV7fN3j69oFZEJu7ejG8\",\"close-button\":\"TyuYAZecpI2K_1i3B5XO\",\"closeButton\":\"TyuYAZecpI2K_1i3B5XO\",\"premium-header-text\":\"jA_DV7G5VJo8xGOe0otF\",\"premiumHeaderText\":\"jA_DV7G5VJo8xGOe0otF\",\"footer-text\":\"yVkdTScCEhH3EQMQiA42\",\"footerText\":\"yVkdTScCEhH3EQMQiA42\",\"primary-footer-text\":\"MQbFSG2o_R8rjKDsqs8R\",\"primaryFooterText\":\"MQbFSG2o_R8rjKDsqs8R\",\"footer\":\"FApXoTPpasib6Np5Uxpt\",\"stickerSetText\":\"CCRIHzjKzzj6y3nYJQKk\",\"stickerSetLink\":\"_G_ogp7ec2JUxZUhoaAi\",\"stickerSetLinkIcon\":\"vJ2GKZFltN22CJDw5Bdu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_SECTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<string, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  isClosing?: boolean;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: string;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: string[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isClosing,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<string | undefined>(initialSection);\n\n  const handleOpen = useCallback((section: string | undefined) => {\n    return () => {\n      setCurrentSection(section);\n    };\n  }, []);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  function handleClickWithStartParam(startParam?: string) {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  }\n\n  const handleClick = useLastCallback(() => {\n    handleClickWithStartParam();\n  });\n\n  const showConfetti = useCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n      });\n    }\n  }, [isOpen, requestConfetti]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      // eslint-disable-next-line react/jsx-no-bind\n      onCloseAnimationEnd={() => closePremiumModal({ isClosed: true })}\n      onClose={closePremiumModal}\n      isOpen={isOpen && !isClosing}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    onClick={handleOpen(section)}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleOpen(undefined)}\n            promo={promo}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isClosing: premiumModal?.isClosing,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"c43s0Q6_xgGlM8sZxQ7Q\",\"active\":\"PjYaF42Oe55WgPpTP6Od\",\"input\":\"r03M3Tzd52_D2GCAdabK\",\"content\":\"oL_26LDnHDwJRxqKF1Kn\",\"month\":\"JmEuBQ4mFzu1MiFV5qSB\",\"perMonth\":\"hssGd7AUhDhhG2_aXqe9\",\"amount\":\"mhc9AgOUiNT2QMcErpQe\",\"discount\":\"WCXGWHYNQh8lg2rIWehC\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './GiftOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  onChange: (month: number) => void;\n};\n\nconst GiftOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount, onChange,\n}) => {\n  const lang = useLang();\n\n  const { months, amount, currency } = option;\n  const perMonth = Math.floor(amount / months);\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label className={buildClassName(styles.wrapper, checked && styles.active)} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"gift_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>{lang('Months', months)}</div>\n        <div className={styles.perMonth}>\n          {lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n          {Boolean(discount) && (\n            <span className={styles.discount} title={lang('GiftDiscount')}> &minus;{discount}% </span>\n          )}\n        </div>\n        <div className={styles.amount}>{formatCurrency(amount, currency, lang.code)}</div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiftOption);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPremiumGiftOption, ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport GiftOption from './GiftOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  gifts?: ApiPremiumGiftOption[];\n  monthlyCurrency?: string;\n  monthlyAmount?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  user,\n  gifts,\n  monthlyCurrency,\n  monthlyAmount,\n}) => {\n  const { openPremiumModal, closeGiftPremiumModal, openUrl } = getActions();\n\n  const lang = useLang();\n  const renderedUser = useCurrentOrPrev(user, true);\n  const renderedGifts = useCurrentOrPrev(gifts, true);\n  const [selectedOption, setSelectedOption] = useState<number | undefined>();\n  const firstGift = renderedGifts?.[0];\n  const fullMonthlyAmount = useMemo(() => {\n    if (!renderedGifts || renderedGifts.length === 0 || !firstGift) {\n      return undefined;\n    }\n\n    const cheaperGift = renderedGifts.reduce((acc, gift) => {\n      return gift.amount < firstGift?.amount ? gift : firstGift;\n    }, firstGift);\n\n    return cheaperGift.currency === monthlyCurrency && monthlyAmount\n      ? monthlyAmount\n      : Math.floor(cheaperGift.amount / cheaperGift.months);\n  }, [firstGift, renderedGifts, monthlyAmount, monthlyCurrency]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedOption(firstGift?.months);\n    }\n  }, [firstGift?.months, isOpen]);\n\n  const selectedGift = useMemo(() => {\n    return renderedGifts?.find((gift) => gift.months === selectedOption);\n  }, [renderedGifts, selectedOption]);\n\n  const handleSubmit = useCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    closeGiftPremiumModal();\n    openUrl({ url: selectedGift.botUrl });\n  }, [closeGiftPremiumModal, openUrl, selectedGift]);\n\n  const handlePremiumClick = useCallback(() => {\n    openPremiumModal();\n  }, [openPremiumModal]);\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  return (\n    <Modal\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <Avatar\n          peer={renderedUser}\n          size=\"jumbo\"\n          className={styles.avatar}\n        />\n        <h2 className={styles.headerText}>\n          {lang('GiftTelegramPremiumTitle')}\n        </h2>\n        <p className={styles.description}>\n          {renderText(\n            lang('GiftTelegramPremiumDescription', getUserFirstOrLastName(renderedUser)),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n\n        <div className={styles.options}>\n          {renderedGifts?.map((gift) => (\n            <GiftOption\n              key={gift.amount}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={gift.months === selectedOption}\n              onChange={setSelectedOption}\n            />\n          ))}\n        </div>\n\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      <Button className={styles.button} isShiny disabled={!selectedOption} onClick={handleSubmit}>\n        {lang(\n          'GiftSubscriptionFor',\n          selectedGift && formatCurrency(Number(selectedGift.amount), selectedGift.currency, lang.code),\n        )}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { forUserId, monthlyCurrency, monthlyAmount } = selectTabState(global).giftPremiumModal || {};\n  const user = forUserId ? selectUser(global, forUserId) : undefined;\n  const gifts = user ? selectUserFullInfo(global, user.id)?.premiumGifts : undefined;\n\n  return {\n    user,\n    gifts,\n    monthlyCurrency,\n    monthlyAmount: monthlyAmount ? Number(monthlyAmount) : undefined,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"K80So3B9potKGNvwdtYE\",\"closeButton\":\"dxx424IZDNuP1OLbUIve\",\"avatar\":\"qJgJ7R5NJVmAxBjT5LxT\",\"headerText\":\"eqCNa8zBoMroKcepfXyE\",\"description\":\"MtYhgDChavNfKIUAJPzt\",\"premiumFeatures\":\"J0hST5xsC45ZolfGpbDc\",\"options\":\"HyfHjS1vAds31eFcSpDg\",\"button\":\"sSXm9RjIQSsVFi0D1nEd\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\n\nimport Icon from '../../../common/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iz5RJvcQyNNDQzKfXQbN\",\"limit-compare\":\"az3lXhmlMfZfIQ_81jog\",\"limitCompare\":\"az3lXhmlMfZfIQ_81jog\",\"limit-badge\":\"womlEQglVV1w8ltVa6PQ\",\"limitBadge\":\"womlEQglVV1w8ltVa6PQ\",\"limit-value\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limitValue\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limit-icon\":\"q8SgjqQqlOVMSofzhdwh\",\"limitIcon\":\"q8SgjqQqlOVMSofzhdwh\",\"dialog-buttons\":\"DgRFl7StCs4fhROb7CKH\",\"dialogButtons\":\"DgRFl7StCs4fhROb7CKH\",\"x2\":\"MeIsw1Fm4WBqIZzbpS10\",\"button-icon\":\"BW05mF5k9uq5qBi_BYzg\",\"buttonIcon\":\"BW05mF5k9uq5qBi_BYzg\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z2hl3sxq0tzStr0JpMxi\",\"video\":\"h6jE3TEaqlzbs0ro0J2_\",\"image\":\"ivo3DVINrp81Kb9ho9kA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, thumbCustomEmojiId, isLottie, isVideos: isVideo,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToStatic = stickerSet.stickers && isVideo && !IS_WEBM_SUPPORTED;\n  const staticHash = shouldFallbackToStatic && getStickerPreviewHash(stickerSet.stickers![0].id);\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || isLottie) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        isLottie ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (isVideo && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xW0m4eR0ukCfRp6WS_Qd\",\"selected\":\"XTCJlnWtVba28wuDmeBN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation) : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionUniqueKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID && stickerSet.id !== POPULAR_SYMBOL_SET_ID;\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-name', withAddSetButton && 'symbol-set-name-external')}>\n            {isLocked && <i className=\"symbol-set-locked-icon icon icon-lock-badge\" />}\n            {stickerSet.title}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <i className=\"symbol-set-remove icon icon-close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('symbol-set-container shared-canvas-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <i className=\"icon icon-premium\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionUniqueKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gsyAr7lPlzHWUF_aYaVa\",\"main\":\"cnWk4tq3tmB7r08ScyxQ\",\"main_customEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"mainCustomEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"header\":\"x0Qtu0yjl4v02fLLyxV1\",\"headerWithBorder\":\"m4MXEae1lmdJZV64zN6b\",\"stickerCover\":\"A5Fetmgo_VQRMWxFTV_v\",\"activated\":\"yiTAGOkL3Hgb0VXRPy46\",\"pickerDisabled\":\"jNEbrwsYAlEp67HG75uy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  CHAT_STICKER_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    if (!addedCustomEmojiIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const setIdsToDisplay = unique(addedCustomEmojiIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <i className=\"icon icon-recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      recentReactions,\n      topReactions,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      availableReactions: isReactionPicker ? global.availableReactions : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z0kj3ATb_u7kBMYsqUpx\",\"activated\":\"sGL0teusRxo4NrXceldd\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"XWSv0Pf1SKleWNyX04yO\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle } from '../../../global/helpers';\nimport { selectChat, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { formatDateInFuture } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  info: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  boostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  info,\n  chat,\n  boostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isOpen = Boolean(info);\n\n  const lang = useLang();\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!boostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, boostedChat);\n  }, [boostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!info?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      level, currentLevelBoosts, hasMyBoost,\n    } = info.boostStatus;\n\n    const firstBoost = info?.myBoosts && getFirstAvailableBoost(info.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = info?.myBoosts && !areAllBoostsInChannel(info.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n    } = getBoostProgressInfo(info.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n    const isJustUpgraded = boosts === currentLevelBoosts && hasBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n    const currentStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level);\n    const nextLevelStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level + 1);\n\n    const modalTitle = hasBoost ? lang('YouBoostedChannel2', chatTitle)\n      : level === 0 ? lang('lng_boost_channel_title_first') : lang('lng_boost_channel_title_more');\n\n    let description: string | undefined;\n    if (level === 0) {\n      if (!hasBoost) {\n        description = lang('ChannelBoost.EnableStoriesForChannelText', [chatTitle, moreBoosts]);\n      } else {\n        description = lang('ChannelBoost.EnableStoriesMoreRequired', moreBoosts);\n      }\n    } else if (isJustUpgraded) {\n      if (level === 1) {\n        description = lang('ChannelBoost.EnabledStoriesForChannelText');\n      } else {\n        description = lang('ChannelBoost.BoostedChannelReachedLevel', [level, currentStoriesPerDay]);\n      }\n    } else {\n      description = lang('ChannelBoost.HelpUpgradeChannelText', [chatTitle, moreBoosts, nextLevelStoriesPerDay]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels,\n    };\n  }, [chat, chatTitle, info, lang]);\n\n  const isBoostDisabled = !info?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== info?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isBoosted && canBoostMore ? 'BoostingBoostAgain' : 'ChannelBoost.BoostChannel')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={boostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {boost?.cooldownUntil && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const chat = info && selectChat(global, info?.chatId);\n    const firstBoost = info?.myBoosts && getFirstAvailableBoost(info.myBoosts, info.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"qcaMioaPQuA3J2DdyYu6\",\"modal\":\"Y9MSWZPXcoywEGAVkIGe\",\"loading\":\"rTu4qT5HMT5xEA0iBnQZ\",\"description\":\"kR5ezaKOBrU14CVmMWM0\",\"chip\":\"bwLqkQdHNWlFwAxcZAQs\",\"replaceModal\":\"YoELl5NSlfGHhh0TV09C\",\"replaceModalContent\":\"l39rkylGwQCNJD7zFGNp\",\"avatarContainer\":\"tfMx99CifV4hYxg9MEqE\",\"arrow\":\"f_dXofOOgJ37seFwxD55\",\"boostedWrapper\":\"Ylfk1xu6gEHr_yzPetrS\",\"boostedMark\":\"WDTDg5KQT796SQTEgPpx\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ZUq4brODsgpvaUsllahW\",\"clickable\":\"JJOxaAdgPS8KouI7ApuA\",\"title\":\"IHmQ6rmwk9lGyiwoN35E\",\"table\":\"fjpN5AKMBNcmc1B8ZMV1\",\"chat-item\":\"nAG11HvcI33XcEk6iXcE\",\"chatItem\":\"nAG11HvcI33XcEk6iXcE\",\"logo\":\"bEdCD7KzsBds3j71NvqQ\",\"centered\":\"uLJj2XtrzUYpv4M5h2yc\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport LinkField from '../../common/LinkField';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  modal: TabState['giftCodeModal'];\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n}: OwnProps) => {\n  const {\n    closeGiftCodeModal, openChat, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    closeGiftCodeModal();\n  });\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  function renderContent() {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    return (\n      <>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n        <table className={styles.table}>\n          <tr>\n            <td className={styles.title}>{lang('BoostingFrom')}</td>\n            <td>\n              {info.fromId ? (\n                <PickerSelectedItem\n                  peerId={info.fromId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={info.fromId}\n                  onClick={handleOpenChat}\n                />\n              ) : lang('BoostingNoRecipient')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingTo')}\n            </td>\n            <td>\n              {info.toId ? (\n                <PickerSelectedItem\n                  peerId={info.toId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={info.toId}\n                  onClick={handleOpenChat}\n                />\n              ) : lang('BoostingNoRecipient')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingGift')}\n            </td>\n            <td>\n              {lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingReason')}\n            </td>\n            <td className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n              {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n                : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingDate')}\n            </td>\n            <td>\n              {formatDateTimeToString(info.date * 1000, lang.code, true)}\n            </td>\n          </tr>\n        </table>\n        <span className={styles.centered}>\n          {renderText(\n            info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n              : lang('BoostingSendLinkToAnyone'),\n            ['simple_markdown'],\n          )}\n        </span>\n        <Button onClick={handleButtonClick}>\n          {canUse ? lang('BoostingUseLink') : lang('Close')}\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      isSlim\n      title={lang('lng_gift_link_title')}\n      contentClassName={styles.content}\n      onClose={closeGiftCodeModal}\n    >\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(GiftCodeModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"UwWVjbf4Ptl9vrrJPZon\",\"picker-wrapper\":\"h97ntomDmLCVEoTjzCHi\",\"pickerWrapper\":\"h97ntomDmLCVEoTjzCHi\",\"picker-header\":\"Wz6C5rszlwOTdImks0cL\",\"pickerHeader\":\"Wz6C5rszlwOTdImks0cL\",\"picker-header-info\":\"OwAqbtXus5KwSxvNBKyu\",\"pickerHeaderInfo\":\"OwAqbtXus5KwSxvNBKyu\",\"selection-toggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"selectionToggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"foldersWrapper\":\"HFZAaai7bs4X21rCRSyQ\",\"folders\":\"Xrr7zKG4KrVimUxojATI\",\"folder\":\"_7YreahCXXe3zGG5sywZA\",\"button-text\":\"K7T3MH1zL9aRmVFtTBBu\",\"buttonText\":\"K7T3MH1zL9aRmVFtTBBu\",\"button-badge\":\"_Z6IH9MHEorrdl7VDqJ2\",\"buttonBadge\":\"_Z6IH9MHEorrdl7VDqJ2\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  info?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  info,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(info);\n  const renderingInfo = usePrevious(info) || info;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const { invite, removal } = info || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('SponsoredMessageInfo')}\n    >\n      <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n      <p>\n        <SafeLink\n          url={lang('SponsoredMessageAlertLearnMoreUrl')}\n          text={lang('SponsoredMessageAlertLearnMoreUrl')}\n        />\n      </p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Close')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const lang = useLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"phK_DdEImRiGA8z2FwyB\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionUniqueKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionUniqueKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionUniqueKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"syvgWO0b6lIEPd3iu1TA\",\"list-item\":\"_nKqEo7SgYwpaclSSCIx\",\"listItem\":\"_nKqEo7SgYwpaclSSCIx\",\"title\":\"R7LNh8TMqiktRuTuESsf\",\"subtitle\":\"so4259O2hcdGOxENXdqc\",\"languages\":\"DiSTH_4CZnPK8Dh8Tpfq\"};","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads']['byChatId'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openChat } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      openChat({ id: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { getPrivateChatUserId, isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"large\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"large\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport {\n  filterUsersByName,\n  sortChatIds,\n} from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  localContactIds?: string[];\n  localChatIds?: string[];\n  localUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  localContactIds,\n  localChatIds,\n  localUserIds,\n  globalChatIds,\n  globalUserIds,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2)) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(localContactIds || []),\n    ];\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    return [\n      ...sortChatIds(unique([\n        ...(foundContactIds || []),\n        ...(localChatIds || []),\n        ...(localUserIds || []),\n      ]), chatsById, undefined, currentUserId ? [currentUserId] : undefined),\n    ];\n  }, [searchQuery, currentUserId, localContactIds, lang, localChatIds, localUserIds, chatsById]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return sortChatIds(\n      unique([...globalChatIds, ...globalUserIds]),\n      chatsById,\n      true,\n    );\n  }, [chatsById, globalChatIds, globalUserIds, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId, searchQuery, searchDate]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n\n    const { userIds: localContactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!localContactIds) {\n      return {\n        chatsById,\n      };\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: localChatIds, userIds: localUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.text?.foundIds;\n\n    return {\n      currentUserId,\n      localContactIds,\n      localChatIds,\n      localUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getMessageDocument } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      mediaId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(1),\n];\n\nconst TRANSITION_RENDER_COUNT = Object.keys(GlobalSearchContent).length / 2;\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    const tab = TABS[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  }, [setGlobalSearchContent]);\n\n  const handleSearchDateSelect = useCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  }, [setGlobalSearchDate]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={chatId ? CHAT_TABS : TABS} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useLang from '../../../../hooks/useLang';\n\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport Checkbox from '../../../ui/Checkbox';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  shouldHideChatTypes?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onSaveFilter: VoidFunction;\n  isActive?: boolean;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  shouldHideChatTypes,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n  onSaveFilter,\n  isActive,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    setIsTouched(true);\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    setIsTouched(true);\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={buildClassName('icon', `icon-${type.icon}`)} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            peerId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll fab-padding-bottom\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <div key=\"header\">\n            {!shouldHideChatTypes && (\n              <>\n                <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('FilterChatTypes')}\n                </h4>\n                {chatTypes.map(renderChatType)}\n                <div className=\"picker-list-divider\" />\n              </>\n            )}\n            <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </div>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { unique } from '../../../../util/iteratees';\n\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport Loading from '../../../ui/Loading';\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      shouldHideChatTypes={shouldHideChatTypes}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n      onSaveFilter={onSaveFilter}\n      isActive={isActive}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"settingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"iconDevice\":\"a633Zas_0v2MAAY277vj\",\"iconDevice__android\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDeviceAndroid\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDevice__apple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDeviceApple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDevice__brave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDeviceBrave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDevice__chrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDeviceChrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDevice__edge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDeviceEdge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDevice__firefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDeviceFirefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDevice__linux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDeviceLinux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDevice__opera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDeviceOpera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDevice__safari\":\"XGWuju_22haQw0Qraor7\",\"iconDeviceSafari\":\"XGWuju_22haQw0Qraor7\",\"iconDevice__samsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDeviceSamsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDevice__ubuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDeviceUbuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDevice__unknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDeviceUnknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDevice__vivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDeviceVivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDevice__windows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDeviceWindows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDevice__xbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"iconDeviceXbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"title\":\"b9iUjEhCpOrQ4dPhn2KU\",\"note\":\"hTTCWbngkwJoEwtGFD9o\",\"date\":\"pUv5oVVNDZ5lBRzNzx3X\",\"box\":\"e32uLjclYAYuxxW1CAex\",\"actionHeader\":\"xwSMwr4aHsrRVIVInLEo\",\"actionName\":\"tSrCe7E_Iom1nGuh2Gs3\",\"headerButton\":\"N0buK669iHOZ1hN_H7Ik\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OeRWKjYQC6t7Uxv8I3j0\",\"avatar\":\"oy_023CG29VsnL9L5ulf\",\"title\":\"bg8UD_Pu2JWogmjuvVXg\",\"note\":\"TgiK64wG1hkOWSiXybQf\",\"box\":\"HSyJbRkyhkeT0s2QA4Ku\",\"action-header\":\"AQX7GM28GeWO4b1bXTNK\",\"actionHeader\":\"AQX7GM28GeWO4b1bXTNK\",\"action-name\":\"_VJHBZTk5qdYimQAoCWe\",\"actionName\":\"_VJHBZTk5qdYimQAoCWe\",\"header-button\":\"hlKLEbMQAsx572pUREy0\",\"headerButton\":\"hlKLEbMQAsx572pUREy0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"n3bBygyO4j5MQyJ70Twt\",\"clear-help\":\"vUICy6ZQCYFSrvvxXe7f\",\"clearHelp\":\"vUICy6ZQCYFSrvvxXe7f\",\"subtitle\":\"t3PK9_nPdL12eMsiMNcM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', className)}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition, unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"obOZMv8VwZgTltdIBhFA\",\"item\":\"lDWs17bpqtGWDX0EJr0y\",\"checkbox\":\"BShBwPkgjleuDsjyfnNk\",\"languages\":\"whcbPSSJLGdGCaY66qfR\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"u8GGVdXgbKUMvoqqs0VJ\",\"header\":\"sPTmRsKHnc3FL9AubUaY\",\"description\":\"YqnFSIc98kYMRge1RrlJ\",\"sortableContainer\":\"pWxbEJm12NZb25lGmdwA\",\"item\":\"AWgYeVXfLin4VAmQzhKQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst MIN_USERNAME_LENGTH = 5;\nconst MAX_USERNAME_LENGTH = 32;\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\nconst USERNAME_REGEX = /^\\D([a-zA-Z0-9_]+)$/;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nfunction isUsernameValid(username: string) {\n  return username.length === 0 || (\n    username.length >= MIN_USERNAME_LENGTH\n    && username.length <= MAX_USERNAME_LENGTH\n    && USERNAME_REGEX.test(username)\n  );\n}\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = isUsernameValid(newUsername);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({})}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/langProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { setLanguage } from '../../../util/langProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void setLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ChatExtra from '../../common/ChatExtra';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n}) => {\n  const {\n    loadProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadProfilePhotos({ profileId: currentUserId });\n    }\n  }, [currentUserId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            userId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            forceShowSelf\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<PremiumIcon withGradient big />}\n            className=\"settings-main-menu-premium\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('lng_settings_ask_ok')}\n        title={lang('AskAQuestion')}\n        text={lang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacyPhoneNumber?: ApiPrivacySettings;\n  privacyLastSeen?: ApiPrivacySettings;\n  privacyProfilePhoto?: ApiPrivacySettings;\n  privacyForwarding?: ApiPrivacySettings;\n  privacyVoiceMessages?: ApiPrivacySettings;\n  privacyGroupChats?: ApiPrivacySettings;\n  privacyPhoneCall?: ApiPrivacySettings;\n  privacyBio?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacyPhoneNumber,\n  privacyLastSeen,\n  privacyProfilePhoto,\n  privacyForwarding,\n  privacyVoiceMessages,\n  privacyGroupChats,\n  privacyPhoneCall,\n  privacyBio,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    showNotification,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleVoiceMessagesClick = useCallback(() => {\n    if (isCurrentUserPremium) {\n      onScreenSelect(SettingsScreens.PrivacyVoiceMessages);\n    } else {\n      showNotification({\n        message: lang('PrivacyVoiceMessagesPremiumOnly'),\n      });\n    }\n  }, [isCurrentUserPremium, lang, onScreenSelect, showNotification]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyLastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyProfilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyBio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyForwarding)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyGroupChats)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          disabled={!isCurrentUserPremium}\n          allowDisabledClick\n          rightElement={!isCurrentUserPremium && <i className=\"icon icon-lock-badge settings-icon-locked\" />}\n          className=\"no-icon\"\n          onClick={handleVoiceMessagesClick}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyVoiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      privacyPhoneNumber: privacy.phoneNumber,\n      privacyLastSeen: privacy.lastSeen,\n      privacyProfilePhoto: privacy.profilePhoto,\n      privacyForwarding: privacy.forwards,\n      privacyVoiceMessages: privacy.voiceMessages,\n      privacyGroupChats: privacy.chatInvite,\n      privacyPhoneCall: privacy.phoneCall,\n      privacyBio: privacy.bio,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"pqiopoENn7dO3E8DQI3e\",\"fallbackPhoto\":\"pqiopoENn7dO3E8DQI3e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      { value: 'contacts', label: lang('P2PContacts') },\n    ];\n    if (hasNobody) {\n      options.push({ value: 'nobody', label: lang('P2PNobody') });\n    }\n    return options;\n  }, [lang, screen]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[]) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return lang('EditAdminAddUsers');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {(primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../config';\nimport { filterChatsByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) setNewSelectedContactIds(selectedContactIds);\n  }, [isActive, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => chatId !== currentUserId);\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedContactIds, onScreenSelect, screen, setPrivacySettings]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { availableReactions, config } = global;\n\n    return {\n      availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, screen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(screen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(screen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(screen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(screen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(screen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).includes(screen.toString())\n      || Object.values(privacyAllowScreens).find((key) => key === true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || screen === SettingsScreens.GeneralChatBackgroundColor\n              || screen === SettingsScreens.GeneralChatBackground\n              || screen === SettingsScreens.QuickReaction\n              || screen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || screen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || screen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={screen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(isScreenActive: boolean, isFrom: boolean, currentKey: SettingsScreens) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, currentKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { filterUsersByName, isUserBot, sortChatIds } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  chatsById,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      chatsById,\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, chatsById, searchQuery, localUserIds, globalUserIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n    const { byId: chatsById } = global.chats;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      chatsById,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransition(isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageTextWithSpoilers,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMessageLocalBlobUrl(message))\n    && CLIPBOARD_ITEM_SUPPORTED;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: () => {\n        onCopyLink();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\n\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './ReactionSelector';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_BUBBLE_EXTRA_WIDTH = 32;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      marginSides: withReactions ? REACTION_BUBBLE_EXTRA_WIDTH : undefined,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && <MenuItem icon=\"reply\" onClick={onReply}>{lang('Reply')}</MenuItem>}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem key={option.label} icon={option.icon} onClick={option.handler}>{lang(option.label)}</MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <MenuItem\n            icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n            onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n            disabled={!canShowReactionsCount && !seenByDatesCount}\n          >\n            <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n              <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {canShowReactionsCount && message.reactors?.count ? (\n                  canShowSeenBy && seenByDatesCount\n                    ? lang(\n                      'Chat.OutgoingContextMixedReactionCount',\n                      [message.reactors.count, seenByDatesCount],\n                    )\n                    : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                ) : (\n                  seenByDatesCount === 1 && seenByRecentPeers\n                    ? renderText(\n                      isUserId(seenByRecentPeers[0].id)\n                        ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                        : (seenByRecentPeers[0] as ApiChat).title,\n                    ) : (\n                      seenByDatesCount\n                        ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                        : lang('Conversation.ContextMenuNoViews')\n                    )\n                )}\n              </span>\n            </span>\n            <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n          </MenuItem>\n        )}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && <MenuItem icon=\"help\" onClick={onAboutAds}>{lang('SponsoredMessageInfo')}</MenuItem>}\n        {isSponsoredMessage && onSponsoredHide && (\n          <MenuItem icon=\"stop\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage, ApiReaction, ApiStickerSet, ApiStickerSetInfo, ApiThreadInfo,\n} from '../../../api/types';\nimport type { MessageListType, TabState } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition } from '../../../types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageLink,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport PinMessageModal from '../../common/PinMessageModal';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  activeDownloads?: TabState['activeDownloads']['byChatId'][number];\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  messageLink?: string;\n};\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  topReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  messageLink,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openChat,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n  } = getActions();\n\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(msg.id);\n      });\n    }\n\n    return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(message.id);\n  }, [activeDownloads, album, message]);\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    updateDraftReplyInfo({ replyToMsgId: message.id });\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openChat({\n      id: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyTextToClipboard(messageLink!);\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n    });\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const activeDownloads = selectActiveDownloads(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const { seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const isOwn = isOwnMessage(message);\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n    const messageLink = selectMessageLink(global, message.chatId, threadId, message.id);\n\n    return {\n      availableReactions: global.availableReactions,\n      topReactions: global.topReactions,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: canCopyNumber || (!isProtected && canCopy),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      messageLink,\n    };\n  },\n)(ContextMenuContainer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  canBuyPremium?: boolean;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps & StateProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onClose,\n  onCloseAnimationEnd,\n  canBuyPremium,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={canBuyPremium ? handleSponsoredHide : undefined}\n        onSponsorInfo={handleSponsorInfo}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canBuyPremium: !selectIsCurrentUserPremium(global) && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SponsoredMessageContextMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isComments) && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qzt_zq5gWHne6P2rw7Wj\",\"sets\":\"Ay41sqhq2QmXdgDHnt2E\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage, selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown, selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openBoostStatistics,\n    openGiftPremiumModal,\n    openChatWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openChatWithInfo({ id: chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    openBoostStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {lang(isPrivate\n                  ? 'DeleteChatUser'\n                  : (canDeleteChat ? 'GroupInfo.DeleteAndExit' : (isChannel ? 'LeaveChannel' : 'Group.LeaveGroup')))}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={chat}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectCurrentTextSearch,\n  selectTabState,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dateFormat';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: number;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (newQuery.length) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {query ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chat = selectCurrentChat(global);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n    };\n  },\n)(MobileSearchFooter));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vUbCal8_iSPkPVzQcz24\",\"wrapper\":\"f4pTNqkRRCFtZzheXcV9\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiChatReactions, ApiReaction } from '../../../api/types';\n\nimport { getReactionUniqueKey, sortReactions } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport ReactionEmoji from '../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionUniqueKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiMessageEntity,\n  ApiReaction, ApiReactionCustomEmoji, ApiSticker, ApiStory, ApiStorySkipped,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getStoryKey, isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectIsCurrentUserPremium,\n  selectPeerStory, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  withCustomReactions,\n  sendAsMessage,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, withCustomReactions]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push('emoticon' in reaction ? reaction.emoticon : reaction.documentId);\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !withCustomReactions && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      <CustomEmojiPicker\n        idPrefix=\"message-emoji-set-\"\n        isHidden={!isOpen || !(withCustomReactions || renderedStoryId)}\n        loadAndPlay={Boolean(isOpen && withCustomReactions)}\n        isReactionPicker\n        className={!withCustomReactions && !renderedStoryId ? styles.hidden : undefined}\n        selectedReactionIds={selectedReactionIds}\n        isTranslucent={isTranslucent}\n        onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n        onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n      />\n      {!withCustomReactions && Boolean(renderedChatId) && (\n        <ReactionPickerLimited\n          chatId={renderedChatId}\n          loadAndPlay={isOpen}\n          onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          selectedReactionIds={selectedReactionIds}\n        />\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    story,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"s4eo5UICU4xBMDvMxWU_\",\"menuContent\":\"Q2c4gWaMXfXzLL_Jbbjr\",\"storyMenu\":\"nwZabdh1rB72Eb1x64Og\",\"onlyReactions\":\"rWa1hIFdrb4U0xFrHLic\",\"hidden\":\"P95Gk2sUhvBJ70LKg_vc\"};","import { fixImageContent } from '../../../../util/parseMessageInput';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZqafRENXro3B4A2UTp9s\",\"preview\":\"FfTpBGrctDEiFLXC4aqP\",\"duration\":\"Igo3Vsou5areTsmh2Ng3\",\"single\":\"ZJNnn8HUzq8cC3WwTzY0\",\"no-grouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"noGrouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"file\":\"QAlzNLWBYdWR4UMMaiGm\",\"overlay\":\"YOoQRXIFINVsu3FFIKR0\",\"action-item\":\"y5JLmIFtCzK05l40rdHJ\",\"actionItem\":\"y5JLmIFtCzK05l40rdHJ\",\"delete-file\":\"Qqp72_dWGSui9ORCN3MT\",\"deleteFile\":\"Qqp72_dWGSui9ORCN3MT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { GIF_MIME_TYPE, SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const canDisplaySpoilerButton = attachment.mimeType !== GIF_MIME_TYPE;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && canDisplaySpoilerButton\n    && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          {canDisplaySpoilerButton && (\n            <i\n              className={buildClassName(\n                'icon',\n                attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n                styles.actionItem,\n              )}\n              onClick={handleSpoilerClick}\n            />\n          )}\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VncEpkgqABgA8MUCarxh\",\"mobile\":\"EBYYWwiG6Uj4Aqt4DKGy\",\"symbolMenuOpen\":\"eVLBe8iLKwjR6B31YwJj\",\"header-border\":\"u08mL9ikB7S0oRZKxvsA\",\"headerBorder\":\"u08mL9ikB7S0oRZKxvsA\",\"attachments\":\"d_uMaJ26HlkCfSn5XiQp\",\"attachments-bottom-padding\":\"DUGHCuTKi7H5d_1_vYqj\",\"attachmentsBottomPadding\":\"DUGHCuTKi7H5d_1_vYqj\",\"caption-wrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"captionWrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"caption-top-border\":\"UrYInfws7roRktEiMxvT\",\"captionTopBorder\":\"UrYInfws7roRktEiMxvT\",\"caption\":\"c4dyk1Emgpla8BvDJMAz\",\"drop-target\":\"iWmxxlUXOjTzbvJzWF8g\",\"dropTarget\":\"iWmxxlUXOjTzbvJzWF8g\",\"hovered\":\"B5wzgwCPupbnO1XB5Rwc\",\"send-wrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"sendWrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"send\":\"eFD46lVH5GCILXEOx9BO\",\"is-pointer-env\":\"Os76p3jpmhB2IWYxXigi\",\"isPointerEnv\":\"Os76p3jpmhB2IWYxXigi\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  attachments: ApiAttachment[];\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean((shouldSendCompressed || shouldForceCompression) && !shouldForceAsFile);\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: a.mimeType !== GIF_MIME_TYPE ? true : undefined,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => a.mimeType !== GIF_MIME_TYPE\n      && !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang('PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang('PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang('PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang('PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        <DropdownMenu\n          className=\"attachment-modal-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n          {hasMedia && (\n            <>\n              {\n                !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                    {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                    {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                  </MenuItem>\n                ))\n              }\n              {isSendingCompressed && hasAnySpoilerable && (\n                hasSpoiler ? (\n                  <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                    {lang('Attachment.DisableSpoiler')}\n                  </MenuItem>\n                ) : (\n                  <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                    {lang('Attachment.EnableSpoiler')}\n                  </MenuItem>\n                )\n              )}\n            </>\n          )}\n          {isMultiple && (\n            shouldSendGrouped ? (\n              <MenuItem\n                icon=\"grouped-disable\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setShouldSendGrouped(false)}\n              >\n                Ungroup All Media\n              </MenuItem>\n            ) : (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                Group All Media\n              </MenuItem>\n            )\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule ? lang('Next') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      list.classList.toggle('overflown', list.scrollHeight > MAX_LIST_HEIGHT);\n      list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter((o) => o.length);\n\n    if (!questionTrimmed || optionsTrimmed.length < 2) {\n      setQuestion(questionTrimmed);\n      if (optionsTrimmed.length) {\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption])) {\n      setHasErrors(true);\n      return;\n    }\n\n    const answers = optionsTrimmed\n      .map((text, index) => ({\n        text: text.trim(),\n        option: String(index),\n        ...(index === correctOption && { correct: true }),\n      }));\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: questionTrimmed,\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseMessageInput(solution.substring(0, MAX_SOLUTION_LENGTH))) || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: index === options.length - 1 }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_ELECTRON_BUILD } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_ELECTRON_BUILD ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy, uniqueByField } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  premiumStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  premiumStickers,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, addedSetIds));\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    if (isCurrentUserPremium) {\n      const addedPremiumStickers = existingAddedSetIds\n        .map(({ stickers }) => stickers?.filter((sticker) => sticker.hasEffect))\n        .flat()\n        .filter(Boolean);\n\n      const totalPremiumStickers = uniqueByField([...addedPremiumStickers, ...premiumStickers], 'id');\n\n      if (totalPremiumStickers.length) {\n        defaultSets.push({\n          id: PREMIUM_STICKER_SET_ID,\n          accessHash: '0',\n          title: lang('PremiumStickers'),\n          stickers: totalPremiumStickers,\n          count: totalPremiumStickers.length,\n        });\n      }\n    }\n\n    if (chatStickerSetId) {\n      const fullSet = stickerSetsById[chatStickerSetId];\n      if (fullSet) {\n        defaultSets.push({\n          id: CHAT_STICKER_SET_ID,\n          accessHash: fullSet.accessHash,\n          title: lang('GroupStickers'),\n          stickers: fullSet.stickers,\n          count: fullSet.stickers!.length,\n        });\n      }\n    }\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds, stickerSetsById, favoriteStickers, recentStickers, isCurrentUserPremium, chatStickerSetId, lang,\n    premiumStickers,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents && !noPopulatedSets && canSendStickers;\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.id === PREMIUM_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === PREMIUM_STICKER_SET_ID ? (\n            <PremiumIcon withGradient big />\n          ) : stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div ref={headerRef} className={headerClassName}>\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(styles.main, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      premiumSet,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      premiumStickers: premiumSet.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  const lang = useLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './BotCommand.scss';\n\ntype OwnProps = {\n  botCommand: ApiBotCommand;\n  bot?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  onClick: (botCommand: ApiBotCommand) => void;\n};\n\nconst BotCommand: FC<OwnProps> = ({\n  withAvatar,\n  focus,\n  botCommand,\n  bot,\n  onClick,\n}) => {\n  return (\n    <ListItem\n      key={botCommand.command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => onClick(botCommand)}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={bot} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{botCommand.command}</span>\n        <span className=\"subtitle\">{renderText(botCommand.description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BotCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport BotCommand from './BotCommand';\n\nimport './BotCommandTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  withUsername,\n  botCommands,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSelect = useLastCallback((botCommand: ApiBotCommand) => {\n    // We need an additional check because tooltip is updated with throttling\n    if (!botCommand.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    handleSendCommand(botCommand);\n    return true;\n  });\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: botCommands,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffect(() => {\n    if (botCommands && !botCommands.length) {\n      onClose();\n    }\n  }, [botCommands, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  const prevCommands = usePrevious(botCommands && botCommands.length ? botCommands : undefined, shouldRender);\n  const renderedCommands = botCommands && !botCommands.length ? prevCommands : botCommands;\n\n  if (!shouldRender || (renderedCommands && !renderedCommands.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'BotCommandTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedCommands && renderedCommands.map((chatBotCommand, index) => (\n        <BotCommand\n          key={`${chatBotCommand.botId}_${chatBotCommand.command}`}\n          botCommand={chatBotCommand}\n          // No need for expensive global updates on users and chats, so we avoid them\n          bot={getGlobal().users.byId[chatBotCommand.botId]}\n          withAvatar\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(BotCommandTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport BotCommand from './BotCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((botCommand: ApiBotCommand) => {\n    sendBotCommand({\n      command: `/${botCommand.command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <BotCommand\n          key={botCommand.command}\n          botCommand={botCommand}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"o7fHB9vMHP_k5l9rZC2R\",\"emojiButton\":\"LzdBMbvLbmND0s2zfaff\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className=\"CustomSendMenu with-menu-transitions\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {canSchedule && onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n      {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n        <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n          {lang('SendWhenOnline')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport {\n  selectChat,\n  selectChatMessages,\n  selectCurrentTextSearch,\n  selectUser,\n} from '../../global/selectors';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n};\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const handleSearchTextMessagesLocal = useCallback(() => {\n    searchTextMessagesLocal();\n  }, [searchTextMessagesLocal]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if (!query || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const global = getGlobal();\n\n      let senderPeer = message.senderId\n        ? selectUser(global, message.senderId) || selectChat(global, message.senderId)\n        : undefined;\n\n      if (!senderPeer && message.forwardInfo) {\n        const { isChannelPost, fromChatId } = message.forwardInfo;\n        const originalSender = isChannelPost && fromChatId ? selectChat(global, fromChatId) : undefined;\n        if (originalSender) senderPeer = originalSender;\n      }\n\n      if (!senderPeer) {\n        return undefined;\n      }\n\n      return {\n        message,\n        senderPeer: senderPeer!,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, viewportIds, messagesById, focusMessage, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderPeer, onClick,\n  }: {\n    message: ApiMessage;\n    senderPeer: ApiPeer;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          peer={senderPeer}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            <FullNameTitle peer={senderPeer} withEmojiStatus />\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const messagesById = selectChatMessages(global, chatId);\n    if (!messagesById) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId) && getCanPostInChat(chat, threadId, isComments);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsRecentMessage as StatisticsRecentMessageType } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport './StatisticsRecentMessage.scss';\n\nexport type OwnProps = {\n  message: ApiMessage & StatisticsRecentMessageType;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ message }) => {\n  const lang = useLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        'StatisticsRecentMessage',\n        Boolean(mediaBlobUrl || mediaThumbnail) && 'StatisticsRecentMessage--with-image',\n      )}\n      onClick={handleClick}\n    >\n      <div className=\"StatisticsRecentMessage__title\">\n        <div className=\"StatisticsRecentMessage__summary\">\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {lang('ChannelStats.ViewsCount', message.views, 'i')}\n        </div>\n      </div>\n\n      <div className=\"StatisticsRecentMessage__info\">\n        <div className=\"StatisticsRecentMessage__date\">\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {message.forwards ? lang('ChannelStats.SharesCount', message.forwards) : 'No shares'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName('media-preview__image', isRoundVideo && 'round')}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiGroupStatistics,\n  ApiMessage,\n  StatisticsGraph,\n  StatisticsRecentMessage as StatisticsRecentMessageType,\n} from '../../../api/types';\n\nimport { selectChat, selectChatFullInfo, selectStatistics } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  statistics,\n  dcId,\n  isGroup,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove('hidden');\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className=\"Statistics__graph hidden\" />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentTopMessages?.length) && (\n        <div className=\"Statistics__messages\">\n          <h2 className=\"Statistics__messages-title\">{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentTopMessages.map((message) => (\n            <StatisticsRecentMessage message={message as ApiMessage & StatisticsRecentMessageType} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n\n    return {\n      statistics, dcId, isGroup,\n    };\n  },\n)(Statistics));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport './StatisticsPublicForward.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsPublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => getMainUsername(data.chat), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className=\"StatisticsPublicForward\" onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div className=\"StatisticsPublicForward__info\">\n        <div className=\"StatisticsPublicForward__title\">\n          {data.title}\n        </div>\n\n        <div className=\"StatisticsPublicForward__views\">\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsPublicForward);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessagePublicForward, ApiMessageStatistics, StatisticsGraph } from '../../../api/types';\n\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsPublicForward from './StatisticsPublicForward';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiMessageStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiMessageStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName('Statistics__graph', !loadedCharts.current.includes(graph) && 'hidden')} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className=\"Statistics__public-forwards\">\n          <h2 className=\"Statistics__public-forwards-title\">{lang('Stats.Message.PublicShares')}</h2>\n\n          {statistics.publicForwardsData!.map((item: ApiMessagePublicForward) => (\n            <StatisticsPublicForward data={item} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">{text}</span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">{renderText(summary.question, ['emoji', 'br'])}</h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qj1MQaLfhumlxACIpkUl\",\"content\":\"ph5g3hCSQ_72FnZ3YkuA\",\"section\":\"bYZBp9H7Ks8tqaBvQm57\",\"general\":\"CSjgq5gkTxM3iZQ9oJ9b\",\"top\":\"sV6D57DhbsFwQhRNzw9K\",\"bottom\":\"pUkmozcBdIn4yWGGPoX1\",\"iconWrapper\":\"JT0__kgf23rGv5BWQF2s\",\"icon\":\"gx85t_IsGh2fgS2yDGtk\",\"clickable\":\"TVwtYFuxdwJH5LZ7yvwu\",\"heading\":\"o9l56jP2uXfAul061gXq\",\"icon-picker\":\"ByQF8Qg3NcYnBCvGwoH0\",\"iconPicker\":\"ByQF8Qg3NcYnBCvGwoH0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isSignaturesShown}\n              label={lang('ChannelSignMessages')}\n              onChange={handleToggleSignatures}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  currentUserId?: string;\n  isChannel: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat.isCreator || chat.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId\n      ? selectChat(global, linkedChatId)\n      : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickPermissions = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateGroup = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickMembers = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  }, [onScreenSelect]);\n\n  const handleTogglePreHistory = useCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  }, [chat.id, chatFullInfo]);\n\n  const handleForumToggle = useCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  }, [chatId, toggleForum]);\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [\n    isBasicGroup, chat.isCreator, chat.id,\n    closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, deleteChat, openChat,\n  ]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'changeInfo'),\n      canBanUsers: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'banUsers'),\n      canInvite: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.availableReactions,\n      canEditForum,\n    };\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postStories\"\n                checked={Boolean(permissions.postStories)}\n                label={lang('EditAdminPostStories')}\n                blocking\n                disabled={getControlIsDisabled('postStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editStories\"\n                checked={Boolean(permissions.editStories)}\n                label={lang('EditAdminEditStories')}\n                blocking\n                disabled={getControlIsDisabled('editStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"deleteStories\"\n                checked={Boolean(permissions.deleteStories)}\n                label={lang('EditAdminDeleteStories')}\n                blocking\n                disabled={getControlIsDisabled('deleteStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, sortChatIds, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement, toggleParticipantsHidden,\n  } = getActions();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      chatsById,\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  }, [closeManagement, noAdmins, onChatMemberSelect, onScreenSelect, openChat]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  }, [setUserSearchQuery]);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useCallback(() => {\n    setDeletingUserId(undefined);\n  }, []);\n\n  const handleToggleParticipantsHidden = useCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  }, [areParticipantsHidden, chatId, toggleParticipantsHidden]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId];\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId];\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(() => {\n    forceUpdate();\n  }, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId];\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.availableReactions,\n      chat,\n    };\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SM3T4awhZJvKn_c8aRuY\",\"description\":\"RWoBZem6PCNMF5hu6Shs\",\"checkout-picture\":\"prUKJGh6W9LIyjSnRbZc\",\"checkoutPicture\":\"prUKJGh6W9LIyjSnRbZc\",\"text\":\"xUG3uFeTiPPFkWHQELCc\",\"checkout-title\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkoutTitle\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkout-description\":\"LqaZe1TRdNI17BEa1gcl\",\"checkoutDescription\":\"LqaZe1TRdNI17BEa1gcl\",\"price-info\":\"mz2vhtmYPNRaJbeUrXKA\",\"priceInfo\":\"mz2vhtmYPNRaJbeUrXKA\",\"price-info-item\":\"Ct9Ine31cu5h7FCjtRWa\",\"priceInfoItem\":\"Ct9Ine31cu5h7FCjtRWa\",\"price-info-item-main\":\"JduVB3d3NxN9TybmxIgS\",\"priceInfoItemMain\":\"JduVB3d3NxN9TybmxIgS\",\"price-info-item-title\":\"O7d8G4OQ_yTJSHiHbgBR\",\"priceInfoItemTitle\":\"O7d8G4OQ_yTJSHiHbgBR\",\"tipsList\":\"zsSyrAOxg0qs0nPJWSEe\",\"tipsItem\":\"lcjeIUsdqs95BdK_oysT\",\"tipsItem_active\":\"XRnGKO5ClzA_4S8i81wC\",\"tipsItemActive\":\"XRnGKO5ClzA_4S8i81wC\",\"invoice-info\":\"MyMLGHhiEKOVIoG3aQTS\",\"invoiceInfo\":\"MyMLGHhiEKOVIoG3aQTS\",\"provider\":\"hLVHJSaVspSZdzxNlBJk\",\"stripe\":\"nrKVVKzRmr7s0TE15uG1\",\"smartglocal\":\"oONvjFUTa5AbWvrbzbWn\",\"checkout-info-item-info-title\":\"bkIqUpVUAY04wdT8fySX\",\"checkoutInfoItemInfoTitle\":\"bkIqUpVUAY04wdT8fySX\",\"checkout-info-item-info-data\":\"VAzhVfK6c1pUriepo4Ga\",\"checkoutInfoItemInfoData\":\"VAzhVfK6c1pUriepo4Ga\",\"tos-checkbox\":\"WjrdCzbl3hROmSBGGnjy\",\"tosCheckbox\":\"WjrdCzbl3hROmSBGGnjy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiChat, ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  chat?: ApiChat;\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n};\n\nconst Checkout: FC<OwnProps> = ({\n  chat,\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, true)}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', chat?.title);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || !isInteractive) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || !isInteractive) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  return (\n    <ListItem\n      multiline={Boolean(title && label !== title)}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n    >\n      {customIcon && <i className={buildClassName('icon', customIcon)} />}\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ninterface IframeCallbackEvent {\n  eventType: string;\n  eventData: {\n    path_full: string;\n  };\n}\n\nconst ConfirmPayment: FC<OwnProps> = ({ url, noRedirect, onClose }) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n\n      if (eventType !== 'web_app_open_tg_link') {\n        return;\n      }\n\n      if (!noRedirect) {\n        const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n        openTelegramLink({ url: linkUrl });\n      }\n\n      onClose();\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 400;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 23;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            placeholder={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              placeholder={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport { PaymentStep } from '../../types';\n\nimport { selectChat, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  chat,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePrevious(step, true);\n  const prevRequestId = usePrevious(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            chat={chat}\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handleButtonClick = useCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  }, [\n    isEmailRequested, isNameRequested, isPhoneRequested, isShippingAddressRequested, nativeProvider, passwordValidUntil,\n    paymentDispatch, paymentState, requestId, savedInfo, sendCredentials, sendForm, setStep, smartGlocalToken, step,\n    stripeId, twoFaPassword, validatePaymentPassword, validateRequest,\n  ]);\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrency(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.isRecurring && !isTosAccepted);\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition name=\"slide\" activeKey={step}>\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n    } = selectTabState(global).payment;\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId) : undefined;\n    const isProviderError = Boolean(invoice && (!nativeProvider || !SUPPORTED_PROVIDERS.has(nativeProvider)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl,\n      countryList: global.countryList.general,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice = useMemo(() => {\n    return {\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["createGhost","source","origin","ghost","document","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","message","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","video","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","useMediaProps","_ref","mediaId","avatarOwner","delay","photo","getMessagePhoto","undefined","actionPhoto","getMessageActionPhoto","getMessageVideo","webPagePhoto","getMessageWebPagePhoto","webPageVideo","getMessageWebPageVideo","isDocumentPhoto","isMessageDocumentPhoto","isDocumentVideo","isMessageDocumentVideo","videoSize","getMessageFileSize","avatarMedia","photos","isVideoAvatar","Boolean","isVideo","isPhoto","isGif","isFromSharedMedia","isFromSearch","getMediaHash","useMemo","isFull","getVideoAvatarMediaHash","getChatAvatarHash","getMessageMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMessageMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","length","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","useBlurSync","getMessageMediaThumbDataUri","bestData","isLocal","fileName","getMessageFileName","hasVideoAvatar","dimensions","getMessageDocument","mediaSize","getPhotoFullDimensions","getVideoDimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","avatarPhoto","getZoomChange","setZoomChange","useZoomChange","memo","withGlobal","global","_ref4","isSchedule","threadId","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","chat","selectChat","chatId","contactName","isUserId","getUserFirstOrLastName","selectUser","getPrivateChatUserId","isChatWithBot","selectBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","isOpen","album","onConfirm","onClose","deleteMessages","deleteScheduledMessages","getActions","handleDeleteMessageForAll","useCallback","messageIds","messages","map","_ref2","shouldDeleteForAll","handleDeleteMessageForSelf","_ref3","lang","useLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","renderText","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","canUpdateMedia","currentMessageList","isDownloading","selectIsDownloading","isProtected","selectIsMessageProtected","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","isCurrentAvatar","avatarHash","canUpdate","messageListType","type","avatarOwnerId","canReport","selectMedia","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMessageMedia","cancelMessageMediaDownload","updateProfilePhoto","updateChatPhoto","downloadProgress","handleDownloadClick","useLastCallback","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","MenuButton","onTrigger","round","ariaLabel","renderDeleteModals","DeleteMessageModal","DeleteProfilePhotoModal","menuItems","isForwardingAllowed","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","index","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","params","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","square","VideoPlayerControls","ownProps","selectTabState","mediaViewer","selectChatMessage","senderId","selectScheduledMessage","props","withAnimation","onFooterClick","isMoving","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","content","action","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","getMediaId","rest","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveMediaId","setActiveMediaId","activeMediaIdRef","isScaled","activeMediaId","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectMediaDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","mId","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","nextMediaId","prevMediaId","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","isAvatar","sender","selectPeer","selectSender","isFallbackAvatar","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","senderTitle","getSenderTitle","Avatar","peer","formatMediaDateTime","date","shouldSkipHistoryAnimations","selectPerformanceSettingsValue","currentUserId","chatMessages","collectionIds","isChatWithSelf","selectIsChatWithSelf","user","isChatAdmin","avatarOwnerFallbackPhoto","selectUserFullInfo","fallbackPhoto","selectChatScheduledMessages","selectChatMessages","selectOutlyingListByMessageId","selectListedIds","currentSearch","selectCurrentMediaSearch","foundIds","resultsByType","media","openMediaViewer","openForwardMenu","animationKey","prevSenderId","usePrevious","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","singleMediaId","mediaIds","p","i","getChatMediaMessageIds","selectedMediaIndex","indexOf","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","addListener","removeListener","prevMessage","prevIsHidden","prevOrigin","prevAvatarOwner","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","mediaIdRef","useStateRef","handleFooterClick","currentMediaId","handleForward","fromChatId","forceOnHeavyAnimation","captureEscKeyListener","stopCurrentAudio","mediaIdsRef","fromId","mIds","handleBeforeDelete","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","peerId","MediaViewerSlides","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","tabState","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","Picker","itemIds","MEMO_EMPTY_ARRAY","filterValue","filterPlaceholder","searchInputId","isSearchable","forceShowSelf","onSelectedIdsChange","onFilterChange","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryPinned","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","OVERFLOW_THRESHOLD_PX","isExpanded","onExpand","onFold","contentRef","showMoreButtonRef","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","button","offsetWidth","setProperty","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","areViewsExpired","openStoryViewModal","sendStoryReaction","viewsCount","reactionsCount","isOut","sentReaction","isChannel","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","Icon","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","isPrivateStories","isArchivedStories","appConfig","viewModal","isPrivacyModalOpen","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","orderedIds","pinnedIds","archiveIds","selectPeerStories","shouldForcePause","reactionPicker","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isSingleStory","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openChat","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","canPinToProfile","useCurrentOrPrev","canUnpinFromProfile","canCopyLink","usernames","canShare","canPlayStory","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransition","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","onMouseDown","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","onStart","isLongPressActive","isPressed","timerId","canProcessEvent","cancel","useLongPress","hasAllData","useBackgroundMode","load","isPreload","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleVideoStoryTimeUpdate","handleOpenChat","handleOpenPrevStory","handleOpenNextStory","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","renderStoriesTabs","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","onPlaying","MediaAreaOverlay","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","peerStories","openStoryViewer","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","withStory","storyViewerMode","ANIMATION_DURATION_MS","IS_SAFARI","IS_FIREFOX","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","archived","active","peerIds","areStoriesHidden","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","animationDuration","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","timeoutId","timeOutId","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","buildStyle","Story","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","noStatusOrTyping","status","formatDateAtTime","statusIcon","viewsById","nextOffset","isLoading","closeStoryViewModal","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViewIds","values","sort","a","b","prepareComparator","view","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","StoryView","Array","_","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","chatOrUserIds","chatsById","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","topicIds","topics","topicsResult","searchTitle","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","handleTopicClick","topicId","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","clickArg","TopicIcon","letterClassName","Loading","GroupChatInfo","chats","listIds","orderedPinnedIds","activeListIds","archivedListIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isManyMessages","isStory","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","isSelf","toChatId","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","geoPoint","closeMapModal","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","openUrl","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","urlAuth","currentUserName","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","unmarkTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","CalendarModal","userStatus","selectUserStatus","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","webApp","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","ignoreEventsRef","lastFrameSizeRef","handleLoad","once","contentWindow","JSON","stringify","isNonStable","eventType","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","req_id","slug","linkUrl","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleToggleClick","isEnabled","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","shortName","isInactive","isForSideMenu","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","count","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","l","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","DPR","currentUser","circleRef","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","PREMIUM_FEATURE_DESCRIPTIONS","PREMIUM_FEATURE_SECTIONS","PREMIUM_BOTTOM_VIDEOS","LIMITS_ORDER","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","LIMITS_DESCRIPTIONS","promo","onClickSubscribe","isPremium","limits","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","options","find","months","scrollLeft","scrollLeftOriginal","toString","reverseIndex","prevElement","reverseElement","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","SliderDots","formatCurrency","amount","currency","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isClosing","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","premiumPromoOrder","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","handleClickWithStartParam","showConfetti","prevIsPremium","filteredSections","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","isClosed","PremiumFeatureModal","isBig","PremiumLogo","renderTextWithEntities","statusText","entities","statusEntities","renderFooterText","fullMonthlyAmount","perMonth","discount","handleChange","forUserId","monthlyCurrency","monthlyAmount","giftPremiumModal","gifts","premiumGifts","closeGiftPremiumModal","renderedUser","renderedGifts","selectedOption","setSelectedOption","firstGift","cheaperGift","gift","selectedGift","botUrl","handlePremiumClick","GiftOption","parts","match","Link","isPrimary","renderPremiumFeaturesLink","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","isLottie","isVideos","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerPreviewHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","accessHash","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isSavedMessages","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","noShowPremium","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","setEmojiStatus","menuRef","isCustomEmoji","hasEffect","isLocked","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","item","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","available","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","observeIntersectionForPlaying","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","isConfirmModalOpen","openConfirmModal","closeConfirmModal","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","reactions","isInstalled","installedDate","isArchived","canCut","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","Set","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionUniqueKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","has","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","CHAT_STICKER_SET_ID","PREMIUM_STICKER_SET_ID","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","topReactionsSlice","TOP_SYMBOL_SET_ID","cleanRecentReactions","some","topReaction","cleanAvailableReactions","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","boostedChat","applyBoost","closeBoostModal","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","level","currentLevelBoosts","hasMyBoost","areBoostsInDifferentChannels","every","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","getBoostProgressInfo","hasBoost","isJustUpgraded","moreBoosts","currentStoriesPerDay","nextLevelStoriesPerDay","modalTitle","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","LinkField","PickerSelectedItem","isFromGiveaway","formatDateTimeToString","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","SafeLink","isPrivateChat","isChatChannel","isGroup","isSuperGroup","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isForwardModalOpen","isModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","handleCopy","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","memberIds","leftId","rightId","handleCloseSeenByModal","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","flatMap","peerReactions","reactor","seenByUser","FullNameTitle","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","secondaryIcon","narrow","highlight","createMapStateToProps","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","activeDownloads","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","handleMessageFocus","handlePlayAudio","canRenderContents","noFastList","NothingFound","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","shouldReplaceHistory","useSelectWithEnter","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","storyViewerOrigin","MuteChatModal","ChatFolderModal","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","LeftSearchResultChat","localContactIds","globalResults","localResults","globalChatIds","globalUserIds","localChatIds","localUserIds","setGlobalSearchChatId","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","contactIdsWithMe","foundContactIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","itemSelector","Media","TABS","GlobalSearchContent","Links","Files","Music","Voice","CHAT_TABS","TRANSITION_RENDER_COUNT","currentContent","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","TabList","tabs","onSwitchTab","renderCount","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","selectedChatTypes","shouldHideChatTypes","onSelectedChatTypesChange","onSaveFilter","openLimitReachedModal","chatTypes","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","shouldMinimize","isTouched","setIsTouched","handleItemClick","newSelectedIds","splice","handleChatTypeClick","newSelectedChatTypes","handleFilterChange","selectedType","typeKey","isMinimized","canClose","withChatType","dispatch","chatFilter","selectedChatIds","selectChatFilters","folderAllOrderedIds","useFolderManagerForOrderedIds","ALL_FOLDER_ID","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","isChatList","newFilter","handleSelectedIdsChange","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","SettingsFoldersChatsPicker","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","renderChatType","ShowMoreButton","itemName","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","LOCAL_TGS_URLS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","subtitle","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","setSelectedIds","isFirstRenderRef","prevUrl","handleClickDisabled","isUserBot","chatsCount","FoldersShare","withShare","onRevoke","onDisabledClick","isRoundCheckbox","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","country","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","iconClassName","sessionHashes","sessionHash","RadioGroup","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","avatar","SettingsActiveWebsite","handleCardClick","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","newValue","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","language","doNotTranslate","displayedOptions","setDisplayedOptions","subLabel","otherLanguages","unselected","newDoNotTranslate","v","filteredDisplayedOptions","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","copyTextToClipboard","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","USERNAME_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","test","handleUsernameChange","newUsername","isValid","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","nonInteractive","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyForwarding","PrivacyVoiceMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","setLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","rightIcon","onClickLabel","loadingOption","sessionCount","loadProfilePhotos","openSupportChat","isSupportDialogOpen","openSupportDialog","closeSupportDialog","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","langName","PremiumIcon","withGradient","big","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","prev","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","privacyPhoneNumber","privacyLastSeen","lastSeen","privacyProfilePhoto","profilePhoto","privacyForwarding","forwards","privacyVoiceMessages","voiceMessages","privacyGroupChats","chatInvite","privacyPhoneCall","phoneCall","privacyBio","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","updateGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleVoiceMessagesClick","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","allowDisabledClick","blockedIds","userSearch","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","setPrivacyVisibility","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","privacyKey","headerText","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","getCurrentPrivacySettings","isAllowList","setPrivacySettings","selectedContactIds","updatedIds","config","selectedReaction","defaultReaction","setDefaultReaction","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","onSuccess","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","isFrom","currentKey","SettingsHeader","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","statusesById","userStatusesById","openNewContactDialog","filteredIds","sortUserIds","isSearching","selectedMemberIds","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","onTransitionEnd","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","CheckboxGroup","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","getCopyLabel","hasSelection","isReactionPickerOpen","enabledReactions","maxUniqueReactions","anchor","targetHref","canSendNow","canReschedule","canReply","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","noTransition","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAds","onSponsoredHide","onSponsorInfo","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessageContact","canImageBeCopied","hasMessageLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","menuElMinWidth","withScroll","handleOpenMessageReactionPicker","bubbleStyle","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","MenuSeparator","inline","withWrap","sponsorInfo","detectedLanguage","selectActiveDownloads","seenByExpiresAt","seenByMaxChatMembers","noOptions","isOwn","isOwnMessage","isScheduled","isMessageLocal","isChatGroup","membersCount","isAction","isActionMessage","chatFullInfo","selectChatFullInfo","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","messageLink","selectMessageLink","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","canScheduleUntilOnline","selectCanScheduleUntilOnline","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","setIsMenuOpen","setIsDeleteModalOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","handleDelete","handleReport","closeMenu","closePinModal","handleReply","replyToMsgId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","PinMessageModal","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isComments","originChannelId","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","chatBot","REPLIES_USER_ID","userFullInfo","fullInfo","canGiftPremium","canCreateTopic","isCreator","isUserRightBanned","getHasAdminRight","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","isTopic","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openBoostStatistics","openGiftPremiumModal","openChatWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","shouldCloseFast","setShouldCloseFast","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","cmd","DeleteChatModal","runDebouncedForSearch","selectCurrentTextSearch","isHistoryCalendarOpen","setLocalTextSearchQuery","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","focusedIndex","setFocusedIndex","visualViewport","mainEl","pageTop","blur","handleMessageSearchQueryChange","newQuery","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","getDayStartAt","isTouchScreen","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areCustomReactionsAllowed","areCustomAllowed","withCustomReactions","closeReactionPicker","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","isFree","customEmojiMessage","parseMessageInput","buildCustomEmojiHtml","isReaction","chosenOrder","backdropExcludedSelector","ReactionPickerLimited","div","BLUR_CANVAS_SIZE","attachment","isSingle","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","canDisplaySpoilerButton","GIF_MIME_TYPE","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","members","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","focusInput","addNewOption","requestNextMutation","behavior","handleCreate","questionTrimmed","substring","optionsTrimmed","o","summary","answers","correct","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","hidden","noReplaceNewlines","native","IS_ELECTRON_BUILD","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","categories","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","unshift","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","withThumb","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","handleMouseDown","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","favorite","premiumSet","chatStickerSetId","recentStickers","premiumStickers","selectShouldLoopStickers","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","existingAddedSetIds","addedPremiumStickers","flat","totalPremiumStickers","uniqueByField","fullSet","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","EmojiPicker","StickerPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","withAvatar","botCommand","handleSendCommand","selectedCommandIndex","prevCommands","renderedCommands","chatBotCommand","BotCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","messagesById","handleSearchTextMessagesLocal","viewportResults","senderPeer","forwardInfo","isChannelPost","originalSender","foundResult","isOnTop","preloadBackwards","teactOrderKey","LastMessageMeta","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","toggleMessageStatistics","views","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentTopMessages","StatisticsRecentMessage","openChatByUsername","GRAPH_TITLES","viewsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","publicForwards","publicForwardsData","StatisticsPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","setIsLoading","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","CHANNEL_TITLE_EMPTY","management","isSignaturesShown","canChangeInfo","canInvite","exportedInvites","updateChat","toggleSignatures","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","ManagementProgress","adminsCount","adminMembersById","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleToggleSignatures","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","isChatPublic","formatInteger","joinRequests","onChatMemberSelect","canAddNewAdmins","adminRights","addAdmins","adminMembers","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","bannedRights","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","channelId","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","canBanUsers","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","defaultBannedRights","sendStickers","sendGifs","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","isNewAdmin","selectedUserId","updateChatAdmin","permissions","setPermissions","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handlePermissionChange","handleSavePermissions","handleDismissAdmin","getControlIsDisabled","memberStatus","handleCustomTitleChange","changeInfo","blocking","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","inviteUsers","pinMessages","manageCall","manageTopics","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","noAdmins","toggleParticipantsHidden","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","noScrollRestore","memberId","DeleteMemberModal","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","havePermissionChanged","setHavePermissionChanged","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","checkMedia","mediaPermissions","sendMedia","assign","embedLinks","sendPlain","sendMessages","updateChatDefaultBannedRights","shouldDisablePermissionForPublicGroup","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isMediaDropdownOpen","setIsMediaDropdownOpen","handleOpenMediaDropdown","handleDisabledClick","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","sendPhotos","sendVideos","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","isCalendarOpened","openCalendar","closeCalendar","setIsRequestNeeded","customExpireDate","setCustomExpireDate","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleExpireDateChange","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","reactionsOptions","handleSaveReactions","availableActiveReactions","handleReactionsOptionChange","handleReactionChange","local","personalPhoto","notPersonalPhoto","uploadContactProfilePhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","isSuggestRef","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","handleSelectAvatar","isSuggest","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","iso2","defaultName","invoice","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","main","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","passwordHint","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","general","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","validateRequest","requestInfo","getRequestInfo","sendCredentials","credentials","expiryMonth","expiryYear","zip","getCredentials","sendForm","shippingOptionId","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","isRecurring","getIsSubmitDisabled","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","hardwareConcurrency","instances","IS_TEST","Worker","createConnector"],"sourceRoot":""}