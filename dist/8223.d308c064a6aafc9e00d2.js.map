{"version":3,"file":"8223.d308c064a6aafc9e00d2.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/FullNameTitle.module.scss?6448","webpack://telegram-t/./src/components/common/FullNameTitle.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumIcon.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/AvatarBadge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/hooks/useCollapseWithForumPanel.ts","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatOrderDiff.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCacheBuster.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/useOnSelectionChange.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStateRef.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/WorkerConnector.ts","webpack://telegram-t/./src/lib/rlottie/RLottie.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/stopEvent.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiGroupCall, ApiUser } from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  animationLevel: AnimationLevel;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n  usersById,\n  chatsById,\n  animationLevel,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (participants) {\n      return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n        if (isUser) {\n          if (!usersById[id]) {\n            return undefined;\n          }\n          return { user: usersById[id] };\n        } else {\n          if (!chatsById[id]) {\n            return undefined;\n          }\n          return { chat: chatsById[id] };\n        }\n      }).filter(Boolean);\n    } else return [];\n  }, [chatsById, participants, usersById]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n          if (p.user) {\n            return <Avatar key={p.user.id} user={p.user} animationLevel={animationLevel} />;\n          } else {\n            return <Avatar key={p.chat.id} chat={p.chat} animationLevel={animationLevel} />;\n          }\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n    return {\n      groupCall,\n      usersById: global.users.byId,\n      chatsById: global.chats.byId,\n      activeGroupCallId: global.groupCalls.activeGroupCallId,\n      isActive: ((!groupCall ? (chat && chat.isCallNotEmpty && chat.isCallActive)\n        : (groupCall.participantsCount > 0 && groupCall.isLoaded)))\n        && (activeGroupCallId !== groupCall?.id),\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { ANIMATION_LEVEL_MAX } from '../../config';\nimport usePrevious from '../../hooks/usePrevious';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useTimeout from '../../hooks/useTimeout';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n};\n\nconst ANIMATION_TIME = 200;\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n}) => {\n  const lang = useLang();\n\n  const prevText = usePrevious(text);\n  const forceUpdate = useForceUpdate();\n\n  const isAnimatingRef = useRef(false);\n\n  const shouldAnimate = getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MAX;\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) return text;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld}>{prevText[i]}</div>\n            <div className={styles.characterNew}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    isAnimatingRef.current = true;\n\n    return elements;\n  }, [prevText, shouldAnimate, text]);\n\n  useTimeout(() => {\n    isAnimatingRef.current = false;\n    forceUpdate();\n  }, isAnimatingRef.current ? ANIMATION_TIME : undefined);\n\n  return (\n    <span className={styles.root} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  }, [markPreviewLoaded, previewUrl]);\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n// eslint-disable-next-line max-len\nconst TRANSCRIBE_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 24\" class=\"loading-svg\"><rect class=\"loading-rect\" fill=\"transparent\" width=\"32\" height=\"24\" stroke-width=\"3\" stroke-linejoin=\"round\" rx=\"6\" ry=\"6\" stroke=\"var(--accent-color)\" stroke-dashoffset=\"1\" stroke-dasharray=\"32,68\"></rect></svg>';\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  const handleTranscribe = useCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  }, [message.chatId, message.id, transcribeAudio]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const transcribeSvgMemo = useMemo(() => (\n    <div dangerouslySetInnerHTML={{ __html: TRANSCRIBE_SVG }} />\n  ), []);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          transcribeSvgMemo,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  svgMemo?: React.ReactNode,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && svgMemo}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat, selectCurrentMessageList, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../global/selectors';\nimport {\n  getChatDescription,\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    isForum?: boolean;\n    topicId?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  isForum,\n  topicId,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    fullInfo,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isForum\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat);\n  }, [chat, isForum, activeChatUsernames, topicId]);\n\n  const handleNotificationChange = useCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (topicId) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  }, [chatId, topicId, updateChatMutedState, updateTopicMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => (\n                <>\n                  {idx > 0 ? ', ' : ''}\n                  <a\n                    key={nick}\n                    href={`${TME_LINK_PREFIX}${nick}`}\n                    onClick={(e) => {\n                      stopEvent(e);\n                      copy(`@${nick}`, lang(isChat ? 'Link' : 'Username'));\n                    }}\n                    className=\"text-entity-link username-link\"\n                  >\n                    {`@${nick}`}\n                  </a>\n                </>\n              ))}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const publicLink = isForum\n      ? getTopicLink('', mainUsername.username, topicId)\n      : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon=\"mention\"\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(publicLink, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{publicLink}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && renderUsernames(activeChatUsernames, true)}\n      {!activeChatUsernames && canInviteUsers && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      isForum,\n      topicId,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { AnimationLevel } from '../../types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  animationLevel: AnimationLevel;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  animationLevel,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n          animationLevel={animationLevel}\n          withVideo\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return (\n    <span className=\"FakeIcon\">\n      {lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}\n    </span>\n  );\n};\n\nexport default memo(FakeIcon);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ysHMmXALnn0fgFRc7Bn7\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getChatTitle, getUserFullName, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport FakeIcon from './FakeIcon';\nimport CustomEmoji from './CustomEmoji';\nimport PremiumIcon from './PremiumIcon';\n\nimport styles from './FullNameTitle.module.scss';\n\ntype OwnProps = {\n  peer: ApiChat | ApiUser;\n  className?: string;\n  noVerified?: boolean;\n  noFake?: boolean;\n  withEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  isSavedMessages?: boolean;\n  noLoopLimit?: boolean;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  observeIntersection?: ObserveFn;\n};\n\nconst FullNameTitle: FC<OwnProps> = ({\n  className,\n  peer,\n  noVerified,\n  noFake,\n  withEmojiStatus,\n  emojiStatusSize,\n  isSavedMessages,\n  noLoopLimit,\n  onEmojiStatusClick,\n  observeIntersection,\n}) => {\n  const lang = useLang();\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n  const emojiStatus = isUser && (peer as ApiUser).emojiStatus;\n  const isPremium = isUser && (peer as ApiUser).isPremium;\n\n  if (isSavedMessages) {\n    return (\n      <div className={buildClassName('title', styles.root, className)}>\n        <h3>{lang('SavedMessages')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName('title', styles.root, className)}>\n      <h3 dir=\"auto\" className=\"fullName\">{renderText(title || '')}</h3>\n      {!noVerified && peer.isVerified && <VerifiedIcon />}\n      {!noFake && peer.fakeType && <FakeIcon fakeType={peer.fakeType} />}\n      {withEmojiStatus && emojiStatus && (\n        <CustomEmoji\n          documentId={emojiStatus.documentId}\n          size={emojiStatusSize}\n          loopLimit={!noLoopLimit ? EMOJI_STATUS_LOOP_LIMIT : undefined}\n          observeIntersectionForLoading={observeIntersection}\n          onClick={onEmojiStatusClick}\n        />\n      )}\n      {withEmojiStatus && !emojiStatus && isPremium && <PremiumIcon />}\n    </div>\n  );\n};\n\nexport default memo(FullNameTitle);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat, selectChatMessages, selectChatOnlineCount, selectThreadInfo, selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  withVideoAvatar?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    animationLevel: AnimationLevel;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  withVideoAvatar,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  topic,\n  messagesCount,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (chat && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          withVideo={withVideoAvatar}\n          animationLevel={animationLevel}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon topic={topic!} className=\"topic-header-icon\" size={TOPIC_ICON_SIZE} />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  }, [hideSpoiler, message, onClick]);\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  }, []);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        <i className={`icon-message-${status}`} />\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport generateIdFor from '../../util/generateIdFor';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './PremiumIcon.scss';\n\n// eslint-disable-next-line max-len\nconst PREMIUM_ICON = { __html: '<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"var(--color-fill)\"/></svg>' };\nconst store: Record<string, boolean> = {};\n\ntype OwnProps = {\n  withGradient?: boolean;\n  big?: boolean;\n  className?: string;\n  onClick?: VoidFunction;\n};\n\nconst PremiumIcon: FC<OwnProps> = ({\n  withGradient,\n  big,\n  className,\n  onClick,\n}) => {\n  const html = useMemo(() => {\n    return withGradient ? getPremiumIconGradient() : PREMIUM_ICON;\n  }, [withGradient]);\n\n  return (\n    <i\n      onClick={onClick}\n      className={buildClassName(\n        'PremiumIcon', className, withGradient && 'gradient', onClick && 'clickable', big && 'big',\n      )}\n      dangerouslySetInnerHTML={html}\n      title=\"Premium\"\n    />\n  );\n};\n\nfunction getPremiumIconGradient() {\n  const id = generateIdFor(store);\n  return {\n    // eslint-disable-next-line max-len\n    __html: `<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"${id}\" x1=\"3\" y1=\"63.5001\" x2=\"84.1475\" y2=\"-1.32262\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6B93FF\"/><stop offset=\"0.439058\" stop-color=\"#976FFF\"/><stop offset=\"1\" stop-color=\"#E46ACE\"/></linearGradient></defs><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"url(#${id})\"/></svg>`,\n  };\n}\n\nexport default memo(PremiumIcon);\n","import React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withVideoAvatar?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withVideoAvatar,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (user && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{renderText(status)}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        withVideo={withVideoAvatar}\n        animationLevel={animationLevel}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/environment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const currentPhoto = photo\n    || user?.fullInfo?.personalPhoto\n    || userOrChat?.fullInfo?.profilePhoto\n    || user?.fullInfo?.fallbackPhoto;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = currentPhoto || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal', 'photo');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && currentPhoto && !isVideo && `photo${currentPhoto.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && currentPhoto && isVideo && getVideoAvatarMediaHash(currentPhoto);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && currentPhoto?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    currentPhoto?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = currentPhoto || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {currentPhoto && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectTabState,\n  selectChat, selectCurrentMessageList, selectThreadMessagesCount, selectUser, selectUserStatus,\n} from '../../global/selectors';\nimport { getUserStatus, isChatChannel, isUserOnline } from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? animationLevel >= 1 ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized') : 'none'\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const handleClickPremium = useCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  }, [openPremiumModal, user]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && user?.fullInfo?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(user.fullInfo.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && user?.fullInfo?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={user.fullInfo.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(user.fullInfo.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { getPropertyHexColor } from '../../util/themeStyle';\nimport { hexToRgb } from '../../util/switchTheme';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  canViewSet?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  observeIntersection: ObserveFn;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noAnimate,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  canViewSet,\n  observeIntersection,\n  isCurrentUserPremium,\n  sharedCanvasRef,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const [customColor, setCustomColor] = useState<[number, number, number] | undefined>();\n  const hasCustomColor = sticker.shouldUseTextColor;\n\n  useEffect(() => {\n    if (!hasCustomColor) {\n      setCustomColor(undefined);\n      return;\n    }\n    const hexColor = getPropertyHexColor(getComputedStyle(ref.current!), '--color-text');\n    if (!hexColor) {\n      setCustomColor(undefined);\n      return;\n    }\n    const customColorRgb = hexToRgb(hexColor);\n    setCustomColor([customColorRgb.r, customColorRgb.g, customColorRgb.b]);\n  }, [hasCustomColor]);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noAnimate;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => ref.current!.querySelector('.sticker-context-menu .bubble'),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextRemoveRecent = useCallback(() => {\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const handleOpenSet = useCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  }, [openStickerSet, stickerSetInfo]);\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isCustomEmoji && 'custom-emoji',\n    `sticker-button-${id}`,\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (noContextMenu || isCustomEmoji) return [];\n\n    const items: ReactNode[] = [];\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    canViewSet, handleContextFave, handleContextRemoveRecent, handleContextUnfave, handleOpenSet, handleSendQuiet,\n    handleSendScheduled, isLocked, isSavedMessages, lang, onFaveClick, onRemoveRecentClick, onUnfaveClick, onClick,\n    noContextMenu, isCustomEmoji,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        isSmall\n        size={size}\n        shouldLoop\n        shouldPreloadPreview\n        noLoad={!shouldLoad}\n        noPlay={!shouldPlay}\n        withSharedAnimation\n        sharedCanvasRef={sharedCanvasRef}\n        customColor={customColor}\n      />\n      {isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon-lock-badge\" />\n        </div>\n      )}\n      {isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities(\n    trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    message.id,\n    isSimple,\n    isProtected,\n  );\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'Badge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('Badge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"Badge mention\">\n        <i className=\"icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('Badge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"Badge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !isMobile && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport Badge from './Badge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <Badge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiUser,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiFormattedText,\n  ApiUserStatus,\n  ApiTopic,\n  ApiTypingStatus,\n} from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport {\n  isUserId,\n  getPrivateChatUserId,\n  getMessageAction,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectUser,\n  selectChatMessage,\n  selectOutgoingStatus,\n  selectDraft,\n  selectCurrentMessageList,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectUserStatus,\n  selectTopicFromMessage,\n  selectThreadParam, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport Badge from './Badge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  offsetCollapseDelta: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  isEmojiStatusColored?: boolean;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: AnimationLevel;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  isEmojiStatusColored,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  offsetCollapseDelta,\n  draft,\n  animationLevel,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleClick = useCallback(() => {\n    if (isForum) {\n      openForumPanel({ chatId });\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [isForum, openChat, chatId, isSelected, canScrollDown, openForumPanel, focusLastMessage]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  }, [chatId, onDragEnter]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      offsetCollapseDelta={offsetCollapseDelta}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n          animationLevel={animationLevel}\n          withVideo\n          observeIntersection={observeIntersection}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n            key={!isMobile && isEmojiStatusColored ? `${isSelected}` : undefined}\n          />\n          {isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const statusEmoji = user?.emojiStatus && global.customEmojis.byId[user.emojiStatus.documentId];\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      isEmojiStatusColored: statusEmoji?.shouldUseTextColor,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, {\n  memo, useEffect, useRef, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID, CHAT_HEIGHT_FORUM_PX,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport { selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport useCollapseWithForumPanel from './hooks/useCollapseWithForumPanel';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  foldersDispatch,\n  onScreenSelect,\n}) => {\n  const { openChat, openNextChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        const position = Number(digit) - 1;\n        if (position > orderedIds!.length - 1 || position < 0) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isActive, openChat, openNextChat, orderedIds]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useCollapseWithForumPanel(containerRef, isForumPanelOpen);\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  }, []);\n\n  const viewportOffsetPx = useMemo(() => {\n    if (!viewportIds?.length) return 0;\n    const global = getGlobal();\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    return orderedIds!.reduce((acc, id, i) => {\n      if (i >= viewportOffset) {\n        return acc;\n      }\n      return acc + (selectChat(global, id)!.isForum ? CHAT_HEIGHT_FORUM_PX : CHAT_HEIGHT_PX);\n    }, 0);\n  }, [orderedIds, viewportIds]);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const global = getGlobal();\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    let currentChatListHeight = viewportOffsetPx;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const expendedOffsetTop = currentChatListHeight;\n      const collapsedOffsetTop = (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      currentChatListHeight += (selectChat(global, id)?.isForum ? CHAT_HEIGHT_FORUM_PX : CHAT_HEIGHT_PX);\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={isForumPanelOpen ? collapsedOffsetTop : expendedOffsetTop}\n          offsetCollapseDelta={expendedOffsetTop - collapsedOffsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={(orderedIds?.length || 0) * CHAT_HEIGHT_PX}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import { useLayoutEffect } from '../../../../lib/teact/teact';\nimport { fastRaf } from '../../../../util/schedulers';\nimport { ANIMATION_END_DELAY } from '../../../../config';\n\nconst ANIMATION_DURATION = 450;\n\n// Reduce height of forum chat items when opening Forum Panel\nexport default function useCollapseWithForumPanel(\n  containerRef: React.RefObject<HTMLDivElement>,\n  isForumPanelOpen = false,\n) {\n  useLayoutEffect(() => {\n    const chatEls = Array.from(containerRef.current!.querySelectorAll<HTMLDivElement>('.Chat'));\n\n    chatEls.forEach((chatEl) => {\n      const offsetCollapseDelta = Number(chatEl.dataset.offsetCollapseDelta);\n      chatEl.style.transform = `translateY(${isForumPanelOpen ? offsetCollapseDelta : -offsetCollapseDelta!}px)`;\n    });\n\n    fastRaf(() => {\n      chatEls.forEach((chatEl) => {\n        chatEl.classList.add('animate-collapse');\n        chatEl.style.transform = '';\n      });\n    });\n\n    setTimeout(() => {\n      // Wait one more frame for better animation performance\n      fastRaf(() => {\n        chatEls.forEach((chatEl) => {\n          chatEl.classList.remove('animate-collapse');\n        });\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [containerRef, isForumPanelOpen]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport type { AnimationLevel } from '../../../types';\n\nimport {\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage, selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus, selectThreadInfo, selectThreadParam, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport Badge from './Badge';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  animationLevel?: AnimationLevel;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  animationLevel,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleDelete = useCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  }, [chat.id, deleteTopic, topic.id]);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  }, [openChat, chatId, topic.id, canScrollDown, focusLastMessage]);\n\n  const contextActions = useTopicContextActions(topic, chat, wasTopicOpened, canDelete, handleOpenDeleteModal);\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      contextActions={contextActions}\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      animationLevel: global.settings.byKey.animationLevel,\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\n\nimport useLang from '../../../../hooks/useLang';\nimport { useMemo } from '../../../../lib/teact/teact';\n\nexport default function useTopicContextActions(\n  topic: ApiTopic,\n  chat: ApiChat,\n  wasOpened?: boolean,\n  canDelete?: boolean,\n  handleDelete?: NoneToVoidFunction,\n) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: true }),\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]);\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID,\n  TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport {\n  selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useCallback(() => {\n    closeForumPanel();\n  }, [closeForumPanel]);\n\n  const handleToggleChatInfo = useCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  }, [chat, openChatWithInfo]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n      waitForTransitionEnd(ref.current!, () => {\n        dispatchHeavyAnimationStop();\n      });\n\n      if (isVisible) {\n        shouldRenderRef.current = true;\n        ref.current!.style.transform = 'none';\n      } else {\n        shouldRenderRef.current = false;\n        ref.current!.style.transform = '';\n      }\n    }\n  }, [isVisible, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as T[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  function handleOpenTopic(e: React.MouseEvent<HTMLDivElement>) {\n    if (lastActiveTopic.unreadCount === 0) return;\n    e.stopPropagation();\n    openChat({ id: chat.id, threadId: lastActiveTopic.id, shouldReplaceHistory: true });\n  }\n\n  useLayoutEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <span className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onMouseDown={handleOpenTopic}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </span>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <span\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onMouseDown={handleOpenTopic}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </span>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { AnimationLevel } from '../../../../types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\nimport { fastRaf } from '../../../../util/schedulers';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  animationLevel,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  animationLevel?: AnimationLevel;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities(draft.text, draft.entities, undefined, undefined, undefined, undefined, true)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useChatOrderDiff(orderedIds: (string | number)[] | undefined) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [orderById, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useRef,\n  useCallback,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ANIMATION_LEVEL_MIN } from '../../config';\nimport { ARE_CALLS_SUPPORTED, IS_PWA } from '../../util/environment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatBot,\n  selectIsUserBlocked,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  }, []);\n\n  const handleHeaderMenuClose = useCallback(() => {\n    setIsMenuOpen(false);\n  }, []);\n\n  const handleHeaderMenuHide = useCallback(() => {\n    setMenuPosition(undefined);\n  }, []);\n\n  const handleSubscribeClick = useCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  }, [joinChannel, chatId, shouldSendJoinRequest, showNotification, isChannel, lang]);\n\n  const handleStartBot = useCallback(() => {\n    sendBotCommand({ command: '/start' });\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleJoinRequestsClick = useCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  }, [requestNextManagementScreen]);\n\n  const handleSearchClick = useCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because teact must update the state and render the async component\n      requestAnimationFrame(() => {\n        requestAnimationFrame(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  }, [isMobile, noAnimation, onTopicSearch, openLocalTextSearch, withForumActions]);\n\n  const handleAsMessagesClick = useCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  }, [chatId, openChat]);\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_PWA || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  }, [canSearch, handleSearchClick]);\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel=\"Search in this chat\"\n            >\n              <i className=\"icon-search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon-phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon-more\" />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectChatBot(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chat.fullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chat.fullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = global.settings.byKey.animationLevel === ANIMATION_LEVEL_MIN;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  }, [onFileSelect, onHide, withQuick]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    this.container.appendChild(this.video);\n    this.recalculatePositionAndSize();\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    if (!this.video) return;\n    const { size, position: { x, y } } = this.options;\n    const { width, height } = this.container.getBoundingClientRect();\n    this.video.style.left = `${Math.round(x * width)}px`;\n    this.video.style.top = `${Math.round(y * height)}px`;\n    this.video.style.width = `${size}px`;\n    this.video.style.height = `${size}px`;\n  }\n}\n","import {\n  useCallback, useEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport RLottie from '../../../../lib/rlottie/RLottie';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n  removeCustomEmojiInputRenderCallback,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { fastRaf } from '../../../../util/schedulers';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useAppLayout from '../../../../hooks/useAppLayout';\n\nconst SIZE = 1.25 * REM;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number, isMobile?: boolean) => void;\n};\n\nexport default function useInputCustomEmojis(\n  html: string,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n) {\n  const mapRef = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const { isMobile } = useAppLayout();\n\n  const removeContainers = useCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = mapRef.current.get(id);\n      if (player) {\n        player.destroy();\n        mapRef.current.delete(id);\n      }\n    });\n  }, []);\n\n  const synchronizeElements = useCallback(() => {\n    if (!inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n    const global = getGlobal();\n    const removedContainers = new Set(mapRef.current.keys());\n    const customEmojies = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojies.forEach((element) => {\n      const id = element.dataset.uniqueId!;\n      const documentId = element.dataset.documentId!;\n      if (!id) {\n        return;\n      }\n      removedContainers.delete(id);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (mapRef.current.has(id)) {\n        const player = mapRef.current.get(id)!;\n        player.updatePosition(x, y, isMobile);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n\n      const animation = createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        uniqueId: id,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        isMobile,\n      });\n      animation.play();\n\n      mapRef.current.set(id, animation);\n    });\n\n    removeContainers(Array.from(removedContainers));\n  }, [absoluteContainerRef, inputRef, isMobile, removeContainers, sharedCanvasHqRef, sharedCanvasRef]);\n\n  useEffect(() => {\n    addCustomEmojiInputRenderCallback(synchronizeElements);\n\n    return () => {\n      removeCustomEmojiInputRenderCallback(synchronizeElements);\n    };\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!html || !inputRef.current || !sharedCanvasRef.current) {\n      removeContainers(Array.from(mapRef.current.keys()));\n      return;\n    }\n\n    synchronizeElements();\n  }, [html, inputRef, removeContainers, sharedCanvasRef, synchronizeElements]);\n\n  useResizeObserver(sharedCanvasRef, synchronizeElements, true);\n\n  const freezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.pause();\n    });\n  }, []);\n\n  const unfreezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.play();\n    });\n  }, []);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nfunction createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  uniqueId,\n  mediaUrl,\n  position,\n  isHq,\n  isMobile,\n} : {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  uniqueId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  isMobile?: boolean;\n}): CustomEmojiPlayer {\n  if (customEmoji.isLottie) {\n    const lottie = RLottie.init(\n      uniqueId,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      undefined,\n      customEmoji.id,\n      mediaUrl,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n        isMobile,\n      },\n    );\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeContainer(uniqueId),\n      updatePosition: (x: number, y: number, isMobileNew?: boolean) => {\n        return lottie.setSharedCanvasCoords(uniqueId, { x, y }, isMobileNew);\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainerRef.current!, { size: SIZE, position });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport { selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n\n  useInputCustomEmojis(html, inputRef, sharedCanvasRef, sharedCanvasHqRef, absoluteContainerRef);\n\n  const maxInputHeight = isMobile ? 256 : 416;\n  const updateInputHeight = useCallback((willSend = false) => {\n    const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n    const clone = scrollerCloneRef.current!;\n    const currentHeight = Number(scroller.style.height.replace('px', ''));\n    const maxHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : maxInputHeight;\n    const newHeight = Math.min(clone.scrollHeight, maxHeight);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      scroller.style.height = `${newHeight}px`;\n      scroller.style.transitionDuration = `${transitionDuration}ms`;\n      scroller.classList.toggle('overflown', clone.scrollHeight > maxHeight);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }, [isAttachmentModalInput, maxInputHeight]);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    if (!isComposing && !html.length && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || (IS_TOUCH_ENV && isMobile)\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobile, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={buildClassName('custom-scroll', SCROLLER_CLASS)} onScroll={onScroll}>\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/environment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useOnSelectionChange from '../../../../hooks/useOnSelectionChange';\nimport useCacheBuster from '../../../../hooks/useCacheBuster';\n\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isAllowed: boolean,\n  inputSelector: string,\n  html: string,\n  onUpdateHtml: (html: string) => void,\n  stickers?: ApiSticker[],\n  isDisabled = false,\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [htmlBeforeSelection, setHtmlBeforeSelection] = useState('');\n\n  const [cacheBuster, updateCacheBuster] = useCacheBuster();\n\n  const handleSelectionChange = useCallback((range: Range) => {\n    if (range.collapsed) {\n      updateCacheBuster(); // Update tooltip on cursor move\n    }\n  }, [updateCacheBuster]);\n\n  useOnSelectionChange(inputSelector, handleSelectionChange);\n\n  useEffect(() => {\n    if (!html) {\n      setHtmlBeforeSelection('');\n      return;\n    }\n    setHtmlBeforeSelection(getHtmlBeforeSelection(document.querySelector<HTMLDivElement>(inputSelector)!));\n  }, [html, inputSelector, cacheBuster]);\n\n  const lastEmojiText = htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : ENDS_ON_EMOJI_IMG_REGEX)?.[0];\n  const hasStickers = Boolean(stickers?.length && lastEmojiText);\n\n  useEffect(() => {\n    if (isDisabled) return;\n\n    if (isAllowed && lastEmojiText) {\n      loadCustomEmojiForEmoji({\n        emoji: IS_EMOJI_SUPPORTED ? lastEmojiText : lastEmojiText.match(/.+alt=\"(.+)\"/)?.[1]!,\n      });\n    } else if (hasStickers || !lastEmojiText) {\n      clearCustomEmojiForEmoji();\n    }\n    // We omit `hasStickers` here to prevent re-fetching after manually closing tooltip (via <Esc>).\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lastEmojiText, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji, isAllowed, isDisabled]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker) => {\n    if (!lastEmojiText) return;\n    const containerEl = document.querySelector<HTMLDivElement>(inputSelector)!;\n    const regexText = IS_EMOJI_SUPPORTED ? lastEmojiText\n      // Escape regexp special chars\n      : lastEmojiText.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmojiText.length;\n\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = containerEl.innerHTML.substring(htmlBeforeSelection.length);\n    onUpdateHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestAnimationFrame(() => {\n      focusEditableElement(containerEl, true, true);\n    });\n  }, [htmlBeforeSelection, inputSelector, lastEmojiText, onUpdateHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: hasStickers,\n    closeCustomEmojiTooltip: clearCustomEmojiForEmoji,\n    insertCustomEmoji,\n  };\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDebouncedCallback from '../../../../hooks/useDebouncedCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst DEBOUNCE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):[-+_:\\p{L}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):[-+_:\\d\\wа-яё]*$/gi;\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  htmlRef: { current: string },\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n  const [filteredEmojis, setFilteredEmojisInner] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  const setFilteredEmojis = useDebouncedCallback((emojis: Emoji[]) => {\n    setFilteredEmojisInner(emojis);\n  }, [], DEBOUNCE);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  const html = htmlRef.current;\n  useEffect(() => {\n    if (isDisabled) return;\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), filteredEmojis.map((emoji) => emoji.native)),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  }, [filteredEmojis, isDisabled]);\n\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || isDisabled) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter, EMOJIS_LIMIT);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched);\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, html, isAllowed, markIsOpen, recentEmojiIds, unmarkIsOpen, setShouldForceInsertEmoji,\n    isDisabled, baseEmojiKeywords, emojiKeywords, setFilteredEmojis,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const currentHtml = htmlRef.current;\n    const atIndex = currentHtml.lastIndexOf(':', isForce ? currentHtml.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${currentHtml.substr(0, atIndex)}${renderText(textEmoji, ['emoji_html'])}`);\n      let messageInput: HTMLDivElement;\n      if (inputId === EDITABLE_INPUT_ID) {\n        messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!;\n      } else {\n        messageInput = document.getElementById(inputId) as HTMLDivElement;\n      }\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlRef, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker, isForce?: boolean) => {\n    const currentHtml = htmlRef.current;\n    const atIndex = currentHtml.lastIndexOf(':', isForce ? currentHtml.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${currentHtml.substr(0, atIndex)}${buildCustomEmojiHtml(emoji)}`);\n      let messageInput: HTMLDivElement;\n      if (inputId === EDITABLE_INPUT_ID) {\n        messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!;\n      } else {\n        messageInput = document.getElementById(inputId) as HTMLDivElement;\n      }\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlRef, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    insertCustomEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names,\n  } = library;\n\n  let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  return matched.slice(0, limit);\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useCacheBuster from '../../../../hooks/useCacheBuster';\nimport useOnSelectionChange from '../../../../hooks/useOnSelectionChange';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яё]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  inputSelector: string,\n  onUpdateHtml: (html: string) => void,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [htmlBeforeSelection, setHtmlBeforeSelection] = useState('');\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const updateFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n\n    runThrottled(() => {\n      const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n        if (member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n\n        return acc;\n      }, []);\n\n      const filteredIds = filterUsersByName(unique([\n        ...((withInlineBots && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]), usersById, filter);\n\n      setUsersToMention(Object.values(pickTruthy(usersById, filteredIds)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds]);\n\n  const [cacheBuster, updateCacheBuster] = useCacheBuster();\n\n  const handleSelectionChange = useCallback((range: Range) => {\n    if (range.collapsed) {\n      updateCacheBuster(); // Update tooltip on cursor move\n    }\n  }, [updateCacheBuster]);\n\n  useOnSelectionChange(inputSelector, handleSelectionChange);\n\n  useEffect(() => {\n    setHtmlBeforeSelection(getHtmlBeforeSelection(document.querySelector<HTMLDivElement>(inputSelector)!));\n  }, [inputSelector, cacheBuster]);\n\n  useEffect(() => {\n    if (!canSuggestMembers || !htmlBeforeSelection.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = htmlBeforeSelection.includes('@') && getUsernameFilter(htmlBeforeSelection);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      updateFilteredUsers(filter, canSuggestInlineBots(htmlBeforeSelection));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, updateFilteredUsers, markIsOpen, unmarkIsOpen, htmlBeforeSelection]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const insertedHtml = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const containerEl = document.querySelector<HTMLDivElement>(inputSelector)!;\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${insertedHtml}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(containerEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      onUpdateHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestAnimationFrame(() => {\n        focusEditableElement(containerEl, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlBeforeSelection, inputSelector, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  offsetCollapseDelta?: number;\n  withPortalForMenu?: boolean;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>, arg?: any) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  offsetCollapseDelta,\n  onMouseDown,\n  onClick,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble'),\n    [withPortalForMenu],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: withPortalForMenu }),\n    [withPortalForMenu],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [allowDisabledClick, clickArg, disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleSecondaryIconClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n    e.stopPropagation();\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  };\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      data-offset-collapse-delta={offsetCollapseDelta}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        ref={buttonRef}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n            onMouseDown={!IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n          >\n            <i className={`icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  children: React.ReactNode;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden, undefined, isFirstRender, isCustom ? false : undefined, noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        tabEl.classList.add(classNames.active);\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    prevPlatformEl.classList.remove('animate');\n    platformEl.classList.remove('animate');\n    platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n    forceReflow(platformEl);\n    platformEl.classList.add('animate');\n    platformEl.style.transform = 'none';\n\n    prevTabEl.classList.remove(classNames.active);\n    tabEl.classList.add(classNames.active);\n  }, [isActive, previousActiveTab]);\n\n  return (\n    <div\n      className={buildClassName('Tab', className)}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/environment';\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    fastSmoothScrollHorizontal(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useOnChange from './useOnChange';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useCallback, useState } from '../lib/teact/teact';\n\nconst useCacheBuster = () => {\n  const [cacheBuster, setCacheBuster] = useState<boolean>(false);\n\n  const updateCacheBuster = useCallback(() => {\n    setCacheBuster((current) => !current);\n  }, []);\n\n  return [cacheBuster, updateCacheBuster] as const;\n};\n\nexport default useCacheBuster;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\nimport fastBlur from '../lib/fastBlur';\nimport useOnChange from './useOnChange';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useOnChange(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = preferredWidth || img.width;\n      canvas.height = preferredHeight || img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${radius}px)`;\n      }\n\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, radius, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\n\nimport { IS_MULTITAB_SUPPORTED } from '../util/environment';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_MULTITAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]);\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      (e.target as HTMLElement).classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    (e.target as HTMLElement).classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        stopEvent(e);\n      }, true);\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', function cancelClickOnce(e) {\n          element.removeEventListener('mousedown', cancelClickOnce, true);\n          stopEvent(e);\n        }, true);\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n  withPortal?: boolean;\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useContextMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n      withPortal = false,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const menuRect = menuEl ? {\n      width: menuEl.offsetWidth,\n      height: menuEl.offsetHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width - rootRect.left > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n\n    const addedYForPortalPositioning = (withPortal ? triggerRect.top : 0);\n    const addedXForPortalPositioning = (withPortal ? triggerRect.left : 0);\n\n    const left = (horizontalPosition === 'left'\n      ? Math.max(MENU_POSITION_VISUAL_COMFORT_SPACE_PX, Math.min(\n        x - triggerRect.left,\n        rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX,\n      ))\n      : (x - triggerRect.left)) + addedXForPortalPositioning;\n    const top = y - triggerRect.top + addedYForPortalPositioning;\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX + addedXForPortalPositioning - triggerRect.left) - left;\n    const offsetY = (anchorY + addedYForPortalPositioning - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    handleForumPanelAnimationEnd,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (container: HTMLElement | null, isDisabled?: boolean, shouldPreventDefault = false) => {\n  useEffect(() => {\n    if (!container || isDisabled) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nconst useLayoutEffectWithPrevDeps = <T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useEffect } from '../lib/teact/teact';\n\nexport default function useOnSelectionChange(\n  inputSelector: string, callback: (range: Range) => void,\n) {\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection) return;\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      for (let i = 0; i < selection.rangeCount; i++) {\n        const range = selection.getRangeAt(i);\n        const ancestor = range.commonAncestorContainer;\n        if (inputEl.contains(ancestor)) {\n          callback(range);\n        }\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [callback, inputSelector]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n  }, [forceUpdate]);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n  }, [], ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\nimport { getServerTimeOffset } from '../util/serverTime';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport useOnChange from './useOnChange';\n\n// Allows to use state value as \"silent\" dependency in hooks (not causing updates).\n// Useful for state values that update frequently (such as controlled input value).\nexport function useStateRef<T>(value: T) {\n  const ref = useRef<T>(value);\n\n  useOnChange(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref;\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import generateIdFor from './generateIdFor';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype CallMethodData = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype OriginMessageData = CallMethodData | {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type WorkerMessageData = {\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\n// TODO Replace `any` with proper generics\nexport default class WorkerConnector {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(private worker: Worker) {\n    this.subscribe();\n  }\n\n  request(messageData: { name: string; args: any }) {\n    const { worker, requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateIdFor(requestStates);\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    worker.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.worker.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  private subscribe() {\n    const { worker, requestStates } = this;\n\n    worker.addEventListener('message', ({ data }: WorkerMessageEvent) => {\n      if (data.type === 'methodResponse') {\n        const requestState = requestStates.get(data.messageId);\n        if (requestState) {\n          if (data.error) {\n            requestState.reject(data.error);\n          } else {\n            requestState.resolve(data.response);\n          }\n        }\n      } else if (data.type === 'methodCallback') {\n        const requestState = requestStates.get(data.messageId);\n        requestState?.callback?.(...data.callbackArgs);\n      } else if (data.type === 'unhandledError') {\n        throw new Error(data.error?.message);\n      }\n    });\n  }\n}\n","import { DPR, IS_SAFARI, IS_ANDROID } from '../../util/environment';\nimport WorkerConnector from '../../util/WorkerConnector';\nimport { animate } from '../../util/animation';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { fastRaf } from '../../util/schedulers';\n\ninterface Params {\n  noLoop?: boolean;\n  size?: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  isMobile?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst MAX_WORKERS = 4;\nconst HIGH_PRIORITY_QUALITY_MOBILE = 0.75;\nconst HIGH_PRIORITY_QUALITY_DESKTOP = 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\n\nconst instancesById = new Map<string, RLottie>();\n\nconst workers = new Array(MAX_WORKERS).fill(undefined).map(\n  () => new WorkerConnector(new Worker(new URL('./rlottie.worker.ts', import.meta.url))),\n);\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private containers = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [container, canvas, onLoad, id, , params] = args;\n    let instance = instancesById.get(id);\n\n    if (!instance) {\n      // eslint-disable-next-line prefer-rest-params\n      instance = new RLottie(...args);\n      instancesById.set(id, instance);\n    } else {\n      instance.addContainer(container, canvas, onLoad, params?.coords, params?.isMobile);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad: NoneToVoidFunction | undefined,\n    private id: string,\n    private tgsUrl: string,\n    private params: Params = {},\n    private customColor?: [number, number, number],\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addContainer(containerId, container, onLoad, params.coords, params.isMobile);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeContainer(containerId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.containers.get(containerId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.containers.delete(containerId);\n\n    if (!this.containers.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.containers.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number]) {\n    this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  setIsMobile(isMobile?: Params['isMobile']) {\n    this.params.isMobile = isMobile;\n  }\n\n  setSharedCanvasCoords(containerId: string, newCoords: Params['coords'], isMobile?: Params['isMobile']) {\n    const containerInfo = this.containers.get(containerId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    if (!canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false') {\n      this.setIsMobile(isMobile);\n      const sizeFactor = this.calcSizeFactor();\n      ensureCanvasSize(canvas, sizeFactor);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.dataset.isJustCleaned = 'true';\n      fastRaf(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvas.width),\n      y: Math.round((newCoords?.y || 0) * canvas.height),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords.x, containerInfo.coords.y);\n    }\n  }\n\n  private addContainer(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n    isMobile?: Params['isMobile'],\n  ) {\n    this.setIsMobile(isMobile);\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      let { size } = this.params;\n\n      if (!size) {\n        size = (\n          container.offsetWidth\n          || parseInt(container.style.width, 10)\n          || container.parentNode.offsetWidth\n        );\n\n        if (!size) {\n          throw new Error('[RLottie] Failed to detect width from container');\n        }\n      }\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d')!;\n\n      canvas.style.width = `${size}px`;\n      canvas.style.height = `${size}px`;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      canvas.width = imgSize;\n      canvas.height = imgSize;\n\n      container.appendChild(canvas);\n\n      this.containers.set(containerId, {\n        canvas, ctx, onLoad,\n      });\n    } else {\n      if (!container.isConnected) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      ensureCanvasSize(canvas, sizeFactor);\n\n      imgSize = Math.round(this.params.size! * sizeFactor);\n\n      this.containers.set(containerId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round((coords?.x || 0) * canvas.width),\n          y: Math.round((coords?.y || 0) * canvas.height),\n        },\n        onLoad,\n      });\n    }\n\n    if (!this.imgSize) {\n      this.imgSize = imgSize;\n      this.imageData = new ImageData(imgSize, imgSize);\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      isLowPriority,\n      size,\n      isMobile,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY\n        : (isMobile ? HIGH_PRIORITY_QUALITY_MOBILE : HIGH_PRIORITY_QUALITY_DESKTOP),\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(DPR * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesById.delete(this.id);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    workers[this.workerIndex].request({\n      name: 'init',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    workers[this.workerIndex].request({\n      name: 'destroy',\n      args: [this.id],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    workers[this.workerIndex].request({\n      name: 'changeData',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.params.isLowPriority,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.containers.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.containers.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = Math.min(1, (this.direction * this.speed) / currentSpeed);\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    workers[this.workerIndex].request({\n      name: 'renderFrames',\n      args: [this.id, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    canvas.width = expectedWidth;\n    canvas.height = expectedHeight;\n  }\n}\n\nexport default RLottie;\n","import { getActions, getGlobal } from '../global';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  let initialTouchCenter = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    initialTouchCenter = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1) {\n        onWheelDrag(e);\n      } else if (isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './environment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\nimport { fastRaf } from './schedulers';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  fastRaf(() => {\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n\n      container.scrollTop = Math.round(target - currentPath);\n\n      isAnimating = t < 1;\n\n      if (!isAnimating) {\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    });\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  return scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return Promise.resolve();\n  }\n\n  let isStopped = false;\n  const id = Math.random().toString();\n  container.dataset.scrollId = id;\n  stopById.set(id, () => {\n    isStopped = true;\n  });\n\n  container.style.scrollSnapType = 'none';\n\n  let resolve: VoidFunction;\n  const promise = new Promise<void>((r) => {\n    resolve = r;\n  });\n  const startAt = Date.now();\n\n  animate(() => {\n    if (isStopped) return false;\n\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    if (t >= 1) {\n      container.style.scrollSnapType = '';\n      container.dataset.scrollId = undefined;\n      stopById.delete(id);\n      resolve();\n    }\n    return t < 1;\n  });\n\n  return promise;\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './environment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<b>$3</b>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<i>$3</i>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    '$1<s>$3</s>$5',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)(\\s|$)/g,\n    `$1<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$3</span>$5`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const fragmentEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n  replaceChildren(fragmentEl, range.cloneContents());\n\n  return fragmentEl.innerHTML;\n}\n\nfunction replaceChildren(el: HTMLElement, nodes?: DocumentFragment) {\n  if (el.replaceChildren === undefined) {\n    while (el.lastChild) {\n      el.removeChild(el.lastChild);\n    }\n    if (nodes !== undefined) {\n      el.append(nodes);\n    }\n  } else {\n    el.replaceChildren(nodes || '');\n  }\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","activeGroupCallId","selectTabState","isMasterTab","groupCalls","undefined","usersById","users","byId","chatsById","chats","isActive","participantsCount","isLoaded","isCallNotEmpty","isCallActive","id","animationLevel","settings","byKey","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","Object","values","filter","_","i","map","isUser","user","Boolean","useEffect","subscribed","buildClassName","onClick","p","key","round","text","prevText","usePrevious","forceUpdate","useForceUpdate","isAnimatingRef","useRef","shouldAnimate","getGlobal","ANIMATION_LEVEL_MAX","textElement","elements","length","push","current","useTimeout","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","useFlag","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","add","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","noTransition","renderWaveform","canvas","spikes","progress","peak","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","Math","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","decodeWaveform","encoded5bit","bitsCount","valuesCount","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","newData","springFactor","leftFiller","rightFiller","idx","val","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","getSeeklineSpikeAmounts","isMobile","withAvatar","MIN_SPIKES","matches","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","canvasRef","waveform","min","durationFactor","spikesCount","Uint8Array","useLayoutEffect","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","captureEvents","onCapture","onRelease","onDrag","transcribeSvgMemo","dangerouslySetInnerHTML","__html","renderFirstLine","title","fileName","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","svgMemo","onClickTranscribe","draggable","renderVoice","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","fullInfo","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","description","bio","getChatDescription","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","href","TME_LINK_PREFIX","stopEvent","publicLink","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","header","isSavedMessages","withVideo","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","fakeType","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","alt","VERIFIED_ICON","peer","noVerified","noFake","withEmojiStatus","emojiStatusSize","noLoopLimit","onEmojiStatusClick","getUserFullName","emojiStatus","isPremium","isVerified","FakeIcon","CustomEmoji","documentId","loopLimit","EMOJI_STATUS_LOOP_LIMIT","observeIntersectionForLoading","PremiumIcon","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","withVideoAvatar","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","activeKey","DEFAULT_TEXT","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","IS_TOUCH_ENV","focus","requestAnimationFrame","select","action","event","preventDefault","autoComplete","type","tabIndex","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","shouldMinimize","setTimeout","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","isMinimized","canClose","clickArg","items","iconElement","titleText","PREMIUM_ICON","store","withGradient","big","html","generateIdFor","getPremiumIconGradient","userStatus","selectUserStatus","noStatusOrTyping","adminMember","customTitle","isOwner","isUserOnline","getUserStatus","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","currentPhoto","personalPhoto","profilePhoto","fallbackPhoto","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","mediaViewer","currentTopicId","openPremiumModal","photos","MEMO_EMPTY_ARRAY","prevMediaId","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","TopicIcon","letterClassName","renderPhotoTabs","Avatar","Transition","renderPhoto","FullNameTitle","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","observeIntersectionForPlaying","blankUrl","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","options","selected","noAnimate","noContextMenu","canViewSet","isCurrentUserPremium","sharedCanvasRef","onFaveClick","onUnfaveClick","onRemoveRecentClick","openStickerSet","customColor","setCustomColor","hasCustomColor","shouldUseTextColor","hexColor","getPropertyHexColor","getComputedStyle","customColorRgb","hexToRgb","r","g","b","isCustomEmoji","hasEffect","stickerSetInfo","isLocked","shouldPlay","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useContextMenuPosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","shouldShowCloseButton","contextMenuItems","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","containerRef","isSmall","shouldLoop","shouldPreloadPreview","noPlay","withSharedAnimation","autoClose","iconEmojiId","iconColor","typingUser","typingUserName","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","isUnread","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","isForumPanelActive","selectIsForumPanelOpen","Badge","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","MAIN_THREAD_ID","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","statusEmoji","customEmojis","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","isEmojiStatusColored","folderId","orderDiff","animationType","offsetTop","offsetCollapseDelta","onDragEnter","openChat","focusLastMessage","loadTopics","openForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","shouldReplaceHistory","forceOnHeavyAnimation","handleDragEnter","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","ListItem","withPortalForMenu","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","isForumPanelOpen","openNextChat","shouldIgnoreDragRef","resolvedFolderId","ALL_FOLDER_ID","ARCHIVED_FOLDER_ID","useFolderManagerForOrderedIds","orderDiffById","getAnimationType","useChatOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_PWA","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","position","Number","observe","useIntersectionObserver","rootRef","throttleMs","chatEls","from","querySelectorAll","chatEl","dataset","transform","fastRaf","classList","remove","ANIMATION_END_DELAY","useCollapseWithForumPanel","useDebouncedCallback","handleDragLeave","viewportOffsetPx","viewportOffset","reduce","CHAT_HEIGHT_FORUM_PX","CHAT_HEIGHT_PX","InfiniteScroll","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","pinnedCount","getPinnedChatsCount","currentChatListHeight","expendedOffsetTop","collapsedOffsetTop","teactOrderKey","getOrderKey","renderChats","Loading","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","handler","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","compact","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","isHidden","onTopicSearch","closeForumPanel","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","captureEscKeyListener","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","withForumActions","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","TypingStatus","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","isSpoiler","renderSummary","opacity","orderById","prevOrderById","mapValues","order","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","selectIsInSelectMode","noMenu","bot","selectChatBot","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","ANIMATION_LEVEL_MIN","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","CustomEmojiTooltip","CustomSend","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","clearTimeout","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","this","createElement","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","SCROLLER_CLASS","IGNORE_KEYS","messageSendKeyCombo","replyingToId","selectReplyingToId","isSelectModeActive","captionLimit","isAttachmentModalInput","editableInputId","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","mapRef","Map","removeContainers","ids","player","get","delete","synchronizeElements","removedContainers","keys","uniqueId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","animation","isLottie","lottie","RLottie","coords","isLowPriority","removeContainer","isMobileNew","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","set","addCustomEmojiInputRenderCallback","removeCustomEmojiInputRenderCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","scroller","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","exec","toggle","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","IS_ANDROID","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","File","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","ENDS_ON_EMOJI_IMG_REGEX","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isAllowed","inputSelector","onUpdateHtml","stickers","isDisabled","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","htmlBeforeSelection","setHtmlBeforeSelection","cacheBuster","updateCacheBuster","useCacheBuster","handleSelectionChange","range","collapsed","useOnSelectionChange","getHtmlBeforeSelection","lastEmojiText","hasStickers","insertCustomEmoji","containerEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","cache","WeakMap","memoized","fn","cached","args","areSortedArraysEqual","lastArgs","lastResult","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","prepareRecentEmojisMemo","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","searchInLibraryMemo","library","matched","matchedKeywords","keyword","sort","flat","matchedNames","unique","useEmojiTooltip","htmlRef","markIsOpen","unmarkIsOpen","setById","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojisInner","filteredCustomEmojis","setFilteredCustomEmojis","setFilteredEmojis","ensureEmojiData","then","uniqueByField","selectCustomEmojiForEmojis","native","getEmojiCode","forceSend","endsWith","substr","insertEmoji","textEmoji","isForce","currentHtml","atIndex","lastIndexOf","messageInput","EDITABLE_INPUT_CSS_SELECTOR","getElementById","isEmojiTooltipOpen","closeEmojiTooltip","default","uncompressEmoji","runThrottled","throttle","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","updateFilteredUsers","withInlineBots","memberIds","member","filteredIds","filterUsersByName","usernameFilter","getUsernameFilter","insertMention","forceFocus","insertedHtml","fixedHtmlBeforeSelection","cleanWebkitNewLines","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","timeoutRef","useOnChange","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","cropperResultOptions","quality","format","circle","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","offsetHeight","enableZoom","boundary","viewport","blobToDataUri","bind","err","DEBUG","console","initCropper","ensureCroppie","handleCropClick","croppedImg","blobToFile","hasCloseButton","children","buttonClassName","buttonRef","leftElement","secondaryIcon","rightElement","allowDisabledClick","onSecondaryIconClick","isTouched","markIsTouched","unmarkIsTouched","getLayout","withPortal","handleSecondaryIconClick","handleMouseDown","DEFAULT_DURATION","onDismiss","actionText","actions","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","hidden","loadingOption","step","renderValue","mainClassName","trackWidth","index","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","noCloseTransition","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","variant","forceAspectRatio","inline","classNames","onCheck","isBlocked","badgeCount","isBadgeActive","previousActiveTab","tabRef","tabEl","prevTabEl","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","tabs","areFolders","activeTab","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","fastSmoothScrollHorizontal","tab","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","useReducer","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","useEffectWithPrevDeps","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","setCacheBuster","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","openChatInNewTab","actionOpenInNewTab","IS_MULTITAB_SUPPORTED","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","timer","clearLongPressTimer","startLongPressTimer","originalEvent","touches","cancelClickOnce","emulateContextMenuEvent","passive","EMPTY_RECT","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","marginTop","parseInt","menuRect","rootRect","horizontalPosition","verticalPosition","triggerRect","addedYForPortalPositioning","addedXForPortalPositioning","menuMaxHeight","offsetX","offsetY","replyOriginForId","loadMessage","loadMessageThrottled","throttled","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","handleForumPanelAnimationEnd","shouldRenderForumPanel","shouldPreventDefault","handleScroll","deltaX","deltaY","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","shift","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","documentElement","runCallbacks","isConnected","debugKey","prevDeps","idRef","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","Date","now","spentTime","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","callback","onSelectionChange","inputEl","ancestor","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","ms","noFirst","noLast","CalendarModal","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","useStateRef","savedCallback","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","mul_sum","shg_sum","vmin","vmax","putImageData","WorkerConnector","worker","subscribe","request","messageData","requestStates","requestStatesByCallback","requestState","promise","reject","assign","withCallback","pop","catch","finally","postMessage","cancelCallback","progressCallback","isCanceled","response","callbackArgs","WAITING","Symbol","HIGH_PRIORITY_QUALITY_MOBILE","HIGH_PRIORITY_QUALITY_DESKTOP","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","IS_SAFARI","instancesById","workers","Worker","URL","lastWorkerIndex","static","params","instance","addContainer","onEnded","onLoop","initConfig","initRenderer","isSharedCanvas","containers","clearRect","imgSize","isAnimating","isWaiting","forceRestart","isPaused","isEnded","approxFrameIndex","stopFrameIndex","doPlay","every","frames","frame","prevFrameIndex","close","playSegment","startFrameIndex","reduceFactor","setSpeed","speed","setNoLoop","setIsMobile","newCoords","containerInfo","isJustCleaned","sizeFactor","calcSizeFactor","ensureCanvasSize","getFrame","HTMLDivElement","ImageData","isRendererInited","DPR","isDestroyed","clearCache","destroyRenderer","cacheModulo","setColor","newColor","workerIndex","cycleRestrict","onRendererInit","msPerFrame","framesCount","changeData","onChangeData","lastRenderAt","animate","frameIndex","requestFrame","cleanupPrevFrame","containerData","currentSpeed","delta","expectedNextFrameIndex","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","expectedHeight","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","currentId","queue","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","a","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","t","newSum","oldAverage","newAverage","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","initialTouchCenter","innerWidth","innerHeight","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","withCursor","body","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","rgb2hex","p0","rgb2hsb","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","preloadImage","naturalHeight","naturalWidth","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","fastSmoothScroll","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","calculateScrollFrom","FocusDirection","scrollWithJs","isAnimatingScroll","elementTop","scrollTop","offset","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","currentPath","stopById","containerWidth","scrollId","isStopped","random","scrollSnapType","force","forcePlaceCaretAtEnd","activeElement","createRange","lastChild","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","windowSize","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","ENTITY_CLASS_BY_NODE_NAME","INS","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parseMarkdown","parseMarkdownLinks","fixImageContent","innerText","trimShift","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","getEntityDataFromNode","hasChildNodes","parsedHtml","RE_LINK_TEMPLATE","rawText","nodeName","getEntityTypeFromNode","rawIndex","language","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","nodes","append","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange","click"],"sourceRoot":""}