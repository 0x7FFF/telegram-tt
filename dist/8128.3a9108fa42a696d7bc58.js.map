{"version":3,"file":"8128.3a9108fa42a696d7bc58.js","mappings":"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","sources":["webpack://telegram-t/webpack/runtime/chunk loaded","webpack://telegram-t/webpack/runtime/startup chunk dependencies","webpack://telegram-t/./src/config.ts","webpack://telegram-t/./src/util/createPostMessageInterface.ts","webpack://telegram-t/./src/util/callbacks.ts","webpack://telegram-t/./src/lib/rlottie/rlottie.worker.ts","webpack://telegram-t/./src/lib/video-preview/requestPart.ts","webpack://telegram-t/./src/lib/video-preview/MP4Demuxer.ts","webpack://telegram-t/./src/util/generateUniqueId.ts","webpack://telegram-t/./src/util/schedulers.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/encoded-video-chunk.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/encoded-audio-chunk.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/video-frame.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/libav.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/misc.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/video-decoder.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/rendering.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/config.ts","webpack://telegram-t/./src/lib/video-preview/video-preview.worker.ts","webpack://telegram-t/./src/lib/video-preview/polyfill/index.ts","webpack://telegram-t/webpack/bootstrap","webpack://telegram-t/webpack/runtime/ensure chunk","webpack://telegram-t/webpack/runtime/get javascript chunk filename","webpack://telegram-t/webpack/runtime/get mini-css chunk filename","webpack://telegram-t/webpack/runtime/global","webpack://telegram-t/webpack/runtime/hasOwnProperty shorthand","webpack://telegram-t/webpack/runtime/publicPath","webpack://telegram-t/webpack/runtime/importScripts chunk loading","webpack://telegram-t/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(5802),\n\t\t__webpack_require__.e(2041)\n\t]).then(next);\n};","import type { ApiLimitType } from './global/types';\n\nexport const APP_NAME = process.env.APP_NAME || 'Telegram Web A';\nexport const RELEASE_DATETIME = process.env.RELEASE_DATETIME;\n\nexport const PRODUCTION_HOSTNAME = 'web.telegram.org';\nexport const PRODUCTION_URL = 'https://web.telegram.org/a';\n\nexport const IS_MOCKED_CLIENT = process.env.APP_MOCKED_CLIENT === '1';\nexport const IS_TEST = process.env.APP_ENV === 'test';\nexport const IS_PERF = process.env.APP_ENV === 'perf';\nexport const IS_BETA = process.env.APP_ENV === 'staging';\nexport const IS_ELECTRON = process.env.IS_ELECTRON;\n\nexport const DEBUG = process.env.APP_ENV !== 'production';\nexport const DEBUG_MORE = false;\nexport const DEBUG_LOG_FILENAME = 'tt-log.json';\nexport const STRICTERDOM_ENABLED = DEBUG && !IS_ELECTRON;\n\nexport const BETA_CHANGELOG_URL = 'https://telegra.ph/WebA-Beta-03-20';\nexport const ELECTRON_HOST_URL = process.env.ELECTRON_HOST_URL!;\n\nexport const DEBUG_ALERT_MSG = 'Shoot!\\nSomething went wrong, please see the error details in Dev Tools Console.';\nexport const DEBUG_GRAMJS = false;\n\nexport const PAGE_TITLE = process.env.APP_TITLE!;\nexport const INACTIVE_MARKER = '[Inactive]';\n\nexport const DEBUG_PAYMENT_SMART_GLOCAL = false;\n\nexport const SESSION_USER_KEY = 'user_auth';\nexport const LEGACY_SESSION_KEY = 'GramJs:sessionId';\nexport const PASSCODE_CACHE_NAME = 'tt-passcode';\n\nexport const GLOBAL_STATE_CACHE_DISABLED = false;\nexport const GLOBAL_STATE_CACHE_KEY = 'tt-global-state';\nexport const GLOBAL_STATE_CACHE_USER_LIST_LIMIT = 500;\nexport const GLOBAL_STATE_CACHE_CHAT_LIST_LIMIT = 200;\nexport const GLOBAL_STATE_CACHE_CHATS_WITH_MESSAGES_LIMIT = 30;\nexport const GLOBAL_STATE_CACHE_CUSTOM_EMOJI_LIMIT = 150;\n\nexport const MEDIA_CACHE_DISABLED = false;\nexport const MEDIA_CACHE_NAME = 'tt-media';\nexport const MEDIA_CACHE_NAME_AVATARS = 'tt-media-avatars';\nexport const MEDIA_PROGRESSIVE_CACHE_DISABLED = false;\nexport const MEDIA_PROGRESSIVE_CACHE_NAME = 'tt-media-progressive';\nexport const CUSTOM_EMOJI_PREVIEW_CACHE_DISABLED = false;\nexport const CUSTOM_EMOJI_PREVIEW_CACHE_NAME = 'tt-custom-emoji-preview';\nexport const MEDIA_CACHE_MAX_BYTES = 512 * 1024; // 512 KB\nexport const CUSTOM_BG_CACHE_NAME = 'tt-custom-bg';\nexport const LANG_CACHE_NAME = 'tt-lang-packs-v19';\nexport const ASSET_CACHE_NAME = 'tt-assets';\nexport const AUTODOWNLOAD_FILESIZE_MB_LIMITS = [1, 5, 10, 50, 100, 500];\nexport const DATA_BROADCAST_CHANNEL_NAME = 'tt-global';\nexport const ESTABLISH_BROADCAST_CHANNEL_NAME = 'tt-establish';\nexport const MULTITAB_LOCALSTORAGE_KEY = 'tt-multitab';\n\nexport const DOWNLOAD_WORKERS = 16;\nexport const UPLOAD_WORKERS = 16;\n\nconst isBigScreen = typeof window !== 'undefined' && window.innerHeight >= 900;\n\nexport const MIN_PASSWORD_LENGTH = 1;\n\nexport const MESSAGE_LIST_SLICE = isBigScreen ? 60 : 40;\nexport const MESSAGE_LIST_VIEWPORT_LIMIT = MESSAGE_LIST_SLICE * 2;\n\nexport const ARCHIVE_MINIMIZED_HEIGHT = 36;\nexport const CHAT_HEIGHT_PX = 72;\nexport const TOPIC_HEIGHT_PX = 65;\nexport const CHAT_LIST_SLICE = isBigScreen ? 30 : 25;\nexport const CHAT_LIST_LOAD_SLICE = 100;\nexport const SHARED_MEDIA_SLICE = 42;\nexport const MESSAGE_SEARCH_SLICE = 42;\nexport const GLOBAL_SEARCH_SLICE = 20;\nexport const GLOBAL_TOPIC_SEARCH_SLICE = 5;\nexport const MEMBERS_SLICE = 30;\nexport const MEMBERS_LOAD_SLICE = 200;\nexport const PINNED_MESSAGES_LIMIT = 50;\nexport const BLOCKED_LIST_LIMIT = 100;\nexport const PROFILE_PHOTOS_LIMIT = 40;\nexport const PROFILE_SENSITIVE_AREA = 500;\nexport const TOPIC_LIST_SENSITIVE_AREA = 600;\nexport const COMMON_CHATS_LIMIT = 100;\nexport const GROUP_CALL_PARTICIPANTS_LIMIT = 100;\n\n// As in Telegram for Android\n// https://github.com/DrKLO/Telegram/blob/51e9947527/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L7799\nexport const TOP_REACTIONS_LIMIT = 100;\n\n// As in Telegram for Android\n// https://github.com/DrKLO/Telegram/blob/51e9947527/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L7781\nexport const RECENT_REACTIONS_LIMIT = 50;\nexport const REACTION_LIST_LIMIT = 100;\nexport const REACTION_UNREAD_SLICE = 100;\nexport const MENTION_UNREAD_SLICE = 100;\nexport const TOPICS_SLICE = 20;\nexport const TOPICS_SLICE_SECOND_LOAD = 500;\n\nexport const TOP_CHAT_MESSAGES_PRELOAD_LIMIT = 20;\n\nexport const SPONSORED_MESSAGE_CACHE_MS = 300000; // 5 min\n\nexport const DEFAULT_VOLUME = 1;\nexport const DEFAULT_PLAYBACK_RATE = 1;\nexport const PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION = 20 * 60; // 20 min\n\nexport const ANIMATION_LEVEL_CUSTOM = -1;\nexport const ANIMATION_LEVEL_MIN = 0;\nexport const ANIMATION_LEVEL_MED = 1;\nexport const ANIMATION_LEVEL_MAX = 2;\nexport const ANIMATION_LEVEL_DEFAULT = ANIMATION_LEVEL_MAX;\n\nexport const DEFAULT_MESSAGE_TEXT_SIZE_PX = 16;\nexport const IOS_DEFAULT_MESSAGE_TEXT_SIZE_PX = 17;\nexport const MACOS_DEFAULT_MESSAGE_TEXT_SIZE_PX = 15;\n\nexport const DRAFT_DEBOUNCE = 10000; // 10s\nexport const SEND_MESSAGE_ACTION_INTERVAL = 3000; // 3s\n// 10000s from https://corefork.telegram.org/api/url-authorization#automatic-authorization\nexport const APP_CONFIG_REFETCH_INTERVAL = 10000 * 1000;\n\nexport const EDITABLE_INPUT_ID = 'editable-message-text';\nexport const EDITABLE_INPUT_MODAL_ID = 'editable-message-text-modal';\n// eslint-disable-next-line max-len\nexport const EDITABLE_INPUT_CSS_SELECTOR = `.messages-layout .Transition_slide-active #${EDITABLE_INPUT_ID}, .messages-layout .Transition > .Transition_slide-to #${EDITABLE_INPUT_ID}`;\nexport const EDITABLE_INPUT_MODAL_CSS_SELECTOR = `#${EDITABLE_INPUT_MODAL_ID}`;\n\nexport const CUSTOM_APPENDIX_ATTRIBUTE = 'data-has-custom-appendix';\nexport const MESSAGE_CONTENT_CLASS_NAME = 'message-content';\nexport const MESSAGE_CONTENT_SELECTOR = '.message-content';\n\n// Screen width where Pinned Message / Audio Player in the Middle Header can be safely displayed\nexport const SAFE_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN = 1440; // px\n// Screen width where Pinned Message / Audio Player in the Middle Header shouldn't collapse with ChatInfo\nexport const SAFE_SCREEN_WIDTH_FOR_CHAT_INFO = 1150; // px\n\nexport const MIN_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN = 1275; // px\nexport const MIN_SCREEN_WIDTH_FOR_STATIC_LEFT_COLUMN = 925; // px\nexport const MAX_SCREEN_WIDTH_FOR_EXPAND_PINNED_MESSAGES = 1340; // px\nexport const MOBILE_SCREEN_MAX_WIDTH = 600; // px\nexport const MOBILE_SCREEN_LANDSCAPE_MAX_WIDTH = 950; // px\nexport const MOBILE_SCREEN_LANDSCAPE_MAX_HEIGHT = 450; // px\n\nexport const MAX_INT_32 = 2 ** 31 - 1;\nexport const TMP_CHAT_ID = '0';\n\nexport const ANIMATION_END_DELAY = 100;\n\nexport const FAST_SMOOTH_MIN_DURATION = 300;\nexport const FAST_SMOOTH_MAX_DURATION = 600;\nexport const FAST_SMOOTH_MAX_DISTANCE = 750;\nexport const FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE = 300; // px\n\n// Average duration of message sending animation\nexport const API_UPDATE_THROTTLE = Math.round((FAST_SMOOTH_MIN_DURATION + FAST_SMOOTH_MAX_DURATION) / 2);\nexport const API_THROTTLE_RESET_UPDATES = new Set([\n  'newMessage', 'newScheduledMessage', 'deleteMessages', 'deleteScheduledMessages', 'deleteHistory',\n]);\n\nexport const LOCK_SCREEN_ANIMATION_DURATION_MS = 200;\n\nexport const STICKER_SIZE_INLINE_DESKTOP_FACTOR = 13;\nexport const STICKER_SIZE_INLINE_MOBILE_FACTOR = 11;\nexport const STICKER_SIZE_AUTH = 160;\nexport const STICKER_SIZE_AUTH_MOBILE = 120;\nexport const STICKER_SIZE_PICKER = 72;\nexport const EMOJI_SIZE_PICKER = 36;\nexport const COMPOSER_EMOJI_SIZE_PICKER = 32;\nexport const STICKER_SIZE_GENERAL_SETTINGS = 48;\nexport const STICKER_SIZE_PICKER_HEADER = 32;\nexport const STICKER_PICKER_MAX_SHARED_COVERS = 20;\nexport const STICKER_SIZE_SEARCH = 72;\nexport const STICKER_SIZE_MODAL = 72;\nexport const EMOJI_SIZE_MODAL = 36;\nexport const STICKER_SIZE_TWO_FA = 160;\nexport const STICKER_SIZE_PASSCODE = 160;\nexport const STICKER_SIZE_DISCUSSION_GROUPS = 140;\nexport const STICKER_SIZE_FOLDER_SETTINGS = 100;\nexport const STICKER_SIZE_INLINE_BOT_RESULT = 100;\nexport const STICKER_SIZE_JOIN_REQUESTS = 140;\nexport const STICKER_SIZE_INVITES = 140;\nexport const RECENT_STICKERS_LIMIT = 20;\nexport const RECENT_STATUS_LIMIT = 20;\nexport const EMOJI_STATUS_LOOP_LIMIT = 2;\nexport const EMOJI_SIZES = 7;\nexport const TOP_SYMBOL_SET_ID = 'top';\nexport const POPULAR_SYMBOL_SET_ID = 'popular';\nexport const RECENT_SYMBOL_SET_ID = 'recent';\nexport const FAVORITE_SYMBOL_SET_ID = 'favorite';\nexport const CHAT_STICKER_SET_ID = 'chatStickers';\nexport const PREMIUM_STICKER_SET_ID = 'premium';\nexport const DEFAULT_TOPIC_ICON_STICKER_ID = 'topic-default-icon';\nexport const DEFAULT_STATUS_ICON_ID = 'status-default-icon';\nexport const EMOJI_IMG_REGEX = /<img[^>]+alt=\"([^\"]+)\"(?![^>]*data-document-id)[^>]*>/gm;\n\nexport const BASE_EMOJI_KEYWORD_LANG = 'en';\n\nexport const MENU_TRANSITION_DURATION = 200;\nexport const SLIDE_TRANSITION_DURATION = 450;\n\nexport const VIDEO_MOV_TYPE = 'video/quicktime';\nexport const VIDEO_WEBM_TYPE = 'video/webm';\n\nexport const GIF_MIME_TYPE = 'image/gif';\n\nexport const SUPPORTED_IMAGE_CONTENT_TYPES = new Set([\n  'image/png', 'image/jpeg', GIF_MIME_TYPE,\n]);\n\nexport const SUPPORTED_VIDEO_CONTENT_TYPES = new Set([\n  'video/mp4', // video/quicktime added dynamically in environment.ts\n]);\n\nexport const SUPPORTED_AUDIO_CONTENT_TYPES = new Set([\n  'audio/mp3',\n  'audio/ogg',\n  'audio/wav',\n  'audio/mpeg',\n  'audio/flac',\n  'audio/aac',\n  'audio/m4a',\n  'audio/mp4',\n  'audio/x-m4a',\n]);\n\nexport const CONTENT_TYPES_WITH_PREVIEW = new Set([\n  ...SUPPORTED_IMAGE_CONTENT_TYPES,\n  ...SUPPORTED_VIDEO_CONTENT_TYPES,\n]);\n\nexport const CONTENT_NOT_SUPPORTED = 'The message is not supported on this version of Telegram.';\n\n// Taken from https://github.com/telegramdesktop/tdesktop/blob/41d9a9fcbd0c809c60ddbd9350791b1436aff7d9/Telegram/SourceFiles/ui/boxes/choose_language_box.cpp#L28\nexport const SUPPORTED_TRANSLATION_LANGUAGES = [\n  // Official\n  'en', 'ar', 'be', 'ca', 'zh', 'nl', 'fr', 'de', 'id',\n  'it', 'ja', 'ko', 'pl', 'pt', 'ru', 'es', 'uk',\n  // Unofficial\n  'af', 'sq', 'am', 'hy', 'az', 'eu', 'bn', 'bs', 'bg',\n  'ceb', 'zh-CN', 'zh-TW', 'co', 'hr', 'cs', 'da', 'eo',\n  'et', 'fi', 'fy', 'gl', 'ka', 'el', 'gu', 'ht', 'ha',\n  'haw', 'he', 'iw', 'hi', 'hmn', 'hu', 'is', 'ig', 'ga',\n  'jv', 'kn', 'kk', 'km', 'rw', 'ku', 'ky', 'lo', 'la',\n  'lv', 'lt', 'lb', 'mk', 'mg', 'ms', 'ml', 'mt', 'mi',\n  'mr', 'mn', 'my', 'ne', 'no', 'ny', 'or', 'ps', 'fa',\n  'pa', 'ro', 'sm', 'gd', 'sr', 'st', 'sn', 'sd', 'si',\n  'sk', 'sl', 'so', 'su', 'sw', 'sv', 'tl', 'tg', 'ta',\n  'tt', 'te', 'th', 'tr', 'tk', 'ur', 'ug', 'uz', 'vi',\n  'cy', 'xh', 'yi', 'yo', 'zu',\n];\n\n// eslint-disable-next-line max-len\nexport const RE_LINK_TEMPLATE = '((ftp|https?):\\\\/\\\\/)?((www\\\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\\\.[a-zA-Z0-9()]{1,63})\\\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)';\nexport const RE_MENTION_TEMPLATE = '(@[\\\\w\\\\d_-]+)';\nexport const RE_TG_LINK = /^tg:(\\/\\/)?/i;\nexport const RE_TME_LINK = /^(https?:\\/\\/)?([-a-zA-Z0-9@:%_+~#=]{1,32}\\.)?t\\.me/i;\nexport const RE_TELEGRAM_LINK = /^(https?:\\/\\/)?telegram\\.org\\//i;\nexport const TME_LINK_PREFIX = 'https://t.me/';\nexport const USERNAME_PURCHASE_ERROR = 'USERNAME_PURCHASE_AVAILABLE';\nexport const PURCHASE_USERNAME = 'auction';\nexport const TME_WEB_DOMAINS = new Set(['t.me', 'web.t.me', 'a.t.me', 'k.t.me', 'z.t.me']);\nexport const WEB_APP_PLATFORM = 'weba';\n\n// eslint-disable-next-line max-len\nexport const COUNTRIES_WITH_12H_TIME_FORMAT = new Set(['AU', 'BD', 'CA', 'CO', 'EG', 'HN', 'IE', 'IN', 'JO', 'MX', 'MY', 'NI', 'NZ', 'PH', 'PK', 'SA', 'SV', 'US']);\n\nexport const API_CHAT_TYPES = ['bots', 'channels', 'chats', 'users'] as const;\n\n// MTProto constants\nexport const SERVICE_NOTIFICATIONS_USER_ID = '777000';\nexport const REPLIES_USER_ID = '1271266957'; // TODO For Test connection ID must be equal to 708513\nexport const RESTRICTED_EMOJI_SET_ID = '7173162320003080';\nexport const DEFAULT_GIF_SEARCH_BOT_USERNAME = 'gif';\nexport const ALL_FOLDER_ID = 0;\nexport const ARCHIVED_FOLDER_ID = 1;\nexport const DELETED_COMMENTS_CHANNEL_ID = '-777';\nexport const MAX_MEDIA_FILES_FOR_ALBUM = 10;\nexport const MAX_ACTIVE_PINNED_CHATS = 5;\nexport const SCHEDULED_WHEN_ONLINE = 0x7FFFFFFE;\nexport const DEFAULT_LANG_CODE = 'en';\nexport const DEFAULT_LANG_PACK = 'android';\nexport const LANG_PACKS = ['android', 'ios', 'tdesktop', 'macos'] as const;\nexport const FEEDBACK_URL = 'https://bugs.telegram.org/?tag_ids=41&sort=time';\nexport const GENERAL_TOPIC_ID = 1;\n\nexport const LIGHT_THEME_BG_COLOR = '#99BA92';\nexport const DARK_THEME_BG_COLOR = '#0F0F0F';\nexport const DEFAULT_PATTERN_COLOR = '#4A8E3A8C';\nexport const DARK_THEME_PATTERN_COLOR = '#0A0A0A8C';\nexport const MAX_UPLOAD_FILEPART_SIZE = 524288;\n\n// Group calls\nexport const GROUP_CALL_VOLUME_MULTIPLIER = 100;\nexport const GROUP_CALL_DEFAULT_VOLUME = 100 * GROUP_CALL_VOLUME_MULTIPLIER;\nexport const GROUP_CALL_THUMB_VIDEO_DISABLED = true;\n\nexport const DEFAULT_LIMITS: Record<ApiLimitType, readonly [number, number]> = {\n  uploadMaxFileparts: [4000, 8000],\n  stickersFaved: [5, 10],\n  savedGifs: [200, 400],\n  dialogFiltersChats: [100, 200],\n  dialogFilters: [10, 20],\n  dialogFolderPinned: [5, 10],\n  captionLength: [1024, 2048],\n  channels: [500, 1000],\n  channelsPublic: [10, 20],\n  aboutLength: [70, 140],\n  chatlistInvites: [3, 100],\n  chatlistJoined: [2, 20],\n};\n","import type {\n  CancellableCallback, OriginMessageEvent, OriginMessageData, WorkerMessageData, ApiUpdate,\n} from './PostMessageConnector';\n\nimport { DEBUG } from '../config';\nimport { createCallbackManager } from './callbacks';\n\ndeclare const self: WorkerGlobalScope;\n\nconst callbackState = new Map<string, CancellableCallback>();\n\ntype ApiConfig =\n  ((name: string, ...args: any[]) => any | [any, ArrayBuffer[]])\n  | Record<string, Function>;\ntype SendToOrigin = (data: WorkerMessageData, transferables?: Transferable[]) => void;\n\nconst messageHandlers = createCallbackManager();\nonmessage = messageHandlers.runCallbacks;\n\nexport function createWorkerInterface(api: ApiConfig, channel?: string) {\n  function sendToOrigin(data: WorkerMessageData, transferables?: Transferable[]) {\n    data.channel = channel;\n\n    if (transferables) {\n      postMessage(data, transferables);\n    } else {\n      postMessage(data);\n    }\n  }\n\n  handleErrors(sendToOrigin);\n\n  messageHandlers.addCallback((message: OriginMessageEvent) => {\n    if (message.data?.channel === channel) {\n      onMessage(api, message.data, sendToOrigin);\n    }\n  });\n}\n\nasync function onMessage(\n  api: ApiConfig,\n  data: OriginMessageData,\n  sendToOrigin: SendToOrigin,\n  onUpdate?: (update: ApiUpdate) => void,\n) {\n  if (!onUpdate) {\n    onUpdate = (update: ApiUpdate) => {\n      sendToOrigin({\n        type: 'update',\n        update,\n      });\n    };\n  }\n\n  switch (data.type) {\n    case 'init': {\n      const { args } = data;\n      const promise = typeof api === 'function'\n        ? api('init', onUpdate, ...args)\n        : api.init?.(onUpdate, ...args);\n      await promise;\n\n      break;\n    }\n    case 'callMethod': {\n      const {\n        messageId, name, args, withCallback,\n      } = data;\n\n      try {\n        if (typeof api !== 'function' && !api[name]) return;\n\n        if (messageId && withCallback) {\n          const callback = (...callbackArgs: any[]) => {\n            const lastArg = callbackArgs[callbackArgs.length - 1];\n\n            sendToOrigin({\n              type: 'methodCallback',\n              messageId,\n              callbackArgs,\n            }, isTransferable(lastArg) ? [lastArg] : undefined);\n          };\n\n          callbackState.set(messageId, callback);\n\n          args.push(callback as never);\n        }\n\n        const response = typeof api === 'function'\n          ? await api(name, ...args)\n          : await api[name](...args);\n        const { arrayBuffer } = (typeof response === 'object' && 'arrayBuffer' in response && response) || {};\n        if (messageId) {\n          sendToOrigin(\n            {\n              type: 'methodResponse',\n              messageId,\n              response,\n            },\n            arrayBuffer ? [arrayBuffer] : undefined,\n          );\n        }\n      } catch (error: any) {\n        if (DEBUG) {\n          // eslint-disable-next-line no-console\n          console.error(error);\n        }\n\n        if (messageId) {\n          sendToOrigin({\n            type: 'methodResponse',\n            messageId,\n            error: { message: error.message },\n          });\n        }\n      }\n\n      if (messageId) {\n        callbackState.delete(messageId);\n      }\n\n      break;\n    }\n    case 'cancelProgress': {\n      const callback = callbackState.get(data.messageId);\n      if (callback) {\n        callback.isCanceled = true;\n      }\n\n      break;\n    }\n  }\n}\n\nfunction isTransferable(obj: any) {\n  return obj instanceof ArrayBuffer || obj instanceof ImageBitmap;\n}\n\nfunction handleErrors(sendToOrigin: SendToOrigin) {\n  self.onerror = (e) => {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    sendToOrigin({ type: 'unhandledError', error: { message: e.error.message || 'Uncaught exception in worker' } });\n  };\n\n  self.addEventListener('unhandledrejection', (e) => {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    sendToOrigin({ type: 'unhandledError', error: { message: e.reason.message || 'Uncaught rejection in worker' } });\n  });\n}\n","export function createCallbackManager<T extends AnyToVoidFunction = AnyToVoidFunction>() {\n  const callbacks = new Set<T>();\n\n  function addCallback(cb: T) {\n    callbacks.add(cb);\n\n    return () => {\n      removeCallback(cb);\n    };\n  }\n\n  function removeCallback(cb: T) {\n    callbacks.delete(cb);\n  }\n\n  function runCallbacks(...args: Parameters<T>) {\n    callbacks.forEach((callback) => {\n      callback(...args);\n    });\n  }\n\n  function hasCallbacks() {\n    return Boolean(callbacks.size);\n  }\n\n  return {\n    runCallbacks,\n    addCallback,\n    removeCallback,\n    hasCallbacks,\n  };\n}\n\nexport type CallbackManager<T extends AnyToVoidFunction = AnyToVoidFunction>\n  = ReturnType<typeof createCallbackManager<T>>;\n","import { inflate } from 'pako/dist/pako_inflate';\nimport { createWorkerInterface } from '../../util/createPostMessageInterface';\nimport type { CancellableCallback } from '../../util/PostMessageConnector';\n\nimportScripts(new URL('./rlottie-wasm.js', import.meta.url));\n\ndeclare const Module: any;\n\ndeclare function allocate(...args: any[]): string;\n\ndeclare function intArrayFromString(str: String): string;\n\nlet rLottieApi: Record<string, Function>;\nconst rLottieApiPromise = new Promise<void>((resolve) => {\n  Module.onRuntimeInitialized = () => {\n    rLottieApi = {\n      init: Module.cwrap('lottie_init', '', []),\n      destroy: Module.cwrap('lottie_destroy', '', ['number']),\n      resize: Module.cwrap('lottie_resize', '', ['number', 'number', 'number']),\n      buffer: Module.cwrap('lottie_buffer', 'number', ['number']),\n      render: Module.cwrap('lottie_render', '', ['number', 'number']),\n      loadFromData: Module.cwrap('lottie_load_from_data', 'number', ['number', 'number']),\n    };\n\n    resolve();\n  };\n});\n\nconst HIGH_PRIORITY_MAX_FPS = 60;\nconst LOW_PRIORITY_MAX_FPS = 30;\nconst DESTROY_REPEAT_DELAY = 1000;\n\nconst renderers = new Map<string, {\n  imgSize: number;\n  reduceFactor: number;\n  handle: any;\n  imageData: ImageData;\n  customColor?: [number, number, number];\n}>();\n\nasync function init(\n  key: string,\n  tgsUrl: string,\n  imgSize: number,\n  isLowPriority: boolean,\n  customColor: [number, number, number] | undefined,\n  onInit: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const json = await extractJson(tgsUrl);\n  const stringOnWasmHeap = allocate(intArrayFromString(json), 'i8', 0);\n  const handle = rLottieApi.init();\n  const framesCount = rLottieApi.loadFromData(handle, stringOnWasmHeap);\n  rLottieApi.resize(handle, imgSize, imgSize);\n\n  const imageData = new ImageData(imgSize, imgSize);\n\n  const { reduceFactor, msPerFrame, reducedFramesCount } = calcParams(json, isLowPriority, framesCount);\n\n  renderers.set(key, {\n    imgSize, reduceFactor, handle, imageData, customColor,\n  });\n\n  onInit(reduceFactor, msPerFrame, reducedFramesCount);\n}\n\nasync function changeData(\n  key: string,\n  tgsUrl: string,\n  isLowPriority: boolean,\n  onInit: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const json = await extractJson(tgsUrl);\n  const stringOnWasmHeap = allocate(intArrayFromString(json), 'i8', 0);\n  const { handle } = renderers.get(key)!;\n  const framesCount = rLottieApi.loadFromData(handle, stringOnWasmHeap);\n\n  const { reduceFactor, msPerFrame, reducedFramesCount } = calcParams(json, isLowPriority, framesCount);\n\n  onInit(reduceFactor, msPerFrame, reducedFramesCount);\n}\n\nasync function extractJson(tgsUrl: string) {\n  const response = await fetch(tgsUrl);\n  const contentType = response.headers.get('Content-Type');\n\n  // Support deprecated JSON format cached locally\n  if (contentType?.startsWith('text/')) {\n    return response.text();\n  }\n\n  const arrayBuffer = await response.arrayBuffer();\n  return inflate(arrayBuffer, { to: 'string' });\n}\n\nfunction calcParams(json: string, isLowPriority: boolean, framesCount: number) {\n  const animationData = JSON.parse(json);\n  const maxFps = isLowPriority ? LOW_PRIORITY_MAX_FPS : HIGH_PRIORITY_MAX_FPS;\n  const sourceFps = animationData.fr || maxFps;\n  const reduceFactor = sourceFps % maxFps === 0 ? sourceFps / maxFps : 1;\n\n  return {\n    reduceFactor,\n    msPerFrame: 1000 / (sourceFps / reduceFactor),\n    reducedFramesCount: Math.ceil(framesCount / reduceFactor),\n  };\n}\n\nasync function renderFrames(\n  key: string, frameIndex: number, onProgress: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const {\n    imgSize, reduceFactor, handle, imageData, customColor,\n  } = renderers.get(key)!;\n\n  const realIndex = frameIndex * reduceFactor;\n\n  rLottieApi.render(handle, realIndex);\n  const bufferPointer = rLottieApi.buffer(handle);\n  const data = Module.HEAPU8.subarray(bufferPointer, bufferPointer + (imgSize * imgSize * 4));\n\n  if (customColor) {\n    const arr = new Uint8ClampedArray(data);\n    applyColor(arr, customColor);\n    imageData.data.set(arr);\n  } else {\n    imageData.data.set(data);\n  }\n\n  const imageBitmap = await createImageBitmap(imageData);\n\n  onProgress(frameIndex, imageBitmap);\n}\n\nfunction applyColor(arr: Uint8ClampedArray, color: [number, number, number]) {\n  for (let i = 0; i < arr.length; i += 4) {\n    arr[i] = color[0];\n    arr[i + 1] = color[1];\n    arr[i + 2] = color[2];\n  }\n}\n\nfunction destroy(key: string, isRepeated = false) {\n  try {\n    const renderer = renderers.get(key)!;\n    rLottieApi.destroy(renderer.handle);\n    renderers.delete(key);\n  } catch (err) {\n    // `destroy` sometimes can be called before the initialization is finished\n    if (!isRepeated) {\n      setTimeout(() => destroy(key, true), DESTROY_REPEAT_DELAY);\n    }\n  }\n}\n\nconst api = {\n  'rlottie:init': init,\n  'rlottie:changeData': changeData,\n  'rlottie:renderFrames': renderFrames,\n  'rlottie:destroy': destroy,\n};\n\ncreateWorkerInterface(api);\n\nexport type RLottieApi = typeof api;\n","import generateUniqueId from '../../util/generateUniqueId';\nimport { pause } from '../../util/schedulers';\n\ndeclare const self: WorkerGlobalScope;\n\ntype RequestStates = {\n  resolve: (response: ArrayBuffer) => void;\n  reject: () => void;\n};\n\ntype RequestPartParams = { url: string; start: number; end: number };\n\nconst PART_TIMEOUT = 30000;\n\nconst requestStates = new Map<string, RequestStates>();\n\nexport function requestPart(params: RequestPartParams): Promise<ArrayBuffer | undefined> {\n  const messageId = generateUniqueId();\n  const requestState = {} as RequestStates;\n\n  let isResolved = false;\n  const promise = Promise.race([\n    pause(PART_TIMEOUT).then(() => (isResolved ? undefined : Promise.reject(new Error('ERROR_PART_TIMEOUT')))),\n    new Promise<ArrayBuffer>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    }),\n  ]);\n\n  requestStates.set(messageId, requestState);\n\n  promise\n    .catch(() => undefined)\n    .finally(() => {\n      requestStates.delete(messageId);\n      isResolved = true;\n    });\n\n  const message = {\n    type: 'requestPart',\n    messageId,\n    params,\n  };\n\n  postMessage(message);\n\n  return promise;\n}\n\nself.addEventListener('message', (e) => {\n  const { type, messageId, result } = (e as any).data as {\n    type: string;\n    messageId: string;\n    result: ArrayBuffer;\n  };\n\n  if (type === 'partResponse') {\n    const requestState = requestStates.get(messageId);\n    if (requestState) {\n      requestState.resolve(result);\n    }\n  }\n});\n","import type { MP4ArrayBuffer, MP4VideoTrack, MP4Info } from 'mp4box';\nimport MP4Box, { DataStream } from 'mp4box';\nimport { requestPart } from './requestPart';\n\nconst META_PART_SIZE = 128 * 1024;\nconst MIN_PART_SIZE = 1024;\nenum Status {\n  loading = 'loading',\n  ready = 'ready',\n  closed = 'closed',\n}\n\nexport type MP4DecoderConfig = {\n  codec: string;\n  codedHeight: number;\n  codedWidth: number;\n  description: Uint8Array;\n};\n\ntype MP4DemuxerConfig = {\n  stepOffset: number;\n  stepMultiplier: number;\n  isPolyfill: boolean;\n  maxFrames: number;\n  onConfig: (config: any) => void;\n  onChunk: (chunk: any) => void;\n};\n\nexport class MP4Demuxer {\n  private readonly url: string;\n\n  private file: MP4Box.MP4File;\n\n  private status = Status.loading;\n\n  private readonly stepOffset: number;\n\n  private readonly stepMultiplier: number;\n\n  private readonly maxFrames: number;\n\n  private readonly isPolyfill: boolean;\n\n  private decodedSamples = new Set<string>();\n\n  private lastSample = 0;\n\n  private readonly onConfig: (config: MP4DecoderConfig) => void;\n\n  private readonly onChunk: (chunk: any) => void;\n\n  constructor(url: string, {\n    onConfig,\n    onChunk,\n    stepOffset,\n    stepMultiplier,\n    isPolyfill,\n    maxFrames,\n  }: MP4DemuxerConfig) {\n    this.url = url;\n    this.stepOffset = stepOffset;\n    this.stepMultiplier = stepMultiplier;\n    this.maxFrames = maxFrames;\n    this.isPolyfill = isPolyfill;\n    this.onConfig = onConfig;\n    this.onChunk = onChunk;\n\n    this.file = MP4Box.createFile();\n    this.file.onError = (e) => {\n      // eslint-disable-next-line no-console\n      console.error(e);\n    };\n    this.file.onReady = this.onReady.bind(this);\n    this.file.onSamples = this.onSamples.bind(this);\n\n    void this.loadMetadata();\n  }\n\n  private async loadMetadata() {\n    let offset: number | undefined = 0;\n    while (offset !== undefined) {\n      try {\n        offset = await this.requestPart(offset, META_PART_SIZE);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n      if (this.status === Status.ready) break;\n    }\n  }\n\n  private async loadNextFrames(step: number, duration: number, partSize: number) {\n    let tick = step * this.stepOffset;\n    let lastSample = 0;\n    let rap = this.file.seek(tick, true);\n    while (this.status !== Status.closed) {\n      try {\n        await this.requestPart(rap.offset, partSize);\n        if (tick > duration) break;\n        if (this.lastSample > 1 && lastSample < this.lastSample) {\n          tick += step * this.stepMultiplier;\n          lastSample = this.lastSample;\n        }\n        rap = this.file.seek(tick, true);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n    }\n    this.file.flush();\n  }\n\n  private async requestPart(offset: number, partSize: number, useRap = true) {\n    const reminder = (offset % MIN_PART_SIZE);\n    const start = offset - reminder;\n    const end = start + partSize - 1;\n    let arrayBuffer = await requestPart({ url: this.url, start, end }) as MP4ArrayBuffer;\n    if (!arrayBuffer) {\n      return undefined;\n    }\n    if (reminder) {\n      arrayBuffer = arrayBuffer.slice(reminder) as MP4ArrayBuffer;\n    }\n    arrayBuffer.fileStart = offset;\n    const nextOffset = this.file.appendBuffer(arrayBuffer);\n    if (!useRap) return offset + arrayBuffer.byteLength;\n    return nextOffset;\n  }\n\n  private description(track: MP4VideoTrack) {\n    const t = this.file.getTrackById(track.id);\n    for (const entry of t.mdia.minf.stbl.stsd.entries) {\n      if (entry.avcC || entry.hvcC || entry.av1C) {\n        const stream = new DataStream(undefined, 0, DataStream.BIG_ENDIAN);\n        if (entry.avcC) {\n          entry.avcC.write(stream);\n        } else if (entry.hvcC) {\n          entry.hvcC.write(stream);\n        } else if (entry.av1C) {\n          entry.av1C.write(stream);\n        }\n        return new Uint8Array(stream.buffer, 8); // Remove the box header.\n      }\n    }\n    throw new Error('avcC, hvcC ro av1C not found');\n  }\n\n  private onReady(info: MP4Info) {\n    const track = info.videoTracks[0];\n\n    let codec = track.codec;\n    if (codec.startsWith('avc1')) {\n      // Somehow this is the only avc1 codec that works.\n      codec = 'avc1.4d001f';\n    }\n\n    // Generate and emit an appropriate VideoDecoderConfig.\n    this.onConfig({\n      codec,\n      codedHeight: track.video.height,\n      codedWidth: track.video.width,\n      description: this.description(track),\n    });\n\n    const duration = info.duration / info.timescale;\n\n    // If we set a part size too small, the onSamples callback is not called.\n    // If we use polyfill, we need to set a smaller part size to avoid decoding multiple frames.\n    const partSizeDivider = this.isPolyfill ? 24 : 12;\n    const partSize = roundPartSize(track.bitrate / partSizeDivider);\n    const step = calculateStep(duration, this.maxFrames);\n\n    // Start demuxing.\n    this.file.setExtractionOptions(track.id, undefined, { nbSamples: 1 });\n    this.file.start();\n\n    this.status = Status.ready;\n\n    // // Load frames\n    void this.loadNextFrames(step, duration, partSize);\n  }\n\n  private onSamples(trackId: number, ref: any, samples: any) {\n    if (this.status !== Status.ready) return;\n    // Generate and emit an EncodedVideoChunk for each demuxed sample.\n    for (const sample of samples) {\n      const time = sample.cts / sample.timescale;\n      const type = sample.is_sync ? 'key' : 'delta';\n      const id = `${type}${sample.number}`;\n\n      // Skip already decoded samples.\n      if (this.decodedSamples.has(id)) continue;\n\n      // @ts-ignore\n      this.onChunk(new EncodedVideoChunk({\n        type,\n        timestamp: (1e6 * time),\n        duration: (1e6 * sample.duration) / sample.timescale,\n        data: sample.data,\n      }));\n\n      this.decodedSamples.add(id);\n      this.lastSample = parseInt(sample.number, 10);\n\n      if (sample.is_sync) {\n        this.file.releaseUsedSamples(trackId, sample.number);\n      }\n    }\n  }\n\n  close() {\n    this.file.flush();\n    this.file.stop();\n    this.status = Status.closed;\n  }\n}\n\nfunction roundPartSize(size: number) {\n  return size + MIN_PART_SIZE - (size % MIN_PART_SIZE);\n}\n\nfunction calculateStep(duration: number, max: number): number {\n  return Math.round((duration + max) / max);\n}\n","export default function generateUniqueId() {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2);\n}\n","export type Scheduler = typeof requestAnimationFrame | typeof onTickEnd;\n\nexport function debounce<F extends AnyToVoidFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n  shouldRunLast = true,\n) {\n  let waitingTimeout: number | undefined;\n\n  return (...args: Parameters<F>) => {\n    if (waitingTimeout) {\n      clearTimeout(waitingTimeout);\n      waitingTimeout = undefined;\n    } else if (shouldRunFirst) {\n      fn(...args);\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    waitingTimeout = self.setTimeout(() => {\n      if (shouldRunLast) {\n        fn(...args);\n      }\n\n      waitingTimeout = undefined;\n    }, ms);\n  };\n}\n\nexport function throttle<F extends AnyToVoidFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n) {\n  let interval: number | undefined;\n  let isPending: boolean;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    isPending = true;\n    args = _args;\n\n    if (!interval) {\n      if (shouldRunFirst) {\n        isPending = false;\n        fn(...args);\n      }\n\n      // eslint-disable-next-line no-restricted-globals\n      interval = self.setInterval(() => {\n        if (!isPending) {\n          // eslint-disable-next-line no-restricted-globals\n          self.clearInterval(interval!);\n          interval = undefined;\n          return;\n        }\n\n        isPending = false;\n        fn(...args);\n      }, ms);\n    }\n  };\n}\n\nexport function throttleWithTickEnd<F extends AnyToVoidFunction>(fn: F) {\n  return throttleWith(onTickEnd, fn);\n}\n\nexport function throttleWith<F extends AnyToVoidFunction>(schedulerFn: Scheduler, fn: F) {\n  let waiting = false;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    args = _args;\n\n    if (!waiting) {\n      waiting = true;\n\n      schedulerFn(() => {\n        waiting = false;\n        fn(...args);\n      });\n    }\n  };\n}\n\nexport function onIdle(cb: NoneToVoidFunction, timeout?: number) {\n  // eslint-disable-next-line no-restricted-globals\n  if (self.requestIdleCallback) {\n    // eslint-disable-next-line no-restricted-globals\n    self.requestIdleCallback(cb, { timeout });\n  } else {\n    onTickEnd(cb);\n  }\n}\n\nexport const pause = (ms: number) => new Promise<void>((resolve) => {\n  setTimeout(() => resolve(), ms);\n});\n\nexport function rafPromise() {\n  return new Promise<void>((resolve) => {\n    fastRaf(resolve);\n  });\n}\n\nconst FAST_RAF_TIMEOUT_FALLBACK_MS = 300;\n\nlet fastRafCallbacks: Set<NoneToVoidFunction> | undefined;\nlet fastRafFallbackCallbacks: Set<NoneToVoidFunction> | undefined;\nlet fastRafFallbackTimeout: number | undefined;\n\n// May result in an immediate execution if called from another RAF callback which was scheduled\n// (and therefore is executed) earlier than RAF callback scheduled by `fastRaf`\nexport function fastRaf(callback: NoneToVoidFunction, withTimeoutFallback = false) {\n  if (!fastRafCallbacks) {\n    fastRafCallbacks = new Set([callback]);\n\n    requestAnimationFrame(() => {\n      const currentCallbacks = fastRafCallbacks!;\n\n      fastRafCallbacks = undefined;\n      fastRafFallbackCallbacks = undefined;\n\n      if (fastRafFallbackTimeout) {\n        clearTimeout(fastRafFallbackTimeout);\n        fastRafFallbackTimeout = undefined;\n      }\n\n      currentCallbacks.forEach((cb) => cb());\n    });\n  } else {\n    fastRafCallbacks.add(callback);\n  }\n\n  if (withTimeoutFallback) {\n    if (!fastRafFallbackCallbacks) {\n      fastRafFallbackCallbacks = new Set([callback]);\n    } else {\n      fastRafFallbackCallbacks.add(callback);\n    }\n\n    if (!fastRafFallbackTimeout) {\n      fastRafFallbackTimeout = window.setTimeout(() => {\n        const currentTimeoutCallbacks = fastRafFallbackCallbacks!;\n\n        if (fastRafCallbacks) {\n          currentTimeoutCallbacks.forEach(fastRafCallbacks.delete, fastRafCallbacks);\n        }\n        fastRafFallbackCallbacks = undefined;\n\n        if (fastRafFallbackTimeout) {\n          clearTimeout(fastRafFallbackTimeout);\n          fastRafFallbackTimeout = undefined;\n        }\n\n        currentTimeoutCallbacks.forEach((cb) => cb());\n      }, FAST_RAF_TIMEOUT_FALLBACK_MS);\n    }\n  }\n}\n\nlet onTickEndCallbacks: NoneToVoidFunction[] | undefined;\n\nexport function onTickEnd(callback: NoneToVoidFunction) {\n  if (!onTickEndCallbacks) {\n    onTickEndCallbacks = [callback];\n\n    Promise.resolve().then(() => {\n      const currentCallbacks = onTickEndCallbacks!;\n      onTickEndCallbacks = undefined;\n      currentCallbacks.forEach((cb) => cb());\n    });\n  } else {\n    onTickEndCallbacks.push(callback);\n  }\n}\n\nlet beforeUnloadCallbacks: NoneToVoidFunction[] | undefined;\n\nexport function onBeforeUnload(callback: NoneToVoidFunction, isLast = false) {\n  if (!beforeUnloadCallbacks) {\n    beforeUnloadCallbacks = [];\n    // eslint-disable-next-line no-restricted-globals\n    self.addEventListener('beforeunload', () => {\n      beforeUnloadCallbacks!.forEach((cb) => cb());\n    });\n  }\n\n  if (isLast) {\n    beforeUnloadCallbacks.push(callback);\n  } else {\n    beforeUnloadCallbacks.unshift(callback);\n  }\n\n  return () => {\n    beforeUnloadCallbacks = beforeUnloadCallbacks!.filter((cb) => cb !== callback);\n  };\n}\n","/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as eac from './encoded-audio-chunk';\n\nexport type EncodedVideoChunk = eac.EncodedAudioChunk;\nexport const EncodedVideoChunk = eac.EncodedAudioChunk;\nexport type EncodedVideoChunkInit = eac.EncodedAudioChunkInit;\nexport type EncodedVideoChunkType = eac.EncodedAudioChunkType;\n","/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nexport class EncodedAudioChunk {\n  constructor(init: EncodedAudioChunkInit) {\n    this.type = init.type;\n    this.timestamp = init.timestamp;\n    this.duration = init.duration || 0;\n    const data = (this._data = new Uint8Array(\n      (<any>init.data).buffer || init.data,\n      (<any>init.data).byteOffset || 0\n    ));\n    this.byteLength = data.byteLength;\n  }\n\n  readonly type: EncodedAudioChunkType;\n\n  readonly timestamp: number; // microseconds\n\n  readonly duration?: number; // microseconds\n\n  readonly byteLength: number;\n\n  private _data: Uint8Array;\n\n  // Internal\n  _libavGetData() {\n    return this._data;\n  }\n\n  copyTo(destination: BufferSource) {\n    new Uint8Array(\n      (<any>destination).buffer || destination,\n      (<any>destination).byteOffset || 0\n    ).set(this._data);\n  }\n}\n\nexport interface EncodedAudioChunkInit {\n  type: EncodedAudioChunkType;\n  timestamp: number; // microseconds\n  duration?: number; // microseconds\n  data: BufferSource;\n}\n\nexport type EncodedAudioChunkType = 'key' | 'delta';\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n// A canvas element used to convert CanvasImageSources to buffers\nlet offscreenCanvas: HTMLCanvasElement = null;\n\nexport class VideoFrame {\n  constructor(data: CanvasImageSource | BufferSource, init: VideoFrameInit | VideoFrameBufferInit) {\n    if (data instanceof ArrayBuffer || (<any>data).buffer instanceof ArrayBuffer) {\n      this._constructBuffer(<BufferSource>data, <VideoFrameBufferInit>init);\n    } else {\n      this._constructCanvas(<CanvasImageSource>data, <VideoFrameInit>init);\n    }\n  }\n\n  private _constructCanvas(image: any, init: VideoFrameInit) {\n    if (offscreenCanvas === null) {\n      offscreenCanvas = document.createElement('canvas');\n      offscreenCanvas.style.display = 'none';\n      document.body.appendChild(offscreenCanvas);\n    }\n\n    // Convert it to a buffer\n\n    // Get the width and height\n    let width = 0;\n    let height = 0;\n    if (image.naturalWidth) {\n      width = image.naturalWidth;\n      height = image.naturalHeight;\n    } else if (image.videoWidth) {\n      width = image.videoWidth;\n      height = image.videoHeight;\n    } else if (image.width) {\n      width = image.width;\n      height = image.height;\n    }\n    if (!width || !height) {\n      throw new DOMException('Could not determine dimensions', 'InvalidStateError');\n    }\n\n    // Draw it\n    offscreenCanvas.width = width;\n    offscreenCanvas.height = height;\n    const ctx = offscreenCanvas.getContext('2d');\n    ctx.clearRect(0, 0, width, height);\n    ctx.drawImage(image, 0, 0);\n    this._constructBuffer(ctx.getImageData(0, 0, width, height).data, {\n      format: 'RGBA',\n      codedWidth: width,\n      codedHeight: height,\n      timestamp: init.timestamp,\n      duration: init.duration || 0,\n      layout: [\n        {\n          offset: 0,\n          stride: width * 4\n        }\n      ],\n      displayWidth: init.displayWidth || width,\n      displayHeight: init.displayHeight || height\n    });\n  }\n\n  private _constructBuffer(data: BufferSource, init: VideoFrameBufferInit) {\n    const format = (this.format = init.format);\n    const width = (this.codedWidth = init.codedWidth);\n    const height = (this.codedHeight = init.codedHeight);\n    this.visibleRect = new DOMRect(0, 0, width, height);\n\n    const dWidth = (this.displayWidth = init.displayWidth || init.codedWidth);\n    const dHeight = (this.displayHeight = init.displayHeight || init.codedHeight);\n\n    // Account for non-square pixels\n    if (dWidth !== width || dHeight !== height) {\n      // Dubious (but correct) SAR calculation\n      this._nonSquarePixels = true;\n      this._sar_num = dWidth * height;\n      this._sar_den = dHeight * width;\n    } else {\n      this._nonSquarePixels = false;\n    }\n\n    this.timestamp = init.timestamp;\n    if (init.duration) {\n      this.duration = init.duration;\n    }\n\n    if (init.layout) {\n      this._layout = init.layout; // FIXME: Make sure it's the right size\n    } else {\n      const numPlanes_ = numPlanes(format);\n      const layout: PlaneLayout[] = [];\n      let offset = 0;\n      for (let i = 0; i < numPlanes_; i++) {\n        const sampleWidth = horizontalSubSamplingFactor(format, i);\n        const sampleHeight = verticalSubSamplingFactor(format, i);\n        const stride = ~~(width / sampleWidth);\n        layout.push({\n          offset,\n          stride\n        });\n        offset += stride * ~~(height / sampleHeight);\n      }\n      this._layout = layout;\n    }\n\n    this._data = new Uint8Array((<any>data).buffer || data, (<any>data).byteOffset || 0);\n  }\n\n  /* NOTE: These should all be readonly, but the constructor style above\n   * doesn't work with that */\n  format: VideoPixelFormat;\n\n  codedWidth: number;\n\n  codedHeight: number;\n\n  codedRect: DOMRectReadOnly;\n\n  visibleRect: DOMRectReadOnly;\n\n  displayWidth: number;\n\n  displayHeight: number;\n\n  duration: number; // microseconds\n\n  timestamp: number; // microseconds\n\n  colorSpace: VideoColorSpace;\n\n  private _layout: PlaneLayout[];\n\n  private _data: Uint8Array;\n\n  /**\n   * (Internal) Does this use non-square pixels?\n   */\n  _nonSquarePixels: boolean;\n\n  /**\n   * (Internal) If non-square pixels, the SAR (sample/pixel aspect ratio)\n   */\n  _sar_num: number;\n\n  _sar_den: number;\n\n  // Internal\n  _libavGetData() {\n    return this._data;\n  }\n\n  allocationSize(options: VideoFrameCopyToOptions = {}): number {\n    // 1. If [[Detached]] is true, throw an InvalidStateError DOMException.\n    if (this._data === null) {\n      throw new DOMException('Detached', 'InvalidStateError');\n    }\n\n    // 2. If [[format]] is null, throw a NotSupportedError DOMException.\n    if (this.format === null) {\n      throw new DOMException('Not supported', 'NotSupportedError');\n    }\n\n    /* 3. Let combinedLayout be the result of running the Parse\n     * VideoFrameCopyToOptions algorithm with options. */\n    // 4. If combinedLayout is an exception, throw combinedLayout.\n    const combinedLayout = this._parseVideoFrameCopyToOptions(options);\n\n    // 5. Return combinedLayout’s allocationSize.\n    return combinedLayout.allocationSize;\n  }\n\n  private _parseVideoFrameCopyToOptions(options: VideoFrameCopyToOptions) {\n    /* 1. Let defaultRect be the result of performing the getter steps for\n     * visibleRect. */\n    const defaultRect = this.visibleRect;\n\n    // 2. Let overrideRect be undefined.\n    // 3. If options.rect exists, assign its value to overrideRect.\n    const overrideRect: DOMRectReadOnly = options.rect\n      ? new DOMRect(options.rect.x, options.rect.y, options.rect.width, options.rect.height)\n      : null;\n\n    /* 4. Let parsedRect be the result of running the Parse Visible Rect\n     * algorithm with defaultRect, overrideRect, [[coded width]], [[coded\n     * height]], and [[format]]. */\n    // 5. If parsedRect is an exception, return parsedRect.\n    const parsedRect = this._parseVisibleRect(defaultRect, overrideRect);\n\n    // 6. Let optLayout be undefined.\n    // 7. If options.layout exists, assign its value to optLayout.\n    const optLayout = options.layout || null;\n\n    /* 8. Let combinedLayout be the result of running the Compute Layout\n     * and Allocation Size algorithm with parsedRect, [[format]], and\n     * optLayout. */\n    const combinedLayout = this._computeLayoutAndAllocationSize(parsedRect, optLayout);\n\n    // 9. Return combinedLayout.\n    return combinedLayout;\n  }\n\n  private _parseVisibleRect(defaultRect: DOMRectReadOnly, overrideRect: DOMRectReadOnly) {\n    // 1. Let sourceRect be defaultRect\n    let sourceRect = defaultRect;\n\n    // 2. If overrideRect is not undefined:\n    if (overrideRect) {\n      /* 1. If either of overrideRect.width or height is 0, return a\n       * TypeError. */\n      if (overrideRect.width === 0 || overrideRect.height === 0) {\n        throw new TypeError('Invalid rectangle');\n      }\n\n      /* 2. If the sum of overrideRect.x and overrideRect.width is\n       * greater than [[coded width]], return a TypeError. */\n      if (overrideRect.x + overrideRect.width > this.codedWidth) {\n        throw new TypeError('Invalid rectangle');\n      }\n\n      /* 3. If the sum of overrideRect.y and overrideRect.height is\n       * greater than [[coded height]], return a TypeError. */\n      if (overrideRect.y + overrideRect.height > this.codedHeight) {\n        throw new TypeError('Invalid rectangle');\n      }\n\n      // 4. Assign overrideRect to sourceRect.\n      sourceRect = overrideRect;\n    }\n\n    /* 3. Let validAlignment be the result of running the Verify Rect\n     * Sample Alignment algorithm with format and sourceRect. */\n    const validAlignment = this._verifyRectSampleAlignment(sourceRect);\n\n    // 4. If validAlignment is false, throw a TypeError.\n    if (!validAlignment) {\n      throw new TypeError('Invalid alignment');\n    }\n\n    // 5. Return sourceRect.\n    return sourceRect;\n  }\n\n  private _computeLayoutAndAllocationSize(parsedRect: DOMRectReadOnly, layout: PlaneLayout[]) {\n    // 1. Let numPlanes be the number of planes as defined by format.\n    const numPlanes_ = numPlanes(this.format);\n\n    /* 2. If layout is not undefined and its length does not equal\n     * numPlanes, throw a TypeError. */\n    if (layout && layout.length !== numPlanes_) {\n      throw new TypeError('Invalid layout');\n    }\n\n    // 3. Let minAllocationSize be 0.\n    let minAllocationSize = 0;\n\n    // 4. Let computedLayouts be a new list.\n    const computedLayouts: ComputedPlaneLayout[] = [];\n\n    // 5. Let endOffsets be a new list.\n    const endOffsets = [];\n\n    // 6. Let planeIndex be 0.\n    let planeIndex = 0;\n\n    // 7. While planeIndex < numPlanes:\n    while (planeIndex < numPlanes_) {\n      /* 1. Let plane be the Plane identified by planeIndex as defined by\n       * format. */\n\n      // 2. Let sampleBytes be the number of bytes per sample for plane.\n      const sampleBytes_ = sampleBytes(this.format, planeIndex);\n\n      /* 3. Let sampleWidth be the horizontal sub-sampling factor of each\n       * subsample for plane. */\n      const sampleWidth = horizontalSubSamplingFactor(this.format, planeIndex);\n\n      /* 4. Let sampleHeight be the vertical sub-sampling factor of each\n       * subsample for plane. */\n      const sampleHeight = verticalSubSamplingFactor(this.format, planeIndex);\n\n      /* 5. Let sampleWidthBytes be the product of multiplying\n       * sampleWidth by sampleBytes. */\n      const sampleWidthBytes = sampleWidth * sampleBytes_;\n\n      // 6. Let computedLayout be a new computed plane layout.\n      const computedLayout: ComputedPlaneLayout = {\n        destinationOffset: 0,\n        destinationStride: 0,\n\n        /* 7. Set computedLayout’s sourceTop to the result of the\n         * integer division of truncated parsedRect.y by sampleHeight. */\n        sourceTop: ~~(parsedRect.y / sampleHeight),\n\n        /* 8. Set computedLayout’s sourceHeight to the result of the\n         * integer division of truncated parsedRect.height by\n         * sampleHeight */\n        sourceHeight: ~~(parsedRect.height / sampleHeight),\n\n        /* 9. Set computedLayout’s sourceLeftBytes to the result of the\n         * integer division of truncated parsedRect.x by\n         * sampleWidthBytes. */\n        sourceLeftBytes: ~~(parsedRect.x / sampleWidthBytes),\n\n        /* 10. Set computedLayout’s sourceWidthBytes to the result of\n         * the integer division of truncated parsedRect.width by\n         * sampleWidthBytes. */\n        sourceWidthBytes: ~~(parsedRect.width / sampleWidthBytes)\n      };\n\n      // 11. If layout is not undefined:\n      if (layout) {\n        /* 1. Let planeLayout be the PlaneLayout in layout at position\n         * planeIndex. */\n        const planeLayout = layout[planeIndex];\n\n        /* 2. If planeLayout.stride is less than computedLayout’s\n         * sourceWidthBytes, return a TypeError. */\n        if (planeLayout.stride < computedLayout.sourceWidthBytes) {\n          throw new TypeError('Invalid stride');\n        }\n\n        /* 3. Assign planeLayout.offset to computedLayout’s\n         * destinationOffset. */\n        computedLayout.destinationOffset = planeLayout.offset;\n\n        /* 4. Assign planeLayout.stride to computedLayout’s\n         * destinationStride. */\n        computedLayout.destinationStride = planeLayout.stride;\n\n        // 12. Otherwise:\n      } else {\n        /* 1. Assign minAllocationSize to computedLayout’s\n         * destinationOffset. */\n        computedLayout.destinationOffset = minAllocationSize;\n\n        /* 2. Assign computedLayout’s sourceWidthBytes to\n         * computedLayout’s destinationStride. */\n        computedLayout.destinationStride = computedLayout.sourceWidthBytes;\n      }\n\n      /* 13. Let planeSize be the product of multiplying computedLayout’s\n       * destinationStride and sourceHeight. */\n      const planeSize = computedLayout.destinationStride * computedLayout.sourceHeight;\n\n      /* 14. Let planeEnd be the sum of planeSize and computedLayout’s\n       * destinationOffset. */\n      const planeEnd = planeSize + computedLayout.destinationOffset;\n\n      /* 15. If planeSize or planeEnd is greater than maximum range of\n       * unsigned long, return a TypeError. */\n      if (planeSize >= 0x100000000 || planeEnd >= 0x100000000) {\n        throw new TypeError('Plane too large');\n      }\n\n      // 16. Append planeEnd to endOffsets.\n      endOffsets.push(planeEnd);\n\n      /* 17. Assign the maximum of minAllocationSize and planeEnd to\n       * minAllocationSize. */\n      if (planeEnd > minAllocationSize) {\n        minAllocationSize = planeEnd;\n      }\n\n      // 18. Let earlierPlaneIndex be 0.\n      let earlierPlaneIndex = 0;\n\n      // 19. While earlierPlaneIndex is less than planeIndex.\n      while (earlierPlaneIndex < planeIndex) {\n        // 1. Let earlierLayout be computedLayouts[earlierPlaneIndex].\n        const earlierLayout = computedLayouts[earlierPlaneIndex];\n\n        /* 2. If endOffsets[planeIndex] is less than or equal to\n         * earlierLayout’s destinationOffset or if\n         * endOffsets[earlierPlaneIndex] is less than or equal to\n         * computedLayout’s destinationOffset, continue. */\n        if (\n          planeEnd <= earlierLayout.destinationOffset ||\n          endOffsets[earlierPlaneIndex] <= computedLayout.destinationOffset\n        ) {\n          // 3. Otherwise, return a TypeError.\n        } else {\n          throw new TypeError('Invalid plane layout');\n        }\n\n        // 4. Increment earlierPlaneIndex by 1.\n        earlierPlaneIndex++;\n      }\n\n      // 20. Append computedLayout to computedLayouts.\n      computedLayouts.push(computedLayout);\n\n      // 21. Increment planeIndex by 1.\n      planeIndex++;\n    }\n\n    /* 8. Let combinedLayout be a new combined buffer layout, initialized\n     * as follows: */\n    const combinedLayout = {\n      // 1. Assign computedLayouts to computedLayouts.\n      computedLayouts,\n\n      // 2. Assign minAllocationSize to allocationSize.\n      allocationSize: minAllocationSize\n    };\n\n    // 9. Return combinedLayout.\n    return combinedLayout;\n  }\n\n  private _verifyRectSampleAlignment(rect: DOMRectReadOnly) {\n    // 1. If format is null, return true.\n    if (!this.format) {\n      return true;\n    }\n\n    // 2. Let planeIndex be 0.\n    let planeIndex = 0;\n\n    // 3. Let numPlanes be the number of planes as defined by format.\n    const numPlanes_ = numPlanes(this.format);\n\n    // 4. While planeIndex is less than numPlanes:\n    while (planeIndex < numPlanes_) {\n      /* 1. Let plane be the Plane identified by planeIndex as defined by\n       * format. */\n\n      /* 2. Let sampleWidth be the horizontal sub-sampling factor of each\n       * subsample for plane. */\n      const sampleWidth = horizontalSubSamplingFactor(this.format, planeIndex);\n\n      /* 3. Let sampleHeight be the vertical sub-sampling factor of each\n       * subsample for plane. */\n      const sampleHeight = verticalSubSamplingFactor(this.format, planeIndex);\n\n      /* 4. If rect.x and rect.width are not both multiples of\n       * sampleWidth, return false. */\n      const xw = rect.x / sampleWidth;\n      if (xw !== ~~xw) {\n        return false;\n      }\n      const ww = rect.width / sampleWidth;\n      if (ww !== ~~ww) {\n        return false;\n      }\n\n      /* 5. If rect.y and rect.height are not both multiples of\n       * sampleHeight, return false. */\n      const yh = rect.y / sampleHeight;\n      if (yh !== ~~yh) {\n        return false;\n      }\n      const hh = rect.height / sampleHeight;\n      if (hh !== ~~hh) {\n        return false;\n      }\n\n      // 6. Increment planeIndex by 1.\n      planeIndex++;\n    }\n\n    // 5. Return true.\n    return true;\n  }\n\n  async copyTo(\n    destination: BufferSource,\n    options: VideoFrameCopyToOptions = {}\n  ): Promise<PlaneLayout[]> {\n    const destBuf = new Uint8Array(\n      (<any>destination).buffer || destination,\n      (<any>destination).byteOffset || 0\n    );\n\n    // 1. If [[Detached]] is true, throw an InvalidStateError DOMException.\n    if (this._data === null) {\n      throw new DOMException('Detached', 'InvalidStateError');\n    }\n\n    // 2. If [[format]] is null, throw a NotSupportedError DOMException.\n    if (!this.format) {\n      throw new DOMException('No format', 'NotSupportedError');\n    }\n\n    /* 3. Let combinedLayout be the result of running the Parse\n     * VideoFrameCopyToOptions algorithm with options. */\n    /* 4. If combinedLayout is an exception, return a promise rejected with\n     * combinedLayout. */\n    const combinedLayout = this._parseVideoFrameCopyToOptions(options);\n\n    /* 5. If destination.byteLength is less than combinedLayout’s\n     * allocationSize, return a promise rejected with a TypeError. */\n    if (destination.byteLength < combinedLayout.allocationSize) {\n      throw new TypeError('Insufficient space');\n    }\n\n    // 6. Let p be a new Promise.\n    /* 7. Let copyStepsQueue be the result of starting a new parallel\n     * queue. */\n    // 8. Enqueue the following steps to copyStepsQueue:\n    // NOTE: This is an async function anyway, so we can just do these.\n    const ret: PlaneLayout[] = [];\n\n    /* 1. Let resource be the media resource referenced by [[resource\n     * reference]]. */\n\n    // 2. Let numPlanes be the number of planes as defined by [[format]].\n    const numPlanes_ = numPlanes(this.format);\n\n    // 3. Let planeIndex be 0.\n    let planeIndex = 0;\n\n    // 4. While planeIndex is less than combinedLayout’s numPlanes:\n    while (planeIndex < combinedLayout.computedLayouts.length) {\n      /* 1. Let sourceStride be the stride of the plane in resource as\n       * identified by planeIndex. */\n      const sourceStride = this._layout[planeIndex].stride;\n\n      /* 2. Let computedLayout be the computed plane layout in\n       * combinedLayout’s computedLayouts at the position of planeIndex */\n      const computedLayout = combinedLayout.computedLayouts[planeIndex];\n\n      /* 3. Let sourceOffset be the product of multiplying\n       * computedLayout’s sourceTop by sourceStride */\n      let sourceOffset = computedLayout.sourceTop * sourceStride;\n\n      // 4. Add computedLayout’s sourceLeftBytes to sourceOffset.\n      sourceOffset += computedLayout.sourceLeftBytes;\n\n      // 5. Let destinationOffset be computedLayout’s destinationOffset.\n      let destinationOffset = computedLayout.destinationOffset;\n\n      // 6. Let rowBytes be computedLayout’s sourceWidthBytes.\n      const rowBytes = computedLayout.sourceWidthBytes;\n\n      // 7. Let row be 0.\n      let row = 0;\n\n      // 8. While row is less than computedLayout’s sourceHeight:\n      while (row < computedLayout.sourceHeight) {\n        /* 1. Copy rowBytes bytes from resource starting at\n         * sourceOffset to destination starting at destinationOffset. */\n        destBuf.set(this._data.subarray(sourceOffset, sourceOffset + rowBytes), destinationOffset);\n\n        // 2. Increment sourceOffset by sourceStride.\n        sourceOffset += sourceStride;\n\n        /* 3. Increment destinationOffset by computedLayout’s\n         * destinationStride. */\n        destinationOffset += computedLayout.destinationStride;\n\n        // 4. Increment row by 1.\n        row++;\n      }\n\n      // 9. Increment planeIndex by 1.\n      planeIndex++;\n      ret.push({\n        offset: computedLayout.destinationOffset,\n        stride: computedLayout.destinationStride\n      });\n    }\n\n    // 5. Queue a task on the control thread event loop to resolve p.\n    // 6. Return p.\n    return ret;\n  }\n\n  clone(): VideoFrame {\n    return new VideoFrame(this._data, {\n      format: this.format,\n      codedWidth: this.codedWidth,\n      codedHeight: this.codedHeight,\n      timestamp: this.timestamp,\n      duration: this.duration,\n      layout: this._layout\n    });\n  }\n\n  close(): void {\n    this._data = null;\n  }\n}\n\nexport interface VideoFrameInit {\n  duration?: number; // microseconds\n  timestamp: number; // microseconds\n  // FIXME: AlphaOption alpha = \"keep\";\n\n  // Default matches image. May be used to efficiently crop. Will trigger\n  // new computation of displayWidth and displayHeight using image’s pixel\n  // aspect ratio unless an explicit displayWidth and displayHeight are given.\n  visibleRect?: DOMRectInit;\n\n  // Default matches image unless visibleRect is provided.\n  displayWidth?: number;\n  displayHeight?: number;\n}\n\nexport interface VideoFrameBufferInit {\n  format: VideoPixelFormat;\n  codedWidth: number;\n  codedHeight: number;\n  timestamp: number; // microseconds\n  duration?: number; // microseconds\n\n  // Default layout is tightly-packed.\n  layout?: PlaneLayout[];\n\n  // Default visible rect is coded size positioned at (0,0)\n  visibleRect?: DOMRectInit;\n\n  // Default display dimensions match visibleRect.\n  displayWidth?: number;\n  displayHeight?: number;\n\n  // FIXME: Not used\n  colorSpace?: VideoColorSpaceInit;\n}\n\nexport type VideoPixelFormat =\n  // 4:2:0 Y, U, V\n  | 'I420'\n  // 4:2:0 Y, U, V, A\n  | 'I420A'\n  // 4:2:2 Y, U, V\n  | 'I422'\n  // 4:4:4 Y, U, V\n  | 'I444'\n  // 4:2:0 Y, UV\n  | 'NV12'\n  // 32bpp RGBA\n  | 'RGBA'\n  // 32bpp RGBX (opaque)\n  | 'RGBX'\n  // 32bpp BGRA\n  | 'BGRA'\n  // 32bpp BGRX (opaque)\n  | 'BGRX';\n\n/**\n * Number of planes in the given format.\n * @param format  The format\n */\nexport function numPlanes(format: VideoPixelFormat) {\n  switch (format) {\n    case 'I420':\n    case 'I422':\n    case 'I444':\n      return 3;\n\n    case 'I420A':\n      return 4;\n\n    case 'NV12':\n      return 2;\n\n    case 'RGBA':\n    case 'RGBX':\n    case 'BGRA':\n    case 'BGRX':\n      return 1;\n\n    default:\n      throw new DOMException('Unsupported video pixel format', 'NotSupportedError');\n  }\n}\n\n/**\n * Number of bytes per sample in the given format and plane.\n * @param format  The format\n * @param planeIndex  The plane index\n */\nexport function sampleBytes(format: VideoPixelFormat, planeIndex: number) {\n  switch (format) {\n    case 'I420':\n    case 'I420A':\n    case 'I422':\n    case 'I444':\n      return 1;\n\n    case 'NV12':\n      if (planeIndex === 1) {\n        return 2;\n      } else {\n        return 1;\n      }\n\n    case 'RGBA':\n    case 'RGBX':\n    case 'BGRA':\n    case 'BGRX':\n      return 4;\n\n    default:\n      throw new DOMException('Unsupported video pixel format', 'NotSupportedError');\n  }\n}\n\n/**\n * Horizontal sub-sampling factor for the given format and plane.\n * @param format  The format\n * @param planeIndex  The plane index\n */\nexport function horizontalSubSamplingFactor(format: VideoPixelFormat, planeIndex: number) {\n  // First plane (often luma) is always full\n  if (planeIndex === 0) {\n    return 1;\n  }\n\n  switch (format) {\n    case 'I420':\n    case 'I422':\n      return 2;\n\n    case 'I420A':\n      if (planeIndex === 3) {\n        return 1;\n      } else {\n        return 2;\n      }\n\n    case 'I444':\n      return 1;\n\n    case 'NV12':\n      return 2;\n\n    case 'RGBA':\n    case 'RGBX':\n    case 'BGRA':\n    case 'BGRX':\n      return 1;\n\n    default:\n      throw new DOMException('Unsupported video pixel format', 'NotSupportedError');\n  }\n}\n\n/**\n * Vertical sub-sampling factor for the given format and plane.\n * @param format  The format\n * @param planeIndex  The plane index\n */\nexport function verticalSubSamplingFactor(format: VideoPixelFormat, planeIndex: number) {\n  // First plane (often luma) is always full\n  if (planeIndex === 0) {\n    return 1;\n  }\n\n  switch (format) {\n    case 'I420':\n      return 2;\n\n    case 'I420A':\n      if (planeIndex === 3) {\n        return 1;\n      } else {\n        return 2;\n      }\n\n    case 'I422':\n    case 'I444':\n      return 1;\n\n    case 'NV12':\n      return 2;\n\n    case 'RGBA':\n    case 'RGBX':\n    case 'BGRA':\n    case 'BGRX':\n      return 1;\n\n    default:\n      throw new DOMException('Unsupported video pixel format', 'NotSupportedError');\n  }\n}\n\n/**\n * NOTE: Color space is not actually supported\n */\nexport type VideoColorSpace = any;\nexport type VideoColorSpaceInit = any;\n\nexport interface PlaneLayout {\n  offset: number;\n  stride: number;\n}\n\nexport interface VideoFrameCopyToOptions {\n  rect?: DOMRectInit;\n  layout?: PlaneLayout[];\n}\n\ninterface ComputedPlaneLayout {\n  destinationOffset: number;\n  destinationStride: number;\n  sourceTop: number;\n  sourceHeight: number;\n  sourceLeftBytes: number;\n  sourceWidthBytes: number;\n}\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as LibAVJS from '../libav.types';\n\ndeclare let LibAV: LibAVJS.LibAVWrapper;\n\n// Currently available libav instances\nconst libavs: LibAVJS.LibAV[] = [];\n\n// Options required to create a LibAV instance\nlet libavOptions: any = {};\n\n/**\n * Supported decoders.\n */\nexport let decoders: string[] = null;\n\n/**\n * libav.js-specific codec request, used to bypass the codec registry and use\n * anything your implementation of libav.js supports.\n */\nexport interface LibAVJSCodec {\n  codec: string;\n  ctx?: LibAVJS.AVCodecContextProps;\n  options?: Record<string, string>;\n}\n\n/**\n * Set the libav loading options.\n */\nexport function setLibAVOptions(to: any) {\n  libavOptions = to;\n}\n\n/**\n * Get a libav instance.\n */\nexport async function get(): Promise<LibAVJS.LibAV> {\n  if (libavs.length) {\n    return libavs.shift();\n  }\n  return LibAV.LibAV(libavOptions);\n}\n\n/**\n * Free a libav instance for later reuse.\n */\nexport function free(libav: LibAVJS.LibAV) {\n  libavs.push(libav);\n}\n\n/**\n * Get the list of encoders/decoders supported by libav (which are also\n * supported by this polyfill)\n */\nasync function codecs(): Promise<string[]> {\n  const libav = await get();\n  const ret: string[] = [];\n\n  for (const [avname, codec] of [\n    ['libaom-av1', 'av01'],\n    ['h264', 'avc1'],\n    ['hevc', 'hvc1'],\n  ]) {\n    if (await libav.avcodec_find_decoder_by_name(avname)) {\n      ret.push(codec);\n    }\n  }\n\n  free(libav);\n  return ret;\n}\n\n/**\n * Load the lists of supported decoders and encoders.\n */\nexport async function load() {\n  decoders = await codecs();\n}\n\n/**\n * Convert a decoder from the codec registry (or libav.js-specific parameters)\n * to libav.js. Returns null if unsupported.\n */\nexport function decoder(codec: string | { libavjs: LibAVJSCodec }): LibAVJSCodec {\n  if (typeof codec === 'string') {\n    codec = codec.replace(/\\..*/, '');\n\n    let outCodec: string = codec;\n    switch (codec) {\n      // Video\n      case 'av01':\n        outCodec = 'libaom-av1';\n        break;\n      case 'avc1':\n        outCodec = 'h264';\n        break;\n\n      case 'hvc1':\n        outCodec = 'hevc';\n        break;\n\n      // Unrecognized\n      default:\n        return null;\n    }\n\n    // Check whether we actually support this codec\n    if (!(decoders.indexOf(codec) >= 0)) {\n      return null;\n    }\n\n    return { codec: outCodec };\n  } else {\n    return codec.libavjs;\n  }\n}\n","/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nexport type CodecState = 'unconfigured' | 'configured' | 'closed';\n\nexport type WebCodecsErrorCallback = (error: DOMException) => void;\n\n/**\n * Clone this configuration. Just copies over the supported/recognized fields.\n */\nexport function cloneConfig(config: any, fields: string[]): any {\n  const ret: any = {};\n  for (const field of fields) {\n    if (field in config) {\n      ret[field] = config[field];\n    }\n  }\n  return ret;\n}\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as LibAVJS from '../libav.types';\nimport type * as evc from './encoded-video-chunk';\nimport * as libavs from './libav';\nimport * as misc from './misc';\nimport * as vf from './video-frame';\n\nexport class VideoDecoder {\n  constructor(init: VideoDecoderInit) {\n    this._output = init.output;\n    this._error = init.error;\n\n    this.state = 'unconfigured';\n    this.decodeQueueSize = 0;\n\n    this._p = Promise.all([]);\n    this._libav = null;\n    this._codec = this._c = this._pkt = this._frame = 0;\n  }\n\n  /* NOTE: These should technically be readonly, but I'm implementing them as\n   * plain fields, so they're writable */\n  state: misc.CodecState;\n\n  decodeQueueSize: number;\n\n  private _output: VideoFrameOutputCallback;\n\n  private _error: misc.WebCodecsErrorCallback;\n\n  // Event queue\n  private _p: Promise<unknown>;\n\n  // LibAV state\n  private _libav: LibAVJS.LibAV;\n\n  private _codec: number;\n\n  private _c: number;\n\n  private _pkt: number;\n\n  private _frame: number;\n\n  configure(config: VideoDecoderConfig): void {\n    const self = this;\n\n    // 1. If config is not a valid VideoDecoderConfig, throw a TypeError.\n    // NOTE: We don't support sophisticated codec string parsing (yet)\n\n    // 2. If [[state]] is “closed”, throw an InvalidStateError DOMException.\n    if (this.state === 'closed') {\n      throw new DOMException('Decoder is closed', 'InvalidStateError');\n    }\n\n    // Free any internal state\n    if (this._libav) {\n      this._p = this._p.then(() => this._free());\n    }\n\n    // 3. Set [[state]] to \"configured\".\n    this.state = 'configured';\n\n    // 4. Set [[key chunk required]] to true.\n    // NOTE: Not implemented\n\n    // 5. Queue a control message to configure the decoder with config.\n    this._p = this._p\n      .then(async () => {\n        /* 1. Let supported be the result of running the Check\n         * Configuration Support algorithm with config. */\n        const supported = libavs.decoder(config.codec);\n\n        /* 2. If supported is true, assign [[codec implementation]] with an\n         * implementation supporting config. */\n        if (supported) {\n          const libav = (self._libav = await libavs.get());\n\n          const ptr = await libav.malloc(config.description.length);\n          await libav.copyin_u8(ptr, config.description);\n          const parm = await libav.calloc(1, 1024);\n          await libav.AVCodecParameters_extradata_s(parm, ptr);\n          await libav.AVCodecParameters_extradata_size_s(parm, config.description.length);\n          // Initialize\n          [self._codec, self._c, self._pkt, self._frame] = await libav.ff_init_decoder(\n            supported.codec,\n            parm,\n          );\n          await libav.AVCodecContext_time_base_s(self._c, 1, 1000);\n          await libav.free(ptr);\n          await libav.free(parm);\n        } else {\n          /* 3. Otherwise, run the Close VideoDecoder algorithm with\n           * NotSupportedError DOMException. */\n          self._closeVideoDecoder(new DOMException('Unsupported codec', 'NotSupportedError'));\n        }\n      })\n      .catch(this._error);\n  }\n\n  // Our own algorithm, close libav\n  private async _free() {\n    if (this._c) {\n      await this._libav.ff_free_decoder(this._c, this._pkt, this._frame);\n      this._codec = this._c = this._pkt = this._frame = 0;\n    }\n    if (this._libav) {\n      libavs.free(this._libav);\n      this._libav = null;\n    }\n  }\n\n  private _closeVideoDecoder(exception: DOMException) {\n    // 1. Run the Reset VideoDecoder algorithm with exception.\n    this._resetVideoDecoder(exception);\n\n    // 2. Set [[state]] to \"closed\".\n    this.state = 'closed';\n\n    /* 3. Clear [[codec implementation]] and release associated system\n     * resources. */\n    this._p = this._p.then(() => this._free());\n\n    /* 4. If exception is not an AbortError DOMException, queue a task on\n     * the control thread event loop to invoke the [[error callback]] with\n     * exception. */\n    if (exception.name !== 'AbortError') {\n      this._p = this._p.then(() => {\n        this._error(exception);\n      });\n    }\n  }\n\n  private _resetVideoDecoder(exception: DOMException) {\n    // 1. If [[state]] is \"closed\", throw an InvalidStateError.\n    if (this.state === 'closed') {\n      throw new DOMException('Decoder closed', 'InvalidStateError');\n    }\n\n    // 2. Set [[state]] to \"unconfigured\".\n    this.state = 'unconfigured';\n\n    // ... really, we're just going to free it now\n    this._p = this._p.then(() => this._free());\n  }\n\n  decode(chunk: evc.EncodedVideoChunk): void {\n    const self = this;\n\n    // 1. If [[state]] is not \"configured\", throw an InvalidStateError.\n    if (this.state !== 'configured') {\n      throw new DOMException('Unconfigured', 'InvalidStateError');\n    }\n\n    // 2. If [[key chunk required]] is true:\n    //    1. If chunk.[[type]] is not key, throw a DataError.\n    /*    2. Implementers SHOULD inspect the chunk’s [[internal data]] to\n     *    verify that it is truly a key chunk. If a mismatch is detected,\n     *    throw a DataError. */\n    //    3. Otherwise, assign false to [[key chunk required]].\n\n    // 3. Increment [[decodeQueueSize]].\n    this.decodeQueueSize++;\n\n    // 4. Queue a control message to decode the chunk.\n    this._p = this._p\n      .then(async () => {\n        const libav = self._libav;\n        const c = self._c;\n        const pkt = self._pkt;\n        const frame = self._frame;\n\n        let decodedOutputs: LibAVJS.Frame[] = null;\n\n        // 1. Attempt to use [[codec implementation]] to decode the chunk.\n        try {\n          // Convert to a libav packet\n          const ptsFull = Math.floor(chunk.timestamp / 1000);\n          const pts = ptsFull % 0x100000000;\n          const ptshi = ~~(ptsFull / 0x100000000);\n          const packet: LibAVJS.Packet = {\n            data: chunk._libavGetData(),\n            pts,\n            ptshi,\n            dts: pts,\n            dtshi: ptshi,\n          };\n          if (chunk.duration) {\n            packet.duration = Math.floor(chunk.duration / 1000);\n            packet.durationhi = 0;\n          }\n\n          decodedOutputs = await libav.ff_decode_multi(c, pkt, frame, [packet]);\n\n          /* 2. If decoding results in an error, queue a task on the control\n           * thread event loop to run the Close VideoDecoder algorithm with\n           * EncodingError. */\n        } catch (ex) {\n          // console.log('Error decoding', ex);\n          self._p = self._p.then(() => {\n            self._closeVideoDecoder(ex);\n          });\n        }\n\n        /* 3. Queue a task on the control thread event loop to decrement\n         * [[decodeQueueSize]]. */\n        self.decodeQueueSize--;\n\n        /* 4. Let decoded outputs be a list of decoded audio data outputs\n         * emitted by [[codec implementation]]. */\n        /* 5. If decoded outputs is not empty, queue a task on the control\n         * thread event loop to run the Output VideoData algorithm with\n         * decoded outputs. */\n        if (decodedOutputs) {\n          self._outputVideoFrames(decodedOutputs);\n        }\n      })\n      .catch(this._error);\n  }\n\n  private _outputVideoFrames(frames: LibAVJS.Frame[]) {\n    const libav = this._libav;\n\n    for (const frame of frames) {\n      // 1. format\n      let format: vf.VideoPixelFormat;\n      switch (frame.format) {\n        case libav.AV_PIX_FMT_YUV420P:\n          format = 'I420';\n          break;\n\n        case libav.AV_PIX_FMT_YUVA420P:\n          format = 'I420A';\n          break;\n\n        case libav.AV_PIX_FMT_YUV422P:\n          format = 'I422';\n          break;\n\n        case libav.AV_PIX_FMT_YUV444P:\n          format = 'I444';\n          break;\n\n        case libav.AV_PIX_FMT_NV12:\n          format = 'NV12';\n          break;\n\n        case libav.AV_PIX_FMT_RGBA:\n          format = 'RGBA';\n          break;\n\n        case libav.AV_PIX_FMT_BGRA:\n          format = 'BGRA';\n          break;\n\n        default:\n          throw new DOMException('Unsupported libav format!', 'EncodingError');\n      }\n\n      // 2. width and height\n      const codedWidth = frame.width;\n      const codedHeight = frame.height;\n\n      // Check for non-square pixels\n      let displayWidth = codedWidth;\n      let displayHeight = codedHeight;\n      if (frame.sample_aspect_ratio[0]) {\n        const sar = frame.sample_aspect_ratio;\n        if (sar[0] > sar[1]) {\n          displayWidth = ~~((codedWidth * sar[0]) / sar[1]);\n        } else {\n          displayHeight = ~~((codedHeight * sar[1]) / sar[0]);\n        }\n      }\n\n      // 3. timestamp\n      const timestamp = (frame.ptshi * 0x100000000 + frame.pts) * 1000;\n\n      // 4. data\n      let raw: Uint8Array;\n      {\n        let size = 0;\n        const planes = vf.numPlanes(format);\n        const sbs = [];\n        const hssfs = [];\n        const vssfs = [];\n        for (let i = 0; i < planes; i++) {\n          sbs.push(vf.sampleBytes(format, i));\n          hssfs.push(vf.horizontalSubSamplingFactor(format, i));\n          vssfs.push(vf.verticalSubSamplingFactor(format, i));\n        }\n        for (let i = 0; i < planes; i++) {\n          size += frame.width * frame.height * sbs[i] / hssfs[i]\n            / vssfs[i];\n        }\n        raw = new Uint8Array(size);\n        let off = 0;\n        for (let i = 0; i < planes; i++) {\n          const fd = frame.data[i];\n          for (let j = 0; j < frame.height / vssfs[i]; j++) {\n            const part = fd[j].subarray(0, frame.width / hssfs[i]);\n            raw.set(part, off);\n            off += part.length;\n          }\n        }\n      }\n\n      const data = new vf.VideoFrame(raw, {\n        format,\n        codedWidth,\n        codedHeight,\n        displayWidth,\n        displayHeight,\n        timestamp,\n      });\n\n      this._output(data);\n    }\n  }\n\n  flush(): Promise<void> {\n    const self = this;\n\n    const ret = this._p.then(async () => {\n      if (!self._c) {\n        return;\n      }\n\n      // Make sure any last data is flushed\n      const libav = self._libav;\n      const c = self._c;\n      const pkt = self._pkt;\n      const frame = self._frame;\n\n      let decodedOutputs: LibAVJS.Frame[] = null;\n\n      try {\n        decodedOutputs = await libav.ff_decode_multi(c, pkt, frame, [], true);\n      } catch (ex) {\n        self._p = self._p.then(() => {\n          self._closeVideoDecoder(ex);\n        });\n      }\n\n      if (decodedOutputs) {\n        self._outputVideoFrames(decodedOutputs);\n      }\n    });\n    this._p = ret;\n    return ret;\n  }\n\n  reset(): void {\n    this._resetVideoDecoder(new DOMException('Reset', 'AbortError'));\n  }\n\n  close(): void {\n    this._closeVideoDecoder(new DOMException('Close', 'AbortError'));\n  }\n\n  static async isConfigSupported(config: VideoDecoderConfig): Promise<VideoDecoderSupport> {\n    const dec = libavs.decoder(config.codec);\n    let supported = false;\n    if (dec) {\n      const libav = await libavs.get();\n      try {\n        const [, c, pkt, frame] = await libav.ff_init_decoder(dec.codec);\n        await libav.ff_free_decoder(c, pkt, frame);\n        supported = true;\n      } catch (ex) {}\n      await libavs.free(libav);\n    }\n\n    return {\n      supported,\n      config: misc.cloneConfig(config, ['codec', 'codedWidth', 'codedHeight']),\n    };\n  }\n}\n\nexport interface VideoDecoderInit {\n  output: VideoFrameOutputCallback;\n  error: misc.WebCodecsErrorCallback;\n}\n\nexport type VideoFrameOutputCallback = (output: vf.VideoFrame) => void;\n\nexport interface VideoDecoderConfig {\n  codec: string | { libavjs: libavs.LibAVJSCodec };\n  description: Uint8Array;\n  codedWidth?: number;\n  codedHeight?: number;\n  displayAspectWidth?: number;\n  displayAspectHeight?: number;\n  colorSpace?: vf.VideoColorSpaceInit;\n  hardwareAcceleration?: string; // Ignored\n  optimizeForLatency?: boolean;\n}\n\nexport interface VideoDecoderSupport {\n  supported: boolean;\n  config: VideoDecoderConfig;\n}\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as LibAVJS from '../libav.types';\nimport * as vf from './video-frame';\n\ndeclare let LibAV: LibAVJS.LibAVWrapper;\n\n/* A non-threaded libav.js instance for scaling. This is an any because the\n * type definitions only expose the async versions, but this API requires the\n * _sync methods. */\nlet scalerSync: any = null;\n\n// A synchronous libav.js instance for scaling.\nlet scalerAsync: LibAVJS.LibAV = null;\n\n// The original drawImage\nconst origDrawImage: any = null;\n\n// The original createImageBitmap\nlet origCreateImageBitmap: any = null;\n\n/**\n * Load rendering capability.\n * @param libavOptions  Options to use while loading libav, only asynchronous\n * @param polyfill  Set to polyfill CanvasRenderingContext2D.drawImage\n */\nexport async function load(libavOptions: any, polyfill: boolean) {\n  // Get our scalers\n  scalerSync = await LibAV.LibAV({ noworker: true });\n  scalerAsync = await LibAV.LibAV(libavOptions);\n\n  // Polyfill createImageBitmap\n  origCreateImageBitmap = global.createImageBitmap;\n  if (polyfill) {\n    (<any>global).createImageBitmap = createImageBitmap;\n  }\n}\n\n/**\n * Create an ImageBitmap from this drawable, asynchronously. NOTE:\n * Sub-rectangles are not implemented for VideoFrames, so only options is\n * available, and there, only scaling is available.\n * @param image  VideoFrame (or anything else) to draw\n * @param options  Other options\n */\nexport function createImageBitmap(\n  image: vf.VideoFrame,\n  opts: {\n    resizeWidth?: number;\n    resizeHeight?: number;\n  } = {},\n): Promise<ImageBitmap> {\n  if (!(image instanceof vf.VideoFrame)) {\n    // Just use the original\n    return origCreateImageBitmap.apply(global, arguments);\n  }\n\n  // Convert the format to libav.js\n  let format: number = scalerAsync.AV_PIX_FMT_RGBA;\n  switch (image.format) {\n    case 'I420':\n      format = scalerAsync.AV_PIX_FMT_YUV420P;\n      break;\n\n    case 'I420A':\n      format = scalerAsync.AV_PIX_FMT_YUVA420P;\n      break;\n\n    case 'I422':\n      format = scalerAsync.AV_PIX_FMT_YUV422P;\n      break;\n\n    case 'I444':\n      format = scalerAsync.AV_PIX_FMT_YUV444P;\n      break;\n\n    case 'NV12':\n      format = scalerAsync.AV_PIX_FMT_NV12;\n      break;\n\n    case 'RGBA':\n    case 'RGBX':\n      format = scalerAsync.AV_PIX_FMT_RGBA;\n      break;\n\n    case 'BGRA':\n    case 'BGRX':\n      format = scalerAsync.AV_PIX_FMT_BGRA;\n      break;\n  }\n\n  // Normalize arguments\n  const dWidth = typeof opts.resizeWidth === 'number' ? opts.resizeWidth : image.displayWidth;\n  const dHeight = typeof opts.resizeHeight === 'number' ? opts.resizeHeight : image.displayHeight;\n\n  // Convert the frame\n  const frameData = new ImageData(dWidth, dHeight);\n\n  return (async () => {\n    const [sctx, inFrame, outFrame] = await Promise.all([\n      scalerAsync.sws_getContext(\n        image.codedWidth,\n        image.codedHeight,\n        format,\n        dWidth,\n        dHeight,\n        scalerAsync.AV_PIX_FMT_RGBA,\n        2,\n        0,\n        0,\n        0,\n      ),\n      scalerAsync.av_frame_alloc(),\n      scalerAsync.av_frame_alloc(),\n    ]);\n\n    // Convert the data (FIXME: duplication)\n    const rawU8 = image._libavGetData();\n    let rawIdx = 0;\n    const raw: Uint8Array[][] = [];\n    const planes = vf.numPlanes(image.format);\n    for (let p = 0; p < planes; p++) {\n      const plane: Uint8Array[] = [];\n      raw.push(plane);\n      const sb = vf.sampleBytes(image.format, p);\n      const hssf = vf.horizontalSubSamplingFactor(image.format, p);\n      const vssf = vf.verticalSubSamplingFactor(image.format, p);\n      const w = ~~((image.codedWidth * sb) / hssf);\n      const h = ~~(image.codedHeight / vssf);\n      for (let y = 0; y < h; y++) {\n        plane.push(rawU8.subarray(rawIdx, rawIdx + w));\n        rawIdx += w;\n      }\n    }\n\n    const [, , frame] = await Promise.all([\n      // Copy it in\n      scalerAsync.ff_copyin_frame(inFrame, {\n        data: raw,\n        format,\n        width: image.codedWidth,\n        height: image.codedHeight,\n      }),\n\n      // Rescale\n      scalerAsync.sws_scale_frame(sctx, outFrame, inFrame),\n\n      // Get the data back out again\n      scalerAsync.ff_copyout_frame(outFrame),\n\n      // And clean up\n      scalerAsync.av_frame_free_js(outFrame),\n      scalerAsync.av_frame_free_js(inFrame),\n      scalerAsync.sws_freeContext(sctx),\n    ]);\n\n    // Transfer all the data\n    let idx = 0;\n    for (let i = 0; i < frame.data.length; i++) {\n      const plane = frame.data[i];\n      for (let y = 0; y < plane.length; y++) {\n        const row = plane[y].subarray(0, image.codedWidth * 4);\n        frameData.data.set(row, idx);\n        idx += row.length;\n      }\n    }\n\n    // And make the ImageBitmap\n    return await origCreateImageBitmap(frameData);\n  })();\n}\n","/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as eac from './encoded-audio-chunk';\nimport * as evc from './encoded-video-chunk';\nimport * as vf from './video-frame';\nimport * as vdec from './video-decoder';\n\n/**\n * A VideoDecoder environment.\n */\nexport interface VideoDecoderEnvironment {\n  VideoDecoder: typeof vdec.VideoDecoder;\n  EncodedVideoChunk: typeof evc.EncodedVideoChunk;\n  VideoFrame: typeof vf.VideoFrame;\n}\n\n/**\n * Error thrown to indicate a configuration is unsupported.\n */\nexport class UnsupportedException extends Error {\n  constructor() {\n    super('The requested configuration is not supported');\n  }\n}\n\n/**\n * Get an VideoDecoder environment that supports this configuration. Throws an\n * UnsupportedException if no environment supports the configuration.\n * @param config  Video decoder configuration\n */\nexport async function getVideoDecoder(\n  config: vdec.VideoDecoderConfig,\n): Promise<VideoDecoderEnvironment> {\n  try {\n    if (\n      typeof (<any>global).VideoDecoder !== 'undefined'\n      && (await (<any>global).VideoDecoder.isConfigSupported(config)).supported\n    ) {\n      return {\n        VideoDecoder: (<any>global).VideoDecoder,\n        EncodedVideoChunk: (<any>global).EncodedVideoChunk,\n        VideoFrame: (<any>global).VideoFrame,\n      };\n    }\n  } catch (ex) {}\n\n  if ((await vdec.VideoDecoder.isConfigSupported(config)).supported) {\n    return {\n      VideoDecoder: vdec.VideoDecoder,\n      EncodedVideoChunk: evc.EncodedVideoChunk,\n      VideoFrame: vf.VideoFrame,\n    };\n  }\n\n  throw new UnsupportedException();\n}\n","import { createWorkerInterface } from '../../util/createPostMessageInterface';\nimport type { CancellableCallback } from '../../util/PostMessageConnector';\nimport { MP4Demuxer } from './MP4Demuxer';\nimport * as LibAVWebCodecs from './polyfill';\n\nlet decoder: any;\nlet demuxer: any;\nlet onDestroy: VoidFunction | undefined;\n\nlet isLoaded = false;\n\nasync function init(\n  url: string,\n  maxFrames: number,\n  workerIndex: number,\n  workersTotal: number,\n  onFrame: CancellableCallback,\n) {\n  const hasWebCodecs = 'VideoDecoder' in globalThis;\n  if (!hasWebCodecs) {\n    await loadLibAV();\n  }\n\n  const decodedFrames = new Set<number>();\n\n  // @ts-ignore\n  decoder = new VideoDecoder({\n    async output(frame: any) {\n      const time = frame.timestamp / 1e6;\n      const seconds = Math.floor(time);\n      // Only render whole second frames\n      if (!decodedFrames.has(seconds)) {\n        const bitmap = await createImageBitmap(frame);\n        decodedFrames.add(seconds);\n        onFrame(seconds, bitmap);\n      }\n      frame.close();\n    },\n    error(e: any) {\n      // eslint-disable-next-line no-console\n      console.error('[Video Preview] error', e);\n    },\n  });\n\n  demuxer = new MP4Demuxer(url, {\n    stepOffset: workerIndex,\n    stepMultiplier: workersTotal,\n    isPolyfill: !hasWebCodecs,\n    maxFrames,\n    onConfig(config) {\n      decoder?.configure(config);\n    },\n    onChunk(chunk) {\n      if (decoder?.state !== 'configured') return;\n      decoder?.decode(chunk);\n    },\n  });\n\n  return new Promise<void>((resolve) => {\n    onDestroy = resolve;\n  });\n}\n\nfunction destroy() {\n  try {\n    decoder?.close();\n    demuxer?.close();\n  } catch {\n    // Ignore\n  }\n  decoder = undefined;\n  demuxer = undefined;\n  onDestroy?.();\n}\n\nasync function loadLibAV() {\n  if (isLoaded) return;\n\n  importScripts(new URL('./libav-3.10.5.1.2-webcodecs.js', import.meta.url));\n  await LibAVWebCodecs.load({\n    polyfill: true,\n    libavOptions: { noworker: true, nosimd: true },\n  });\n\n  isLoaded = true;\n}\n\nconst api = {\n  'video-preview:init': init,\n  'video-preview:destroy': destroy,\n};\n\ncreateWorkerInterface(api);\n\nexport type VideoPreviewApi = typeof api;\n","// @ts-nocheck\n\n/*\n * This file is part of the libav.js WebCodecs Polyfill implementation. The\n * interface implemented is derived from the W3C standard. No attribution is\n * required when using this library.\n *\n * Copyright (c) 2021 Yahweasel\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\n * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport type * as LibAVJS from '../libav.types';\nimport * as eac from './encoded-audio-chunk';\n\nimport * as evc from './encoded-video-chunk';\nimport * as vf from './video-frame';\nimport * as vdec from './video-decoder';\n\nimport * as rendering from './rendering';\n\nimport * as config from './config';\nimport * as libav from './libav';\nimport type * as misc from './misc';\n\ndeclare let LibAV: LibAVJS.LibAVWrapper;\n\n/**\n * Load LibAV-WebCodecs-Polyfill.\n */\nexport async function load(\n  options: {\n    polyfill?: boolean;\n    libavOptions?: any;\n  } = {},\n) {\n  // Set up libavOptions\n  const libavOptions: any = {};\n  if (options.libavOptions) {\n    Object.assign(libavOptions, options.libavOptions);\n  }\n\n  // And load the libav handler\n  libav.setLibAVOptions(libavOptions);\n  await libav.load();\n\n  if (options.polyfill) {\n    globalThis.VideoDecoder = vdec.VideoDecoder;\n    globalThis.VideoFrame = vf.VideoFrame;\n    globalThis.EncodedVideoChunk = evc.EncodedVideoChunk;\n  }\n\n  await rendering.load(libavOptions, !!options.polyfill);\n}\n\n// EncodedVideoChunk\nexport type EncodedVideoChunk = evc.EncodedVideoChunk;\nexport const EncodedVideoChunk = evc.EncodedVideoChunk;\nexport type EncodedVideoChunkInit = evc.EncodedVideoChunkInit;\n\n// VideoFrame\nexport type VideoFrame = vf.VideoFrame;\nexport const VideoFrame = vf.VideoFrame;\nexport type VideoFrameInit = vf.VideoFrameInit;\nexport type VideoFrameBufferInit = vf.VideoFrameBufferInit;\nexport type VideoPixelFormat = vf.VideoPixelFormat;\nexport type PlaneLayout = vf.PlaneLayout;\nexport type VideoFrameCopyToOptions = vf.VideoFrameCopyToOptions;\n\n// VideoDecoder\nexport type VideoDecoder = vdec.VideoDecoder;\nexport const VideoDecoder = vdec.VideoDecoder;\nexport type VideoDecoderInit = vdec.VideoDecoderInit;\nexport type VideoFrameOutputCallback = vdec.VideoFrameOutputCallback;\nexport type VideoDecoderConfig = vdec.VideoDecoderConfig;\nexport type VideoDecoderSupport = vdec.VideoDecoderSupport;\n\n// Rendering\nexport const createImageBitmap = rendering.createImageBitmap;\n\n// Misc\nexport type CodecState = misc.CodecState;\nexport type WebCodecsErrorcallback = misc.WebCodecsErrorCallback;\n\n// Configurations/environments\nexport type AudioDecoderEnvironment = config.AudioDecoderEnvironment;\nexport type VideoDecoderEnvironment = config.VideoDecoderEnvironment;\nexport type UnsupportedException = config.UnsupportedException;\nexport const UnsupportedException = config.UnsupportedException;\nexport const getVideoDecoder = config.getVideoDecoder;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [5802,2041], () => (__webpack_require__(98128)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"2041\":\"3bace9c76cb8e496a2a9\",\"5802\":\"207c1d379140a8835f7e\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t8128: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunktelegram_t\"] = self[\"webpackChunktelegram_t\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","SUPPORTED_IMAGE_CONTENT_TYPES","window","innerHeight","Math","round","Set","SUPPORTED_VIDEO_CONTENT_TYPES","callbackState","Map","messageHandlers","callbacks","removeCallback","cb","delete","runCallbacks","_len","arguments","length","args","Array","_key","forEach","callback","addCallback","add","hasCallbacks","Boolean","size","createCallbackManager","createWorkerInterface","api","channel","sendToOrigin","data","transferables","postMessage","self","onerror","e","console","error","type","message","addEventListener","reason","handleErrors","async","onUpdate","update","promise","init","messageId","name","withCallback","callbackArgs","lastArg","isTransferable","undefined","set","push","response","arrayBuffer","get","isCanceled","onMessage","obj","ArrayBuffer","ImageBitmap","rLottieApi","onmessage","importScripts","URL","rLottieApiPromise","Promise","resolve","Module","onRuntimeInitialized","cwrap","destroy","resize","buffer","render","loadFromData","renderers","extractJson","tgsUrl","fetch","headers","startsWith","text","inflate","to","calcParams","json","isLowPriority","framesCount","maxFps","sourceFps","JSON","parse","fr","reduceFactor","msPerFrame","reducedFramesCount","ceil","key","imgSize","customColor","onInit","stringOnWasmHeap","allocate","intArrayFromString","handle","imageData","ImageData","frameIndex","onProgress","realIndex","bufferPointer","HEAPU8","subarray","arr","Uint8ClampedArray","color","i","applyColor","createImageBitmap","isRepeated","renderer","err","setTimeout","requestStates","result","requestState","MIN_PART_SIZE","Status","MP4Demuxer","constructor","url","_ref","onConfig","onChunk","stepOffset","stepMultiplier","isPolyfill","maxFrames","_defineProperty","loading","this","file","MP4Box","onError","onReady","bind","onSamples","loadMetadata","offset","requestPart","status","ready","step","duration","partSize","tick","lastSample","rap","seek","closed","flush","useRap","reminder","start","end","params","Date","now","toString","random","slice","isResolved","race","then","reject","Error","Object","assign","catch","finally","fileStart","nextOffset","appendBuffer","byteLength","description","track","t","getTrackById","id","entry","mdia","minf","stbl","stsd","entries","avcC","hvcC","av1C","stream","DataStream","write","Uint8Array","info","videoTracks","codec","codedHeight","video","height","codedWidth","width","timescale","partSizeDivider","bitrate","max","calculateStep","setExtractionOptions","nbSamples","loadNextFrames","trackId","ref","samples","sample","time","cts","is_sync","number","decodedSamples","has","EncodedVideoChunk","timestamp","parseInt","releaseUsedSamples","close","stop","_data","byteOffset","_libavGetData","copyTo","destination","offscreenCanvas","VideoFrame","_constructBuffer","_constructCanvas","image","document","createElement","style","display","body","appendChild","naturalWidth","naturalHeight","videoWidth","videoHeight","DOMException","ctx","getContext","clearRect","drawImage","getImageData","format","layout","stride","displayWidth","displayHeight","visibleRect","DOMRect","dWidth","dHeight","_nonSquarePixels","_sar_num","_sar_den","_layout","numPlanes_","numPlanes","sampleWidth","horizontalSubSamplingFactor","sampleHeight","verticalSubSamplingFactor","allocationSize","options","_parseVideoFrameCopyToOptions","defaultRect","overrideRect","rect","x","y","parsedRect","_parseVisibleRect","optLayout","_computeLayoutAndAllocationSize","sourceRect","TypeError","_verifyRectSampleAlignment","minAllocationSize","computedLayouts","endOffsets","planeIndex","sampleBytes_","sampleBytes","sampleWidthBytes","computedLayout","destinationOffset","destinationStride","sourceTop","sourceHeight","sourceLeftBytes","sourceWidthBytes","planeLayout","planeSize","planeEnd","earlierPlaneIndex","xw","ww","yh","hh","destBuf","combinedLayout","ret","sourceStride","sourceOffset","rowBytes","row","clone","libavs","libavOptions","decoders","setLibAVOptions","shift","LibAV","free","libav","load","avname","avcodec_find_decoder_by_name","codecs","decoder","outCodec","replace","indexOf","libavjs","cloneConfig","config","fields","field","VideoDecoder","_output","output","_error","state","decodeQueueSize","_p","all","_libav","_codec","_c","_pkt","_frame","configure","_free","supported","ptr","malloc","copyin_u8","parm","calloc","AVCodecParameters_extradata_s","AVCodecParameters_extradata_size_s","ff_init_decoder","AVCodecContext_time_base_s","_closeVideoDecoder","ff_free_decoder","exception","_resetVideoDecoder","decode","chunk","c","pkt","frame","decodedOutputs","ptsFull","floor","pts","ptshi","packet","dts","dtshi","durationhi","ff_decode_multi","ex","_outputVideoFrames","frames","AV_PIX_FMT_YUV420P","AV_PIX_FMT_YUVA420P","AV_PIX_FMT_YUV422P","AV_PIX_FMT_YUV444P","AV_PIX_FMT_NV12","AV_PIX_FMT_RGBA","AV_PIX_FMT_BGRA","sample_aspect_ratio","sar","raw","planes","vf","sbs","hssfs","vssfs","off","fd","j","part","reset","static","dec","misc","scalerSync","scalerAsync","origCreateImageBitmap","polyfill","noworker","global","opts","apply","resizeWidth","resizeHeight","frameData","sctx","inFrame","outFrame","sws_getContext","av_frame_alloc","rawU8","rawIdx","p","plane","sb","hssf","vssf","w","h","ff_copyin_frame","sws_scale_frame","ff_copyout_frame","av_frame_free_js","sws_freeContext","idx","UnsupportedException","super","demuxer","onDestroy","isLoaded","workerIndex","workersTotal","onFrame","hasWebCodecs","globalThis","vdec","evc","rendering","LibAVWebCodecs","nosimd","loadLibAV","decodedFrames","seconds","bitmap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","splice","r","f","chunkId","reduce","promises","u","miniCssF","g","Function","o","prop","prototype","hasOwnProperty","scriptUrl","location","currentScript","src","scripts","getElementsByTagName","b","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime","pop"],"sourceRoot":""}