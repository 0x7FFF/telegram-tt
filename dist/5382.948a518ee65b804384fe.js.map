{"version":3,"file":"5382.948a518ee65b804384fe.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/useUserStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useFullscreen.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { AvatarSize } from './Avatar';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: (ApiUser | ApiChat)[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadUserStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n    loadUserStories({ userId });\n  }, [userId]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, activeChatUsernames, topicId, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n    };\n  },\n)(ChatExtra));\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { ApiAttachment } from '../../../../api/types';\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  preloadImage,\n  preloadVideo,\n  createPosterForVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport buildAttachment from '../helpers/buildAttachment';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import type { IOpusRecorder } from 'opus-recorder';\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import { useEffect } from '../../../../lib/teact/teact';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport memoized from '../../../../util/memoized';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = (\n  draft: ApiDraft | undefined,\n  chatId: string,\n  threadId: number,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  isDisabled: boolean | undefined,\n) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}, shouldForce = false) => {\n    if (isDisabled || isEditing) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        draft: parseMessageInput(html),\n        shouldForce,\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldForce,\n      });\n    }\n  });\n\n  const updateDraftRef = useStateRef(updateDraft);\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (!draft?.shouldForce) {\n        return;\n      }\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft));\n\n    const customEmojiIds = draft.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, setHtml, editedMessage, loadCustomEmojis, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      if (!isEditing) {\n        // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n        updateDraftRef.current({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraftRef, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraftRef.current();\n\n      return;\n    }\n\n    const scopedShatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedShatId && threadIdRef.current === scopedThreadId) {\n        updateDraftRef.current();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraftRef]);\n\n  function forceUpdateDraft() {\n    updateDraft(undefined, true);\n  }\n\n  useBackgroundMode(forceUpdateDraft);\n  useBeforeUnload(forceUpdateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiFormattedText,\n  editingDraft?: ApiFormattedText,\n  replyingToId?: number,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\n\nimport type { StateHookSetter } from '../../../../lib/teact/teact';\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport buildAttachment from '../helpers/buildAttachment';\nimport { DEBUG, EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID } from '../../../../config';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\nimport parseMessageInput, { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nfunction preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) return;\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './DropArea';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './AttachmentModal';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './PollModal';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport type { OwnProps } from './DeleteMessageModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './SendAsMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './MentionTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './BotCommandTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './InlineBotTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat, ApiMessage, ApiUser } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatMessage,\n  selectSender,\n  selectForwardedSender,\n  selectUser,\n  selectCurrentMessageList,\n  selectReplyingToId,\n  selectEditingId,\n  selectEditingScheduledId,\n  selectEditingMessage,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectTabState,\n  selectCanAnimateInterface,\n} from '../../../global/selectors';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId, stripCustomEmoji } from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useLang from '../../../hooks/useLang';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport EmbeddedMessage from '../../common/EmbeddedMessage';\nimport MenuItem from '../../ui/MenuItem';\nimport Menu from '../../ui/Menu';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyingToId?: number;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiUser | ApiChat;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyingToId,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    setReplyingToId,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyingToId || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [forwardedMessagesCount],\n    forwardedMessagesCount ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(canAnimate && isShown, undefined, !shouldAnimate, undefined, !shouldAnimate);\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      setReplyingToId({ messageId: undefined });\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n\n  const leftIcon = useMemo(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyingToId, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className=\"ComposerEmbeddedMessage_inner\">\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          hasContextMenu={isForwarding && !isContextMenuDisabled}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    let message: ApiMessage | undefined;\n    if (replyingToId && !shouldForceShowEditing) {\n      message = selectChatMessage(global, chatId, replyingToId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiChat | ApiUser | undefined;\n    if (replyingToId && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = isUserId(fromChatId!) ? selectUser(global, fromChatId!) : selectChat(global, fromChatId!);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyingToId,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectTabState, selectNoWebPage, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\n\nimport WebPage from '../message/WebPage';\nimport Button from '../../ui/Button';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ISettings } from '../../../types';\nimport type { ApiDocument } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img src={iconSvg} alt=\"\" className={buildClassName(styles.image, !isTouchScreen && styles.compact)} />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { ApiAttachBot } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Portal from '../../ui/Portal';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  chatId: string;\n  threadId?: number;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => callAttachBot({\n        bot,\n        chatId,\n        threadId,\n      })}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {menuPosition && (\n        <Portal>\n          <Menu\n            isOpen={isMenuOpen}\n            positionX=\"right\"\n            style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n            className=\"bot-attach-context-menu\"\n            autoClose\n            onClose={handleCloseMenu}\n            onCloseAnimationEnd={handleCloseAnimationEnd}\n          >\n            <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n          </Menu>\n        </Portal>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import React, {\n  memo, useMemo, useEffect,\n} from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { validateFiles } from '../../../util/files';\nimport { getDebugLogs } from '../../../util/debugConsole';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\n\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  theme: ISettings['theme'];\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  theme,\n  shouldCollectDebugLogs,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.peerTypes.includes('self')) {\n          return true;\n        }\n        return bot.peerTypes.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport Button from '../../ui/Button';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './BotCommandMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './StickerTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  TabState, MessageListType, GlobalState, ApiDraft, MessageList,\n} from '../../global/types';\nimport type {\n  ApiAttachMenuPeerType,\n  ApiAttachment,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type { InlineBotSettings, ISettings, IAnchorPosition } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { IS_VOICE_RECORDING_SUPPORTED, IS_IOS } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectReplyingToId,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getAllowedAttachmentOptions,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport buildClassName from '../../util/buildClassName';\nimport windowSize from '../../util/windowSize';\nimport { getServerTime } from '../../util/serverTime';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useFlag from '../../hooks/useFlag';\nimport usePrevious from '../../hooks/usePrevious';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useInterval from '../../hooks/useInterval';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useTimeout from '../../hooks/useTimeout';\nimport useSchedule from '../../hooks/useSchedule';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport PollModal from '../middle/composer/PollModal.async';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Button from '../ui/Button';\nimport Avatar from './Avatar';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport MessageInput from '../middle/composer/MessageInput';\nimport Spinner from '../ui/Spinner';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport ReactionSelector from '../middle/message/ReactionSelector';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  onDropHide?: NoneToVoidFunction;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    replyingToId?: number;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  replyingToId,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(editableInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, editableInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL);\n\n  useEffect(() => {\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft(draft, chatId, threadId, getHtml, setHtml, editingMessage, isInStoryViewer);\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n    replyingToId,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  useClipboardPaste(\n    isForCurrentMessageList,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(requestedDraftText);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = (isComposerHasFocus || isReactionPickerOpen)\n    && isInStoryViewer && !isAttachMenuOpen && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({ storyUserId: chatId, storyId: storyId!, position });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInMessageList && 'full-featured')}>\n        {isInMessageList && (\n          <>\n            <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n              <defs>\n                <filter\n                  x=\"-50%\"\n                  y=\"-14.7%\"\n                  width=\"200%\"\n                  height=\"141.2%\"\n                  filterUnits=\"objectBoundingBox\"\n                  id=\"composerAppendix\"\n                >\n                  <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                  <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                  <feColorMatrix\n                    values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                    in=\"shadowBlurOuter1\"\n                  />\n                </filter>\n              </defs>\n              <g fill=\"none\" fill-rule=\"evenodd\">\n                <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n                <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n              </g>\n            </svg>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className=\"message-input-wrapper\">\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color={isInMessageList ? 'secondary' : undefined}\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n\n    const tabState = selectTabState(global);\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      replyingToId,\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import React, { useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiMessage, ApiChat,\n} from '../../api/types';\nimport type { ChatTranslatedMessages } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageMediaHash,\n  isActionMessage,\n  getSenderTitle,\n  getMessageRoundVideo,\n  getUserColorKey,\n  getMessageIsSpoiler,\n  isMessageTranslatable,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { getPictogramDimensions } from './helpers/mediaDimensions';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useThumbnail from '../../hooks/useThumbnail';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useMessageTranslation from '../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../middle/ActionMessage';\nimport MessageSummary from './MessageSummary';\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  message?: ApiMessage;\n  sender?: ApiUser | ApiChat;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  hasContextMenu?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  sender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  hasContextMenu,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : message?.forwardInfo?.hiddenUserName;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        sender && !noUserColors && `color-${getUserColorKey(sender)}`,\n      )}\n      onClick={message && handleClick}\n      onMouseDown={message && handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      <div className=\"message-text\">\n        <p dir=\"auto\">\n          {!message ? (\n            customText || NBSP\n          ) : isActionMessage(message) ? (\n            <ActionMessage\n              message={message}\n              isEmbedded\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          ) : (\n            <MessageSummary\n              lang={lang}\n              message={message}\n              noEmoji={Boolean(mediaThumbnail)}\n              translatedText={translatedText}\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          )}\n        </p>\n        <div className=\"message-title\" dir=\"auto\">{renderText(senderTitle || title || NBSP)}</div>\n      </div>\n      {hasContextMenu && <i className=\"embedded-more icon icon-more\" />}\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import React, {\n  memo, useRef, useState, useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import React, {\n  useRef, useEffect, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg: any;\n  className?: string;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, forceShowSelf }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","import React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChatMessages,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport RippleEffect from '../ui/RippleEffect';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: string;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon ${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerMode=\"single-user\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, memo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic, ApiPhoto,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\n\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? (lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleClickPremium = useLastCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  chatId?: string;\n  userId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  userId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          userId: userId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n    || (subject === 'story' && (!storyId || !userId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    messageId: message.id,\n    isSimple,\n    isProtected,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './MuteChatModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { Signal } from '../../../util/signals';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { getGlobal } from '../global';\nimport { createSignal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\nimport { addCallback } from '../lib/teact/teactn';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatBadge from './ChatBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={user && !user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerMode=\"single-user\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport { getChatTitle } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport Badge from '../../ui/Badge';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_APP } from '../../../util/windowEnvironment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport useUserStoriesPolling from '../../../hooks/polling/useUserStoriesPolling';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  isStoryRibbonShown?: boolean;\n  className?: string;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const isArchived = folderType === 'archived';\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  useUserStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\n\nimport useLastCallback from '../useLastCallback';\nimport useDebouncedCallback from '../useDebouncedCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ChatBadge from './ChatBadge';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { LangFn } from '../../../../hooks/useLang';\nimport useLang from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiMessage, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled forward\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport Avatar from '../common/Avatar';\nimport CropModal from '../ui/CropModal';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\nimport type { MessageListType } from '../../global/types';\n\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport { getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useFocusMessage from './message/hooks/useFocusMessage';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(message.chatId, message.replyToMessageId, targetMessage);\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti();\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, replyToMessageId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = replyToMessageId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n    const premiumGiftSticker = global.premiumGifts?.stickers?.[0];\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isUserId(chatId) ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { requestMutation, requestForcedReflow } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLang from '../../../hooks/useLang';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadUserStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadUserStoriesByIds({ userId: story.userId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      userId: story!.userId,\n      storyId: story!.id,\n      isSingleUser: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <img\n          src={mediaUrl}\n          alt=\"\"\n          className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n        />\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './ContextMenuContainer';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import React, { useRef, useState } from '../../../lib/teact/teact';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiMessage } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport {\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  getMessageMediaHash,\n  getMediaTransferState,\n  isOwnMessage,\n  getMessageMediaFormat,\n  getMessageMediaThumbDataUri,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport useMedia from '../../../hooks/useMedia';\nimport useFlag from '../../../hooks/useFlag';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\nimport {\n  isSameReaction, canSendReaction, getReactionUniqueKey, sortReactions,\n} from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\nimport Button from '../../ui/Button';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiMessage } from '../../../api/types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport buildClassName from '../../../util/buildClassName';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\nimport useFlag from '../../../hooks/useFlag';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\nimport renderText from '../../common/helpers/renderText';\nimport trimText from '../../../util/trimText';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\n\nimport SafeLink from '../../common/SafeLink';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.userId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent-bordered\"\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewStory';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\nimport {\n  getMessageText,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n  getMessageVideo,\n  getMessageWebPageVideo,\n} from '../../../../global/helpers';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useAppLayout from '../../../../hooks/useAppLayout';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\nimport type { ChatTranslatedMessages } from '../../../../global/types';\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"user\":\"vEyOaK0611BDq1vciUK5\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  user: ApiUser;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ user, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useStoryPreloader(user.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-user-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ userId: user.id });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: user.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: user.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: user.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: user.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchiveUser = useLastCallback(() => {\n    toggleStoriesHidden({ userId: user.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      tabIndex={0}\n      className={styles.user}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={user}\n        withStory\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, user.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {user.isSelf ? lang('MyStory') : getUserFirstOrLastName(user)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-user-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {user.isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuItem onClick={handleOpenChat} icon=\"message\">\n                {lang('SendMessageTitle')}\n              </MenuItem>\n              <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                {lang('StoryList.Context.ViewProfile')}\n              </MenuItem>\n              <MenuItem\n                onClick={handleArchiveUser}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedUserIds: string[];\n  usersById: Record<string, ApiUser>;\n}\n\nfunction StoryRibbon({\n  isArchived, className, orderedUserIds, usersById, isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedUserIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedUserIds.map((userId) => {\n        const user = usersById[userId];\n\n        if (!user) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={userId}\n            user={user}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedUserIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n\n    return {\n      orderedUserIds: isArchived ? archived : active,\n      usersById,\n    };\n  },\n)(StoryRibbon));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedUserIds: string[];\n  isShown: boolean;\n  usersById: Record<string, ApiUser>;\n}\n\nconst PRELOAD_USERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedUserIds,\n  usersById,\n  canShow,\n  isShown,\n  isArchived,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const users = useMemo(() => {\n    return orderedUserIds\n      .map((id) => usersById[id])\n      .filter((user) => user && user.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedUserIds, usersById]);\n\n  const preloadUserIds = useMemo(() => {\n    return orderedUserIds.slice(0, PRELOAD_USERS);\n  }, [orderedUserIds]);\n  useStoryPreloader(preloadUserIds);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(canShow && isShown);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {users.map((user) => (\n        <Avatar\n          key={user.id}\n          peer={user}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedUserIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedUserIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    usersById: global.users.byId,\n  };\n})(StoryToggler));\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { selectUserStories } from '../../../global/selectors';\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst USER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(userIds: string[]): void;\nfunction useStoryPreloader(userId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(userId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const userIds = Array.isArray(userId) ? userId : [userId];\n\n    userIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byUserId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, userId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(userId: string, storyId: number) {\n  const userStories = selectUserStories(getGlobal(), userId);\n  if (!userStories || !userStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(userStories.orderedIds, storyId, USER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[userId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = userStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[userId] = (preloadedStories[userId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\nimport useLastCallback from '../useLastCallback';\nimport useLang from '../useLang';\nimport { IS_MOBILE } from '../../util/windowEnvironment';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport { isUserBot } from '../../global/helpers';\nimport { selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst USER_LAST_POLLING_TIME = new Map<string, number>();\nlet USER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(USER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    userIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => USER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  USER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (USER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function useUserStoriesPolling(ids?: string[]) {\n  const users = useMemo(() => {\n    return ids?.map((id) => getGlobal().users.byId[id]).filter(Boolean);\n  }, [ids]);\n\n  const pollableUserIds = useMemo(() => {\n    const global = getGlobal();\n    return users?.filter((user) => {\n      const lastPollingTime = USER_LAST_POLLING_TIME.get(user.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      const status = selectUserStatus(global, user.id);\n      const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n      return !user.isContact && !user.isSelf && !isUserBot(user) && !user.isSupport && isStatusAvailable;\n    }).map((user) => user.id);\n  }, [users]);\n\n  useEffect(() => {\n    if (pollableUserIds?.length) {\n      pollableUserIds.forEach((id) => USER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollableUserIds]);\n}\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Signal } from '../util/signals';\nimport type { Scheduler } from '../util/schedulers';\n\nimport useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\nimport useLastCallback from './useLastCallback';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\n\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport { IS_ELECTRON, SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  userId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadUserStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadUserStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ userId: userId!, storyIds: [storyId!] });\n    };\n  }, [storyId, userId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (userId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, userId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useLayoutEffect, useState, useEffect } from '../lib/teact/teact';\nimport { IS_IOS } from '../util/windowEnvironment';\n\nimport { ElectronEvent } from '../types/electron';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, setIsPlayed: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS)) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const video = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      video!.controls = isEnabled;\n    };\n    const listenerEnter = () => { setIsFullscreen(true); };\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      setIsPlayed(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (video) {\n      video.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      video.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (video) {\n        video.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        video.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(video: HTMLVideoElement) {\n  if (video.requestFullscreen) {\n    video.requestFullscreen();\n  } else if (video.webkitRequestFullscreen) {\n    video.webkitRequestFullscreen();\n  } else if (video.webkitEnterFullscreen) {\n    video.webkitEnterFullscreen();\n  } else if (video.mozRequestFullScreen) {\n    video.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\n\nimport useLastCallback from './useLastCallback';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_DOWNLOADED = 'update-downloaded',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { animate } from './animation';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './windowEnvironment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './windowEnvironment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","has","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","noTransition","renderWaveform","canvas","spikes","progress","peak","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","Math","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","decodeWaveform","encoded5bit","bitsCount","valuesCount","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","val","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","getSeeklineSpikeAmounts","isMobile","withAvatar","MIN_SPIKES","matches","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","canvasRef","waveform","min","durationFactor","spikesCount","Uint8Array","useLayoutEffect","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","peers","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadUserStories","userId","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","deleteLastCharacterOutsideSelection","html","tempInput","document","createElement","contentEditable","position","top","innerHTML","body","appendChild","element","lastChild","textLength","textContent","range","createRange","selection","getSelection","setStart","setEnd","removeAllRanges","addRange","execCommand","removeChild","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","classList","getAttachmentType","attachment","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","source","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","Promise","resolve","reject","onstop","Blob","onerror","delayStop","setTimeout","pause","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","RE_COMMAND","isFrozen","URL_ENTITIES","ApiMessageEntityTypes","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","all","file","name","concat","isOpen","DropArea","useModuleLoader","Bundles","AttachmentModal","PollModal","DeleteMessageModal","SendAsMenu","MentionTooltip","BotCommandTooltip","InlineBotTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","replyingToId","selectReplyingToId","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","selectChatMessage","sender","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","setReplyingToId","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","leftIcon","customText","strippedMessage","strippedText","onContextMenu","EmbeddedMessage","hasContextMenu","faded","Menu","onClose","onCloseAnimationEnd","MenuItem","customIcon","MenuSeparator","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","isDisabled","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","disabled","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","bot","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","isMenuOpen","openMenu","closeMenu","menuPosition","setMenuPosition","rect","currentTarget","right","bottom","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","botId","isEnabled","AttachBotIcon","shortName","Portal","autoClose","destructive","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","shouldCollectDebugLogs","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","peerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","AttachBotItem","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","BotCommandMenu","StickerTooltip","MainButtonState","VOICE_RECORDING_FILENAME","_ref5","_ref6","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","tabState","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","draft","selectDraft","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","dropAreaState","isReady","onDropHide","onFocus","onBlur","storyId","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","inputRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isEditing","updateDraft","prevState","_prevState$chatId","_prevState$threadId","_prevState$chatId2","_prevState$threadId2","updateDraftRef","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useEffectWithPrevDeps","prevThreadId","prevDraft","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","forceUpdateDraft","scopedShatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","action","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","localOnly","handleSendAttachments","handleSend","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleReactionPickerOpen","storyUserId","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","withQuick","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","onMediaClick","dispatch","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleClick","thumbnailDataUri","actionIcon","isMessageDocumentVideo","isProtected","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","observeIntersectionForPlaying","mediaBlobUrl","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","getMessageIsSpoiler","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","handleMouseDown","useFastClick","getUserColorKey","onMouseDown","getPictogramDimensions","srcUrl","MediaSpoiler","isVisible","renderPictogram","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","getMessageVideo","hasSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","withAnimation","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","Checkbox","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","userStatus","selectUserStatus","statusIcon","withStory","emojiStatusSize","noEmojiStatus","adminMember","customTitle","isOwner","storyViewerMode","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","selectorToPreventScroll","onSwipe","direction","SwipeDirection","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","onEmojiStatusClick","canCopyTitle","ProfilePhoto","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","CustomEmoji","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","contentForStatusMenuContext","arg","noPlay","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","noShowPremium","sharedCanvasRef","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","isPremium","stickerSetInfo","isLocked","shouldPlay","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleOpenSet","handleEmojiStatusExpiresClick","emojiStatus","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","withSharedAnimation","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","contentNotSupportedText","renderTextWithEntities","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","onDragEnter","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","get","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withPortalForMenu","withStoryGap","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","AnimatedIconFromSticker","fluid","pill","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","archiveUnreadCount","useFolderManagerForUnreadCounters","chatsCount","previewItems","arr","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","buttonClassName","Badge","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","isArchived","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","useUserStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","hash","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","isChatGroup","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","r","videoTs","videoSizes","videoStartTs","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","premiumGiftSticker","premiumGifts","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","months","play","noLoop","nonInteractive","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","menuButtonRef","setIsMenuOpen","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","onTrigger","DropdownMenu","trigger","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","containerId","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","isTouched","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","parentNode","iterations","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","htmlBeforeSelection","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","uncompressEmoji","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","story","isPreview","isConnected","openStoryViewer","loadUserStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSingleUser","isSingleStory","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","useLayoutEffectWithPrevDeps","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","AnimatedSticker","onEnded","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","previewClassNames","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","_text$length","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","toggleStoriesHidden","useStoryPreloader","isDense","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchiveUser","hasUnreadStories","orderedUserIds","active","archived","stories","isClosing","useHorizontalScroll","StoryRibbonButton","storyViewer","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadUserIds","withStorySolid","preloadedStories","canPreload","aroundStoryId","byUserId","mediaHashes","head","preload","autoplay","preloadProgressive","preloadHashes","userStories","selectUserStories","preloadIds","currentId","aroundAmount","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","USER_LAST_POLLING_TIME","USER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","pollableUserIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","callback","lastCallback","onBeforeUnload","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","_dependencies","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","setIsPlayed","isFullscreen","setIsFullscreen","listener","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","fullscreenProp","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","useInputFocusOnOpen","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","_signalRef$current","signalRef","effect","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","shouldReturnMutationFn","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","index","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","touches","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","onWheelDrag","isNotPassive","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","contains","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","INS","S","STRIKE","PRE","BLOCKQUOTE","withMarkdownLinks","skipMarkdown","parseMarkdown","parseMarkdownLinks","fixImageContent","trimShift","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","getEntityDataFromNode","hasChildNodes","parsedHtml","rawText","getEntityTypeFromNode","rawIndex","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}